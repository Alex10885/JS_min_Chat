{"version":3,"names":["cov_oy3zxxp6x","actualCoverage","express","s","require","body","channelController","authenticateToken","apiRateLimiter","router","Router","console","log","get","getAllChannels","post","isLength","min","max","trim","escape","isIn","optional","createChannel","getChannelById","put","updateChannel","delete","deleteChannel","module","exports"],"sources":["channels.js"],"sourcesContent":["const express = require('express');\nconst { body } = require('express-validator');\nconst channelController = require('../controllers/channelController');\nconst { authenticateToken } = require('../middleware/auth');\nconst { apiRateLimiter } = require('../config/rateLimit');\n\nconst router = express.Router();\n\nconsole.log('ðŸ”§ GET /api/channels route registered at startup');\n\n/**\n * @swagger\n * /api/channels:\n *   get:\n *     tags:\n *       - Channels\n *     summary: Get list of channels\n *     description: Retrieves a list of all available channels\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: List of channels\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Channel'\n *             example:\n *               - id: \"general\"\n *                 name: \"General\"\n *                 type: \"text\"\n *                 description: \"\"\n *                 createdBy: \"system\"\n *                 position: 0\n *       401:\n *         description: Unauthorized\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ErrorResponse'\n *             example:\n *               error: \"Access token required\"\n *       500:\n *         description: Internal server error\n */\nrouter.get('/', authenticateToken, apiRateLimiter, channelController.getAllChannels);\n\nconsole.log('ðŸ”§ POST /api/channels route registered at startup');\n\n/**\n * @swagger\n * /api/channels:\n *   post:\n *     tags:\n *       - Channels\n *     summary: Create a new channel\n *     description: Creates a new text or voice channel\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/ChannelRequest'\n *           example:\n *             name: \"NewChannel\"\n *             type: \"text\"\n *             description: \"Description of the new channel\"\n *     responses:\n *       201:\n *         description: Channel created successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Channel'\n *             example:\n *               id: \"newchannel\"\n *               name: \"NewChannel\"\n *               type: \"text\"\n *               description: \"Description of the new channel\"\n *               createdBy: \"john_doe\"\n *               position: 10\n *       400:\n *         description: Invalid request data\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ErrorResponse'\n *       401:\n *         description: Unauthorized\n *       409:\n *         description: Channel name already exists\n *       500:\n *         description: Server error\n */\nrouter.post('/', authenticateToken, apiRateLimiter, [\n  body('name').isLength({ min: 1, max: 100 }).trim().escape(),\n  body('type').isIn(['text', 'voice']).trim(),\n  body('description').optional().isLength({ max: 500 }).trim()\n], channelController.createChannel);\n\nrouter.get('/:channelId', authenticateToken, apiRateLimiter, channelController.getChannelById);\nrouter.put('/:channelId', authenticateToken, apiRateLimiter, channelController.updateChannel);\nrouter.delete('/:channelId', authenticateToken, apiRateLimiter, channelController.deleteChannel);\n\nmodule.exports = router;"],"mappings":"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","ignoreList":[]}