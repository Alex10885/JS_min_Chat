{"version":3,"names":["request","require","jwt","User","Channel","UserTestHelper","constructor","createdUsers","createUser","userData","defaultData","nickname","Date","now","Math","random","toString","substr","email","password","finalData","user","save","push","error","Error","message","getUser","options","length","createIfNone","userId","find","u","_id","getToken","targetUser","sign","id","role","process","env","JWT_SECRET","expiresIn","cleanup","findByIdAndDelete","console","warn","ChannelTestHelper","createdChannels","createChannel","channelData","name","type","channel","getChannel","channelId","c","HTTPTestHelper","app","authToken","userHelper","authenticate","getRequest","req","set","login","credentials","creds","identifier","post","send","then","response","body","token","register","DatabaseTestHelper","cleanupCollections","collections","mongoose","connection","Object","keys","collection","deleteMany","isConnected","readyState","waitForConnection","timeout","Promise","resolve","reject","timer","setTimeout","once","clearTimeout","TestFixtureHelper","channelHelper","fixtures","Map","create","factory","load","get","clear","SocketTestHelper","io","port","connectedClients","createClient","clientOptions","forceNew","client","connect","disconnect","on","disconnectClient","delete","disconnectAll","values","waitForEvent","eventName","resolved","off","eventHandler","timeoutId","data","assertHelpers","assertResponseSuccess","status","JSON","stringify","assertHasProperties","object","properties","prop","hasOwnProperty","assertNotEmpty","array","Array","isArray","module","exports"],"sources":["testHelpers.js"],"sourcesContent":["// Shared test helpers for backend testing\n\nconst request = require('supertest');\nconst jwt = require('jsonwebtoken');\nconst User = require('../../models/User');\nconst Channel = require('../../models/Channel');\n\n// User test helpers\nclass UserTestHelper {\n  constructor() {\n    this.createdUsers = [];\n  }\n\n  async createUser(userData = {}) {\n    const defaultData = {\n      nickname: `testuser_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      email: `test${Date.now()}@example.com`,\n      password: 'password123'\n    };\n\n    const finalData = { ...defaultData, ...userData };\n    const user = new User(finalData);\n\n    try {\n      await user.save();\n      this.createdUsers.push(user);\n      return user;\n    } catch (error) {\n      throw new Error(`Failed to create test user: ${error.message}`);\n    }\n  }\n\n  async getUser(options = {}) {\n    if (!this.createdUsers.length && !options.createIfNone) {\n      throw new Error('No test users available');\n    }\n\n    if (!this.createdUsers.length && options.createIfNone) {\n      return this.createUser();\n    }\n\n    return options.userId\n      ? this.createdUsers.find(u => u._id === options.userId)\n      : this.createdUsers[this.createdUsers.length - 1];\n  }\n\n  async getToken(user = null) {\n    const targetUser = user || await this.getUser();\n    return jwt.sign(\n      { id: targetUser._id, nickname: targetUser.nickname, role: targetUser.role },\n      process.env.JWT_SECRET,\n      { expiresIn: '24h' }\n    );\n  }\n\n  async cleanup() {\n    for (const user of this.createdUsers) {\n      try {\n        await User.findByIdAndDelete(user._id);\n      } catch (error) {\n        console.warn(`Failed to cleanup test user ${user._id}:`, error.message);\n      }\n    }\n    this.createdUsers = [];\n  }\n}\n\n// Channel test helpers\nclass ChannelTestHelper {\n  constructor() {\n    this.createdChannels = [];\n  }\n\n  async createChannel(channelData = {}) {\n    const defaultData = {\n      id: `channel_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      name: `Test Channel ${Date.now()}`,\n      type: 'text'\n    };\n\n    const finalData = { ...defaultData, ...channelData };\n    const channel = new Channel(finalData);\n\n    try {\n      await channel.save();\n      this.createdChannels.push(channel);\n      return channel;\n    } catch (error) {\n      throw new Error(`Failed to create test channel: ${error.message}`);\n    }\n  }\n\n  async getChannel(options = {}) {\n    if (!this.createdChannels.length && !options.createIfNone) {\n      throw new Error('No test channels available');\n    }\n\n    if (!this.createdChannels.length && options.createIfNone) {\n      return this.createChannel();\n    }\n\n    return options.channelId\n      ? this.createdChannels.find(c => c._id === options.channelId)\n      : this.createdChannels[this.createdChannels.length - 1];\n  }\n\n  async cleanup() {\n    for (const channel of this.createdChannels) {\n      try {\n        await Channel.findByIdAndDelete(channel._id);\n      } catch (error) {\n        console.warn(`Failed to cleanup test channel ${channel._id}:`, error.message);\n      }\n    }\n    this.createdChannels = [];\n  }\n}\n\n// HTTP test helpers\nclass HTTPTestHelper {\n  constructor(app) {\n    this.app = app;\n    this.authToken = null;\n    this.userHelper = new UserTestHelper();\n  }\n\n  async authenticate(user = null) {\n    const targetUser = user || await this.userHelper.createUser();\n    this.authToken = await this.userHelper.getToken(targetUser);\n    return targetUser;\n  }\n\n  getRequest(options = {}) {\n    let req = request(this.app);\n\n    if (this.authToken) {\n      req.set('Authorization', `Bearer ${this.authToken}`);\n    }\n\n    return req;\n  }\n\n  async login(credentials = null) {\n    if (credentials) {\n      const creds = {\n        identifier: credentials.identifier || credentials.email || credentials.nickname,\n        password: credentials.password\n      };\n\n      return this.getRequest()\n        .post('/login')\n        .send(creds)\n        .then(response => {\n          this.authToken = response.body.token;\n          return response;\n        });\n    }\n\n    const user = await this.authenticate();\n    return { user };\n  }\n\n  async register(userData = {}) {\n    const user = await this.userHelper.createUser(userData);\n\n    return this.getRequest()\n      .post('/register')\n      .send({\n        nickname: user.nickname,\n        email: user.email,\n        password: userData.password || 'password123'\n      });\n  }\n\n  async cleanup() {\n    await this.userHelper.cleanup();\n    this.authToken = null;\n  }\n}\n\n// Database test helpers\nclass DatabaseTestHelper {\n  static async cleanupCollections(collections = null) {\n    const mongoose = require('mongoose');\n    const connection = mongoose.connection;\n\n    if (!collections) {\n      collections = Object.keys(connection.collections);\n    }\n\n    for (const collection of collections) {\n      try {\n        await connection.collections[collection].deleteMany({});\n      } catch (error) {\n        console.warn(`Failed to cleanup collection ${collection}:`, error.message);\n      }\n    }\n  }\n\n  static isConnected() {\n    const mongoose = require('mongoose');\n    return mongoose.connection.readyState === 1;\n  }\n\n  static async waitForConnection(timeout = 10000) {\n    const mongoose = require('mongoose');\n\n    if (mongoose.connection.readyState === 1) {\n      return true;\n    }\n\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(new Error(`Database connection timeout after ${timeout}ms`));\n      }, timeout);\n\n      mongoose.connection.once('connected', () => {\n        clearTimeout(timer);\n        resolve(true);\n      });\n\n      if (mongoose.connection.readyState === 99) { // disconnected\n        mongoose.connection.once('error', (error) => {\n          clearTimeout(timer);\n          reject(error);\n        });\n      }\n    });\n  }\n}\n\n// Test fixture helpers\nclass TestFixtureHelper {\n  constructor() {\n    this.userHelper = new UserTestHelper();\n    this.channelHelper = new ChannelTestHelper();\n    this.fixtures = new Map();\n  }\n\n  create(name, factory) {\n    this.fixtures.set(name, factory);\n    return this;\n  }\n\n  async load(name) {\n    const factory = this.fixtures.get(name);\n    if (!factory) {\n      throw new Error(`Fixture '${name}' not found`);\n    }\n\n    if (typeof factory === 'function') {\n      return await factory(this);\n    }\n\n    return factory;\n  }\n\n  async cleanup() {\n    await this.userHelper.cleanup();\n    await this.channelHelper.cleanup();\n    this.fixtures.clear();\n  }\n}\n\n// Socket test helpers\nclass SocketTestHelper {\n  constructor(io, port) {\n    this.io = io;\n    this.port = port;\n    this.connectedClients = new Map();\n  }\n\n  createClient(options = {}) {\n    return new Promise((resolve, reject) => {\n      const clientOptions = {\n        forceNew: true,\n        timeout: 5000,\n        ...options\n      };\n\n      const client = this.io.connect(`http://localhost:${this.port}`, clientOptions);\n\n      const timeout = setTimeout(() => {\n        client.disconnect();\n        reject(new Error('Socket connection timeout'));\n      }, clientOptions.timeout);\n\n      client.on('connect', () => {\n        clearTimeout(timeout);\n        this.connectedClients.set(client.id, client);\n        resolve(client);\n      });\n\n      client.on('connect_error', (error) => {\n        clearTimeout(timeout);\n        reject(error);\n      });\n    });\n  }\n\n  async disconnectClient(client) {\n    if (client) {\n      client.disconnect();\n      this.connectedClients.delete(client.id);\n    }\n  }\n\n  async disconnectAll() {\n    for (const client of this.connectedClients.values()) {\n      await this.disconnectClient(client);\n    }\n    this.connectedClients.clear();\n  }\n\n  async waitForEvent(client, eventName, timeout = 5000) {\n    return new Promise((resolve, reject) => {\n      let resolved = false;\n\n      const cleanup = () => {\n        client.off(eventName, eventHandler);\n        clearTimeout(timeoutId);\n      };\n\n      const eventHandler = (data) => {\n        if (!resolved) {\n          resolved = true;\n          cleanup();\n          resolve(data);\n        }\n      };\n\n      const timeoutId = setTimeout(() => {\n        if (!resolved) {\n          resolved = true;\n          cleanup();\n          reject(new Error(`Timeout waiting for event: ${eventName}`));\n        }\n      }, timeout);\n\n      client.on(eventName, eventHandler);\n    });\n  }\n}\n\n// Assertions helpers\nconst assertHelpers = {\n  assertResponseSuccess: (response, status = 200) => {\n    if (response.status !== status) {\n      throw new Error(`Expected status ${status}, got ${response.status}. Response: ${JSON.stringify(response.body)}`);\n    }\n    return response;\n  },\n\n  assertHasProperties: (object, properties) => {\n    for (const prop of properties) {\n      if (!object.hasOwnProperty(prop)) {\n        throw new Error(`Object missing property: ${prop}. Object: ${JSON.stringify(object)}`);\n      }\n    }\n    return object;\n  },\n\n  assertNotEmpty: (array) => {\n    if (!Array.isArray(array) || array.length === 0) {\n      throw new Error(`Expected non-empty array, got: ${JSON.stringify(array)}`);\n    }\n    return array;\n  }\n};\n\nmodule.exports = {\n  UserTestHelper,\n  ChannelTestHelper,\n  HTTPTestHelper,\n  DatabaseTestHelper,\n  TestFixtureHelper,\n  SocketTestHelper,\n  assertHelpers\n};"],"mappings":"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","ignoreList":[]}