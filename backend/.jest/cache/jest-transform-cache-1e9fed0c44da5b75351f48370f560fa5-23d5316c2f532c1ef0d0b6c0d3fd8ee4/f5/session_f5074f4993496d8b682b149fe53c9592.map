{"version":3,"names":["cov_22vlcxzn2h","actualCoverage","redisManager","s","require","CustomRedisStore","constructor","options","b","f","prefix","ttl","get","sessionId","callback","isClientReady","sessionKey","sessionData","getCache","error","set","session","setCache","destroy","deleteCache","all","length","clear","touch","RedisStore","config","sessionConfig","secret","security","sessionSecret","resave","saveUninitialized","store","client","getClient","redis","keyPrefix","sessionPrefix","sessionTTL","disableTouch","touchAfter","cookie","secure","server","nodeEnv","httpOnly","maxAge","sameSite","name","rolling","rollingExpire","unset","module","exports"],"sources":["session.js"],"sourcesContent":["const { redisManager } = require('./redis');\n\n// Custom Redis Session Store\nclass CustomRedisStore {\n  constructor(options = {}) {\n    this.prefix = options.prefix || 'session:';\n    this.ttl = options.ttl || 3600;\n  }\n\n  async get(sessionId, callback) {\n    try {\n      if (!redisManager.isClientReady()) {\n        return callback(null, null);\n      }\n      const sessionKey = this.prefix + sessionId;\n      const sessionData = await redisManager.getCache(sessionKey);\n      callback(null, sessionData);\n    } catch (error) {\n      callback(error);\n    }\n  }\n\n  async set(sessionId, session, callback) {\n    try {\n      if (!redisManager.isClientReady()) {\n        return callback();\n      }\n      const sessionKey = this.prefix + sessionId;\n      await redisManager.setCache(sessionKey, session, this.ttl);\n      callback(null);\n    } catch (error) {\n      callback(error);\n    }\n  }\n\n  async destroy(sessionId, callback) {\n    try {\n      if (!redisManager.isClientReady()) {\n        return callback();\n      }\n      const sessionKey = this.prefix + sessionId;\n      await redisManager.deleteCache(sessionKey);\n      callback(null);\n    } catch (error) {\n      callback(error);\n    }\n  }\n\n  all(callback) {\n    // For development/debugging only - expensive operation\n    callback(null, {});\n  }\n\n  length(callback) {\n    // For development/debugging only\n    callback(null, 0);\n  }\n\n  clear(callback) {\n    callback(null);\n  }\n\n  touch(sessionId, session, callback) {\n    // Update TTL on touch (session access)\n    this.set(sessionId, session, callback);\n  }\n}\n\nconst RedisStore = CustomRedisStore;\nconst config = require('./index');\n\nconst sessionConfig = {\n  secret: config.security.sessionSecret,\n  resave: false,\n  saveUninitialized: false,\n  store: new RedisStore({\n    client: redisManager.getClient(),\n    prefix: config.redis.keyPrefix + config.redis.sessionPrefix,\n    ttl: config.redis.sessionTTL, // Use Redis TTL from config\n    disableTouch: false, // Allow session touch updates\n    touchAfter: 1 * 3600 // Limit session saves to every 1 hour to reduce Redis load\n  }),\n  cookie: {\n    secure: config.server.nodeEnv === 'production', // HTTPS only in production\n    httpOnly: true, // Prevent XSS access to cookie\n    maxAge: 2 * 60 * 60 * 1000, // 2 hours active session time\n    sameSite: 'strict' // Enhanced CSRF protection - stricter than 'lax'\n  },\n  name: 'chatSession', // Custom name to avoid default 'connect.sid'\n  rolling: true, // Extend cookie expiration on each request (sliding expiration)\n  rollingExpire: 2 * 60 * 60 * 1000, // Reset maxAge to 2 hours on activity\n  unset: 'destroy' // Destroy session on logout\n};\n\nmodule.exports = sessionConfig;"],"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","ignoreList":[]}