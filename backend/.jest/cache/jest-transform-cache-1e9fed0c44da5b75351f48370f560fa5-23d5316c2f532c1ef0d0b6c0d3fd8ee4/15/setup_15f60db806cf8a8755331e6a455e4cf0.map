{"version":3,"names":["mongoose","require","MongoMemoryServer","connectDB","closeDB","TestFixtures","originalMongoUri","mongod","beforeAll","global","gc","process","env","MONGODB_URI","create","binary","version","mongoUri","getUri","NODE_ENV","JWT_SECRET","console","log","setup","afterAll","cleanup","stop","afterEach","connection","readyState","collections","key","deleteMany","jest","setTimeout","NODE_TEST_TIMEOUT","set"],"sources":["setup.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst { MongoMemoryServer } = require('mongodb-memory-server');\nconst { connectDB, closeDB } = require('../db/connection');\nconst { TestFixtures } = require('./shared/testFixtures');\n\nlet originalMongoUri;\nlet mongod;\n\nbeforeAll(async () => {\n    // Enable garbage collection for performance optimization\n    if (global.gc) {\n      global.gc();\n    }\n\n    // Save original MongoDB URI\n    originalMongoUri = process.env.MONGODB_URI;\n\n    // Start in-memory MongoDB server for tests with compatible version\n    mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.8' // Compatible version for debian-x64\n      }\n    });\n    const mongoUri = mongod.getUri();\n\n    // Set test environment variables\n    process.env.NODE_ENV = 'test';\n    process.env.MONGODB_URI = mongoUri;\n    process.env.JWT_SECRET = 'your_super_secure_jwt_secret_key_here_replace_in_production';\n\n    // Connect to in-memory test database\n    await connectDB();\n\n    // Setup reusable fixtures for faster test execution\n    console.log('Setting up test fixtures...');\n    await TestFixtures.setup();\n});\n\nafterAll(async () => {\n     // console.log('Cleaning up test fixtures...'); // Disabled to avoid mocking issues\n     await TestFixtures.cleanup();\n     await closeDB();\n\n     // Stop the in-memory MongoDB server\n     if (mongod) {\n       await mongod.stop();\n     }\n\n     // Restore original URI if needed\n     process.env.MONGODB_URI = originalMongoUri;\n\n     // Final garbage collection\n     if (global.gc) {\n       global.gc();\n     }\n });\n\nafterEach(async () => {\n    // Clear all collections after each test\n    if (mongoose.connection.readyState === 1) { // Connected\n      const collections = mongoose.connection.collections;\n      for (const key in collections) {\n        await collections[key].deleteMany({});\n      }\n    }\n });\n\n// Global test timeouts and stabilization\njest.setTimeout(30000);  // 30 second global timeout\nprocess.env.NODE_TEST_TIMEOUT = 25000;  // Custom env for HTTP tests\n\n// Increase socket timeout for database operations\nmongoose.set('bufferCommands', false);  // Disable mongoose buffering\nmongoose.set('maxTimeMS', 20000);      // 20 second limit for operations"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAM;EAAEC;AAAkB,CAAC,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC9D,MAAM;EAAEE,SAAS;EAAEC;AAAQ,CAAC,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC1D,MAAM;EAAEI;AAAa,CAAC,GAAGJ,OAAO,CAAC,uBAAuB,CAAC;AAEzD,IAAIK,gBAAgB;AACpB,IAAIC,MAAM;AAEVC,SAAS,CAAC,YAAY;EAClB;EACA,IAAIC,MAAM,CAACC,EAAE,EAAE;IACbD,MAAM,CAACC,EAAE,CAAC,CAAC;EACb;;EAEA;EACAJ,gBAAgB,GAAGK,OAAO,CAACC,GAAG,CAACC,WAAW;;EAE1C;EACAN,MAAM,GAAG,MAAML,iBAAiB,CAACY,MAAM,CAAC;IACtCC,MAAM,EAAE;MACNC,OAAO,EAAE,OAAO,CAAC;IACnB;EACF,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGV,MAAM,CAACW,MAAM,CAAC,CAAC;;EAEhC;EACAP,OAAO,CAACC,GAAG,CAACO,QAAQ,GAAG,MAAM;EAC7BR,OAAO,CAACC,GAAG,CAACC,WAAW,GAAGI,QAAQ;EAClCN,OAAO,CAACC,GAAG,CAACQ,UAAU,GAAG,6DAA6D;;EAEtF;EACA,MAAMjB,SAAS,CAAC,CAAC;;EAEjB;EACAkB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1C,MAAMjB,YAAY,CAACkB,KAAK,CAAC,CAAC;AAC9B,CAAC,CAAC;AAEFC,QAAQ,CAAC,YAAY;EAChB;EACA,MAAMnB,YAAY,CAACoB,OAAO,CAAC,CAAC;EAC5B,MAAMrB,OAAO,CAAC,CAAC;;EAEf;EACA,IAAIG,MAAM,EAAE;IACV,MAAMA,MAAM,CAACmB,IAAI,CAAC,CAAC;EACrB;;EAEA;EACAf,OAAO,CAACC,GAAG,CAACC,WAAW,GAAGP,gBAAgB;;EAE1C;EACA,IAAIG,MAAM,CAACC,EAAE,EAAE;IACbD,MAAM,CAACC,EAAE,CAAC,CAAC;EACb;AACJ,CAAC,CAAC;AAEHiB,SAAS,CAAC,YAAY;EAClB;EACA,IAAI3B,QAAQ,CAAC4B,UAAU,CAACC,UAAU,KAAK,CAAC,EAAE;IAAE;IAC1C,MAAMC,WAAW,GAAG9B,QAAQ,CAAC4B,UAAU,CAACE,WAAW;IACnD,KAAK,MAAMC,GAAG,IAAID,WAAW,EAAE;MAC7B,MAAMA,WAAW,CAACC,GAAG,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC;IACvC;EACF;AACH,CAAC,CAAC;;AAEH;AACAC,IAAI,CAACC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;AACzBvB,OAAO,CAACC,GAAG,CAACuB,iBAAiB,GAAG,KAAK,CAAC,CAAE;;AAExC;AACAnC,QAAQ,CAACoC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAE;AACxCpC,QAAQ,CAACoC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAM","ignoreList":[]}