{"version":3,"names":["cov_2pl2nr1zah","actualCoverage","mongoose","s","require","winston","logger","createLogger","level","format","combine","timestamp","errors","stack","json","defaultMeta","service","transports","File","filename","Console","colorize","simple","connectDB","f","conn","connect","process","env","MONGODB_URI","info","connection","host","on","err","error","warn","exit","closeDB","close","module","exports"],"sources":["connection.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst winston = require('winston');\n\nconst logger = winston.createLogger({\n  level: 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'database' },\n  transports: [\n    new winston.transports.File({ filename: 'logs/database.log' }),\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple()\n      )\n    })\n  ]\n});\n\nconst connectDB = async () => {\n  try {\n    const conn = await mongoose.connect(process.env.MONGODB_URI, {\n      // Modern Mongoose doesn't need these options, but keeping for compatibility\n      // useNewUrlParser: true,\n      // useUnifiedTopology: true,\n    });\n\n    logger.info(`MongoDB Connected: ${conn.connection.host}`);\n\n    // Handle connection events\n    mongoose.connection.on('error', (err) => {\n      logger.error('Database connection error:', err);\n    });\n\n    mongoose.connection.on('disconnected', () => {\n      logger.warn('Database disconnected');\n    });\n\n    mongoose.connection.on('reconnected', () => {\n      logger.info('Database reconnected');\n    });\n\n    return conn;\n  } catch (error) {\n    logger.error('Database connection failed:', error);\n    process.exit(1);\n  }\n};\n\nconst closeDB = async () => {\n  try {\n    await mongoose.connection.close();\n    logger.info('Database connection closed');\n  } catch (error) {\n    logger.error('Error closing database connection:', error);\n  }\n};\n\nmodule.exports = { connectDB, closeDB };"],"mappings":"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","ignoreList":[]}