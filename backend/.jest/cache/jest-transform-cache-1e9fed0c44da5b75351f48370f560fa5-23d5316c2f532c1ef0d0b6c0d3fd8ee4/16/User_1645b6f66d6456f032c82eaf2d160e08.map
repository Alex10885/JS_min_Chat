{"version":3,"names":["mongoose","require","bcrypt","crypto","userSchema","Schema","nickname","type","String","required","unique","trim","minlength","maxlength","index","email","lowercase","password","role","enum","default","createdAt","Date","now","lastActive","status","banned","Boolean","banReason","banExpires","warnings","reason","issuedBy","Types","ObjectId","ref","issuedAt","expires","muteExpires","failedLoginAttempts","Number","lastFailedAttempt","accountLockedUntil","captchaRequired","securityToken","twoFactorEnabled","twoFactorSecret","backupCodes","twoFactorMethod","last2FACode","last2FACodeExpiry","resetPasswordToken","resetPasswordExpires","moderationToken","moderationTokenExpires","pre","next","isModified","console","log","salt","genSalt","hash","error","message","methods","comparePassword","candidatePassword","compare","generateResetToken","resetToken","randomBytes","toString","createHash","update","digest","resetPassword","token","newPassword","hashedToken","Error","save","ban","duration","unban","isBanned","warn","warning","push","cleanWarnings","filter","getActiveWarningsCount","length","mute","unmute","isMuted","generateModerationToken","then","verifyModerationToken","hasModeratorPrivileges","hasAdminPrivileges","isAccountLocked","incFailedAttempts","resetFailedAttempts","generateSecurityToken","clearSecurityToken","generate2FASecret","speakeasy","secret","generateSecret","name","issuer","base32","enable2FA","method","i","code","toUpperCase","disable2FA","verify2FACode","useBackup","includes","bc","totp","verify","encoding","window","toJSON","userObject","toObject","module","exports","model"],"sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst crypto = require('crypto');\n\nconst userSchema = new mongoose.Schema({\n  nickname: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    minlength: 3,\n    maxlength: 50,\n    index: true // Remove duplicate index call below\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n    index: true // Remove duplicate index call below\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'moderator', 'member'],\n    default: 'member'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  lastActive: {\n    type: Date,\n    default: Date.now\n  },\n  status: {\n    type: String,\n    enum: ['online', 'offline'],\n    default: 'offline'\n  },\n  // Moderation fields\n  banned: {\n    type: Boolean,\n    default: false\n  },\n  banReason: {\n    type: String,\n    default: null\n  },\n  banExpires: {\n    type: Date,\n    default: null\n  },\n  warnings: [{\n    reason: String,\n    issuedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    issuedAt: { type: Date, default: Date.now },\n    expires: Date\n  }],\n  muteExpires: {\n    type: Date,\n    default: null\n  },\n  // Security fields for brute-force protection\n  failedLoginAttempts: {\n    type: Number,\n    default: 0\n  },\n  lastFailedAttempt: {\n    type: Date,\n    default: null\n  },\n  accountLockedUntil: {\n    type: Date,\n    default: null\n  },\n  captchaRequired: {\n    type: Boolean,\n    default: false\n  },\n  securityToken: {\n    type: String,\n    default: null\n  },\n  // Two-Factor Authentication (2FA/OTP) fields\n  twoFactorEnabled: {\n    type: Boolean,\n    default: false\n  },\n  twoFactorSecret: {\n    type: String,\n    default: null\n  },\n  backupCodes: [{\n    type: String,\n    default: []\n  }],\n  twoFactorMethod: {\n    type: String,\n    enum: ['TOTP', 'SMS', 'EMAIL'],\n    default: 'TOTP'\n  },\n  last2FACode: {\n    type: String,\n    default: null\n  },\n  last2FACodeExpiry: {\n    type: Date,\n    default: null\n  },\n  // Temporary tokens\n  resetPasswordToken: {\n    type: String,\n    default: null\n  },\n  resetPasswordExpires: {\n    type: Date,\n    default: null\n  },\n  moderationToken: {\n    type: String,\n    default: null\n  },\n  moderationTokenExpires: {\n    type: Date,\n    default: null\n  }\n});\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n   if (!this.isModified('password')) return next();\n\n   console.log('Hashing password for user:', this.nickname);\n   try {\n     const salt = await bcrypt.genSalt(12);\n     console.log('Salt generated:', salt);\n     this.password = await bcrypt.hash(this.password, salt);\n     console.log('Password hashed successfully');\n     next();\n   } catch (error) {\n     console.error('Error hashing password:', error.message);\n     next(error);\n   }\n });\n\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\n// Generate reset password token\nuserSchema.methods.generateResetToken = function() {\n  // Generate random token\n  const resetToken = crypto.randomBytes(32).toString('hex');\n\n  // Hash token before storing\n  this.resetPasswordToken = crypto\n    .createHash('sha256')\n    .update(resetToken)\n    .digest('hex');\n\n  // Set expiration (1 hour from now)\n  this.resetPasswordExpires = Date.now() + 60 * 60 * 1000; // 1 hour\n\n  return resetToken;\n};\n\n// Reset password using token\nuserSchema.methods.resetPassword = function(token, newPassword) {\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(token)\n    .digest('hex');\n\n  if (hashedToken !== this.resetPasswordToken) {\n    throw new Error('Invalid or expired password reset token');\n  }\n\n  if (Date.now() > this.resetPasswordExpires) {\n    throw new Error('Password reset token has expired');\n  }\n\n  this.password = newPassword;\n  this.resetPasswordToken = null;\n  this.resetPasswordExpires = null;\n\n  return this.save();\n};\n\n// Ban user\nuserSchema.methods.ban = function(reason, duration = null, issuedBy = null) {\n  this.banned = true;\n  this.banReason = reason;\n  if (duration) {\n    this.banExpires = new Date(Date.now() + duration);\n  } else {\n    this.banExpires = null; // permanent ban\n  }\n  return this.save();\n};\n\n// Unban user\nuserSchema.methods.unban = function() {\n  this.banned = false;\n  this.banReason = null;\n  this.banExpires = null;\n  return this.save();\n};\n\n// Check if user is banned and if ban is active\nuserSchema.methods.isBanned = function() {\n  if (!this.banned) return false;\n  if (!this.banExpires) return true; // permanent ban\n  return this.banExpires > new Date(); // temporary ban still active\n};\n\n// Add warning to user\nuserSchema.methods.warn = function(reason, issuedBy, duration = null) {\n  const warning = {\n    reason: reason,\n    issuedBy: issuedBy,\n    issuedAt: new Date(),\n    expires: duration ? new Date(Date.now() + duration) : null\n  };\n  this.warnings.push(warning);\n  return this.save();\n};\n\n// Remove expired warnings\nuserSchema.methods.cleanWarnings = function() {\n  this.warnings = this.warnings.filter(warning => {\n    return !warning.expires || warning.expires > new Date();\n  });\n  return this.save();\n};\n\n// Get active warnings count\nuserSchema.methods.getActiveWarningsCount = function() {\n  this.cleanWarnings();\n  return this.warnings.length;\n};\n\n// Mute user (for chat)\nuserSchema.methods.mute = function(duration = 3600000) { // default 1 hour\n  this.muteExpires = new Date(Date.now() + duration);\n  return this.save();\n};\n\n// Unmute user\nuserSchema.methods.unmute = function() {\n  this.muteExpires = null;\n  return this.save();\n};\n\n// Check if user is muted\nuserSchema.methods.isMuted = function() {\n  return this.muteExpires && this.muteExpires > new Date();\n};\n\n// Generate moderation token for admin actions\nuserSchema.methods.generateModerationToken = function() {\n  const moderationToken = crypto.randomBytes(32).toString('hex');\n  this.moderationToken = crypto\n    .createHash('sha256')\n    .update(moderationToken)\n    .digest('hex');\n  this.moderationTokenExpires = Date.now() + 3600000; // 1 hour\n  return this.save().then(() => moderationToken);\n};\n\n// Verify moderation token\nuserSchema.methods.verifyModerationToken = function(token) {\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(token)\n    .digest('hex');\n\n  if (hashedToken !== this.moderationToken) {\n    throw new Error('Invalid moderation token');\n  }\n\n  if (Date.now() > this.moderationTokenExpires) {\n    throw new Error('Moderation token expired');\n  }\n\n  this.moderationToken = null;\n  this.moderationTokenExpires = null;\n  return this.save();\n};\n\n// Check if user has moderator/admin permissions\nuserSchema.methods.hasModeratorPrivileges = function() {\n  return this.role === 'admin' || this.role === 'moderator';\n};\n\nuserSchema.methods.hasAdminPrivileges = function() {\n  return this.role === 'admin';\n};\n\n// Check if account is locked\nuserSchema.methods.isAccountLocked = function() {\n  if (!this.accountLockedUntil) return false;\n  return this.accountLockedUntil > new Date();\n};\n\n// Increment failed login attempts\nuserSchema.methods.incFailedAttempts = function() {\n  this.failedLoginAttempts += 1;\n  this.lastFailedAttempt = new Date();\n\n  // Lock account after 3 failed attempts\n  if (this.failedLoginAttempts >= 3) {\n    this.accountLockedUntil = new Date(Date.now() + 10 * 60 * 1000); // 10 minutes lock\n    this.captchaRequired = true; // Require CAPTCHA when unlocked\n  }\n\n  // Require CAPTCHA after 2 failed attempts\n  if (this.failedLoginAttempts >= 2) {\n    this.captchaRequired = true;\n  }\n\n  return this.save();\n};\n\n// Reset failed login attempts (on successful login)\nuserSchema.methods.resetFailedAttempts = function() {\n  this.failedLoginAttempts = 0;\n  this.accountLockedUntil = null;\n  this.captchaRequired = false;\n  return this.save();\n};\n\n// Generate security token for CAPTCHA verification\nuserSchema.methods.generateSecurityToken = function() {\n  this.securityToken = crypto.randomBytes(32).toString('hex');\n  return this.save().then(() => this.securityToken);\n};\n\n// Clear security token\nuserSchema.methods.clearSecurityToken = function() {\n  this.securityToken = null;\n  return this.save();\n};\n\n// Generate 2FA secret (base32 encoded)\nuserSchema.methods.generate2FASecret = function() {\n  const speakeasy = require('speakeasy');\n  const secret = speakeasy.generateSecret({\n    name: `Chat-JS (${this.nickname})`,\n    issuer: 'Chat-JS'\n  });\n  this.twoFactorSecret = secret.base32;\n  return this.save().then(() => secret);\n};\n\n// Enable 2FA\nuserSchema.methods.enable2FA = function(method = 'TOTP') {\n  if (!this.twoFactorSecret) {\n    throw new Error('2FA secret not generated');\n  }\n  this.twoFactorEnabled = true;\n  this.twoFactorMethod = method;\n\n  // Generate backup codes (10 codes)\n  this.backupCodes = [];\n  for (let i = 0; i < 10; i++) {\n    const code = crypto.randomBytes(4).toString('hex').toUpperCase();\n    this.backupCodes.push(code);\n  }\n\n  return this.save();\n};\n\n// Disable 2FA\nuserSchema.methods.disable2FA = function() {\n  this.twoFactorEnabled = false;\n  this.twoFactorSecret = null;\n  this.backupCodes = [];\n  return this.save();\n};\n\n// Verify 2FA code\nuserSchema.methods.verify2FACode = function(code, useBackup = false) {\n  if (!this.twoFactorEnabled || !this.twoFactorSecret) {\n    return false;\n  }\n\n  // Check if using backup code\n  if (useBackup && this.backupCodes.includes(code)) {\n    // Remove used backup code\n    this.backupCodes = this.backupCodes.filter(bc => bc !== code);\n    return this.save().then(() => true);\n  }\n\n  if (useBackup) return false;\n\n  // Verify TOTP\n  const speakeasy = require('speakeasy');\n  return speakeasy.totp.verify({\n    secret: this.twoFactorSecret,\n    encoding: 'base32',\n    token: code,\n    window: 2 // Allow time window for clock skew\n  });\n};\n\n// Remove password and sensitive data from JSON output\nuserSchema.methods.toJSON = function() {\n  const userObject = this.toObject();\n  delete userObject.password;\n  delete userObject.resetPasswordToken;\n  delete userObject.resetPasswordExpires;\n  delete userObject.moderationToken;\n  delete userObject.moderationTokenExpires;\n  delete userObject.securityToken;\n  // Don't show ban details to regular users\n  if (!this.hasModeratorPrivileges()) {\n    delete userObject.banReason;\n    delete userObject.banExpires;\n    delete userObject.warnings;\n    delete userObject.failedLoginAttempts;\n    delete userObject.lastFailedAttempt;\n    delete userObject.accountLockedUntil;\n  }\n  return userObject;\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"mappings":"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","ignoreList":[]}