{"version":3,"names":["cov_2c9r87ctvz","actualCoverage","config","s","require","swaggerOptions","definition","openapi","info","title","swagger","version","description","contact","name","servers","url","components","schemas","User","type","properties","id","nickname","minLength","maxLength","email","format","role","enum","default","createdAt","lastActive","status","required","Channel","createdBy","position","RegisterRequest","password","LoginRequest","identifier","AuthResponse","token","user","$ref","ChannelRequest","ErrorResponse","error","errors","items","msg","param","location","securitySchemes","bearerAuth","scheme","bearerFormat","security","apis","module","exports"],"sources":["swagger.js"],"sourcesContent":["const config = require('./index');\n\nconst swaggerOptions = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: config.swagger.title,\n      version: config.swagger.version,\n      description: 'REST API for Chat-JS application with real-time messaging and voice channels',\n      contact: {\n        name: 'Chat-JS Support'\n      }\n    },\n    servers: [\n      {\n        url: 'http://localhost:3001',\n        description: 'Development server'\n      }\n    ],\n    components: {\n      schemas: {\n        User: {\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'User unique identifier'\n            },\n            nickname: {\n              type: 'string',\n              description: 'User nickname',\n              minLength: 3,\n              maxLength: 50\n            },\n            email: {\n              type: 'string',\n              format: 'email',\n              description: 'User email address'\n            },\n            role: {\n              type: 'string',\n              enum: ['admin', 'member'],\n              default: 'member',\n              description: 'User role'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'User creation timestamp'\n            },\n            lastActive: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Last activity timestamp'\n            },\n            status: {\n              type: 'string',\n              enum: ['online', 'offline'],\n              description: 'User online status'\n            }\n          },\n          required: ['nickname', 'email', 'password', 'role']\n        },\n        Channel: {\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'Channel unique identifier (auto-generated from name)'\n            },\n            name: {\n              type: 'string',\n              description: 'Channel display name',\n              minLength: 1,\n              maxLength: 100\n            },\n            type: {\n              type: 'string',\n              enum: ['text', 'voice'],\n              description: 'Channel type'\n            },\n            description: {\n              type: 'string',\n              description: 'Channel description',\n              maxLength: 500\n            },\n            createdBy: {\n              type: 'string',\n              description: 'Creator nickname'\n            },\n            position: {\n              type: 'number',\n              default: 0,\n              description: 'Channel display position'\n            }\n          },\n          required: ['id', 'name', 'type', 'createdBy']\n        },\n        RegisterRequest: {\n          type: 'object',\n          required: ['nickname', 'email', 'password'],\n          properties: {\n            nickname: {\n              type: 'string',\n              minLength: 3,\n              maxLength: 50,\n              description: 'Unique username'\n            },\n            email: {\n              type: 'string',\n              format: 'email',\n              description: 'Valid email address'\n            },\n            password: {\n              type: 'string',\n              minLength: 6,\n              description: 'User password'\n            }\n          }\n        },\n        LoginRequest: {\n          type: 'object',\n          required: ['identifier', 'password'],\n          properties: {\n            identifier: {\n              type: 'string',\n              description: 'Username or email'\n            },\n            password: {\n              type: 'string',\n              description: 'User password'\n            }\n          }\n        },\n        AuthResponse: {\n          type: 'object',\n          properties: {\n            token: {\n              type: 'string',\n              description: 'JWT access token'\n            },\n            user: {\n              $ref: '#/components/schemas/User'\n            }\n          }\n        },\n        ChannelRequest: {\n          type: 'object',\n          required: ['name', 'type'],\n          properties: {\n            name: {\n              type: 'string',\n              minLength: 1,\n              maxLength: 100,\n              description: 'Channel display name'\n            },\n            type: {\n              type: 'string',\n              enum: ['text', 'voice'],\n              description: 'Channel type'\n            },\n            description: {\n              type: 'string',\n              maxLength: 500,\n              description: 'Optional channel description'\n            }\n          }\n        },\n        ErrorResponse: {\n          type: 'object',\n          properties: {\n            error: {\n              type: 'string',\n              description: 'Error message'\n            },\n            errors: {\n              type: 'array',\n              items: {\n                type: 'object',\n                properties: {\n                  msg: { type: 'string' },\n                  param: { type: 'string' },\n                  location: { type: 'string' }\n                }\n              },\n              description: 'Validation errors array'\n            }\n          }\n        }\n      },\n      securitySchemes: {\n        bearerAuth: {\n          type: 'http',\n          scheme: 'bearer',\n          bearerFormat: 'JWT'\n        }\n      }\n    },\n    security: [\n      {\n        bearerAuth: []\n      }\n    ]\n  },\n  apis: ['./server.js'] // Will be updated when routes are separated\n};\n\nmodule.exports = swaggerOptions;"],"mappings":"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","ignoreList":[]}