{"version":3,"names":["_getJestObj","mock","findById","jest","fn","require","jwt","express","authenticateToken","_createApp","req","res","next","authHeader","headers","token","split","status","json","error","code","User","decoded","verify","process","env","JWT_SECRET","user","userId","name","describe","mockReq","mockRes","mockNext","beforeEach","mockReturnThis","afterEach","clearAllMocks","it","sign","id","mockUser","_id","nickname","role","authorization","mockResolvedValue","expect","toHaveBeenCalled","toEqual","toHaveBeenCalledWith","not","invalidToken","expiredToken","expiresIn","dbError","Error","mockRejectedValue","originalConsole","global","console","warn","toBe"],"sources":["auth.test.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst express = require('express');\n\n// Import authenticateToken function directly since it's not exported\nlet authenticateToken;\n\n// This approach creates the middleware function locally for testing\nconst _createApp = require('express')();\n\n// JWT authentication middleware (same as in server.js)\nauthenticateToken = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n\n    if (!token) {\n      return res.status(401).json({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    }\n\n    const { User } = require('../../models/User');\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    const user = await User.findById(decoded.userId);\n\n    if (!user) {\n      return res.status(401).json({\n        error: 'User not found',\n        code: 'USER_NOT_FOUND'\n      });\n    }\n\n    req.user = user;\n    next();\n  } catch (error) {\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        error: 'Invalid token format',\n        code: 'INVALID_TOKEN_FORMAT'\n      });\n    }\n\n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        error: 'Token has expired',\n        code: 'TOKEN_EXPIRED'\n      });\n    }\n\n    return res.status(401).json({\n      error: 'Token verification failed',\n      code: 'TOKEN_VERIFICATION_FAILED'\n    });\n  }\n};\n\n// Mock models\njest.mock('../../models/User', () => ({\n  findById: jest.fn()\n}));\n\nconst User = require('../../models/User');\n\ndescribe('Authentication Middleware', () => {\n  let mockReq;\n  let mockRes;\n  let mockNext;\n\n  beforeEach(() => {\n    // Process.env.JWT_SECRET установлен в setup.js для тестов\n    process.env.JWT_SECRET = 'your_super_secure_jwt_secret_key_here_replace_in_production';\n    mockReq = {\n      headers: {}\n    };\n    mockRes = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn()\n    };\n    mockNext = jest.fn();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('authenticateToken', () => {\n    it('should authenticate user with valid token', async () => {\n      const userId = '507f1f77bcf86cd799439011';\n      const token = jwt.sign({ id: userId }, process.env.JWT_SECRET || 'test-secret');\n      const mockUser = {\n        _id: userId,\n        nickname: 'testuser',\n        role: 'member'\n      };\n\n      mockReq.headers.authorization = `Bearer ${token}`;\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(mockReq.user).toEqual(mockUser);\n      expect(User.findById).toHaveBeenCalledWith(userId);\n    });\n\n    it('should return 401 when no token is provided', async () => {\n      delete mockReq.headers.authorization;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    });\n\n    it('should return 401 with malformed authorization header', async () => {\n      mockReq.headers.authorization = 'InvalidTokenFormat';\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    });\n\n    it('should handle JWT verification errors', async () => {\n      const invalidToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.invalid';\n      mockReq.headers.authorization = `Bearer ${invalidToken}`;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token verification failed',\n        code: 'TOKEN_VERIFICATION_FAILED'\n      });\n    });\n\n    it('should handle expired tokens', async () => {\n      const expiredToken = jwt.sign({ id: 'testId' }, 'test-secret', { expiresIn: '-1h' });\n      mockReq.headers.authorization = `Bearer ${expiredToken}`;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token has expired',\n        code: 'TOKEN_EXPIRED'\n      });\n    });\n\n    it('should handle malformed JWT tokens', async () => {\n      mockReq.headers.authorization = 'Bearer not-a-jwt-token';\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Invalid token format',\n        code: 'INVALID_TOKEN_FORMAT'\n      });\n    });\n\n    it('should return 401 when user is not found', async () => {\n      const token = jwt.sign({ id: 'nonexistent' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n\n      User.findById.mockResolvedValue(null);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'User not found',\n        code: 'USER_NOT_FOUND'\n      });\n    });\n\n    it('should handle database errors during user lookup', async () => {\n      const token = jwt.sign({ id: 'testid' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n\n      const dbError = new Error('Database connection failed');\n      User.findById.mockRejectedValue(dbError);\n\n      // Override console methods to avoid spam\n      const originalConsole = global.console;\n      global.console = {\n        warn: jest.fn(),\n        error: jest.fn()\n      };\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      // Restore console\n      global.console = originalConsole;\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token verification failed',\n        code: 'TOKEN_VERIFICATION_FAILED'\n      });\n    });\n  });\n\n  describe('Token extraction', () => {\n    it('should extract token from Bearer authorization header', async () => {\n      const token = jwt.sign({ id: 'testId' }, process.env.JWT_SECRET || 'test-secret');\n      const authorization = `Bearer ${token}`;\n      const mockUser = { _id: 'testId', nickname: 'testuser' };\n\n      mockReq.headers.authorization = authorization;\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(User.findById).toHaveBeenCalledWith('testId');\n    });\n\n    it('should handle extra whitespace in authorization header', async () => {\n      const token = jwt.sign({ id: 'whitespacetest' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `  Bearer    ${token}   `;\n      const mockUser = { _id: 'whitespacetest', nickname: 'testuser' };\n\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(User.findById).toHaveBeenCalledWith('whitespacetest');\n    });\n  });\n\n  describe('Request properties', () => {\n    it('should attach user to request object', async () => {\n      const token = jwt.sign({ id: 'attachTest' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n      const mockUser = { _id: 'attachTest', nickname: 'attachUser', role: 'admin' };\n\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockReq.user).toEqual(mockUser);\n      expect(mockReq.user._id).toBe('attachTest');\n      expect(mockReq.user.nickname).toBe('attachUser');\n      expect(mockReq.user.role).toBe('admin');\n    });\n  });\n});"],"mappings":"AAyDA;AACAA,WAAA,GAAKC,IAAI,CAAC,mBAAmB,EAAE,OAAO;EACpCC,QAAQ,EAAEC,IAAI,CAACC,EAAE,CAAC;AACpB,CAAC,CAAC,CAAC;AAAC,SAAAJ,YAAA;EAAA;IAAAG;EAAA,IAAAE,OAAA;EAAAL,WAAA,GAAAA,CAAA,KAAAG,IAAA;EAAA,OAAAA,IAAA;AAAA;AA5DJ,MAAMG,GAAG,GAAGD,OAAO,CAAC,cAAc,CAAC;AACnC,MAAME,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;;AAElC;AACA,IAAIG,iBAAiB;;AAErB;AACA,MAAMC,UAAU,GAAGJ,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;;AAEvC;AACAG,iBAAiB,GAAG,MAAAA,CAAOE,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAC5C,IAAI;IACF,MAAMC,UAAU,GAAGH,GAAG,CAACI,OAAO,CAAC,eAAe,CAAC;IAC/C,MAAMC,KAAK,GAAGF,UAAU,IAAIA,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAEpD,IAAI,CAACD,KAAK,EAAE;MACV,OAAOJ,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEA,MAAM;MAAEC;IAAK,CAAC,GAAGhB,OAAO,CAAC,mBAAmB,CAAC;IAC7C,MAAMiB,OAAO,GAAGhB,GAAG,CAACiB,MAAM,CAACR,KAAK,EAAES,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACzD,MAAMC,IAAI,GAAG,MAAMN,IAAI,CAACnB,QAAQ,CAACoB,OAAO,CAACM,MAAM,CAAC;IAEhD,IAAI,CAACD,IAAI,EAAE;MACT,OAAOhB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,gBAAgB;QACvBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEAV,GAAG,CAACiB,IAAI,GAAGA,IAAI;IACff,IAAI,CAAC,CAAC;EACR,CAAC,CAAC,OAAOO,KAAK,EAAE;IACd,IAAIA,KAAK,CAACU,IAAI,KAAK,mBAAmB,EAAE;MACtC,OAAOlB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEA,IAAID,KAAK,CAACU,IAAI,KAAK,mBAAmB,EAAE;MACtC,OAAOlB,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,KAAK,EAAE,mBAAmB;QAC1BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEA,OAAOT,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,KAAK,EAAE,2BAA2B;MAClCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF,CAAC;AAOD,MAAMC,IAAI,GAAGhB,OAAO,CAAC,mBAAmB,CAAC;AAEzCyB,QAAQ,CAAC,2BAA2B,EAAE,MAAM;EAC1C,IAAIC,OAAO;EACX,IAAIC,OAAO;EACX,IAAIC,QAAQ;EAEZC,UAAU,CAAC,MAAM;IACf;IACAV,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,6DAA6D;IACtFK,OAAO,GAAG;MACRjB,OAAO,EAAE,CAAC;IACZ,CAAC;IACDkB,OAAO,GAAG;MACRf,MAAM,EAAEd,IAAI,CAACC,EAAE,CAAC,CAAC,CAAC+B,cAAc,CAAC,CAAC;MAClCjB,IAAI,EAAEf,IAAI,CAACC,EAAE,CAAC;IAChB,CAAC;IACD6B,QAAQ,GAAG9B,IAAI,CAACC,EAAE,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFgC,SAAS,CAAC,MAAM;IACdjC,IAAI,CAACkC,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFP,QAAQ,CAAC,mBAAmB,EAAE,MAAM;IAClCQ,EAAE,CAAC,2CAA2C,EAAE,YAAY;MAC1D,MAAMV,MAAM,GAAG,0BAA0B;MACzC,MAAMb,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAEZ;MAAO,CAAC,EAAEJ,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MAC/E,MAAMe,QAAQ,GAAG;QACfC,GAAG,EAAEd,MAAM;QACXe,QAAQ,EAAE,UAAU;QACpBC,IAAI,EAAE;MACR,CAAC;MAEDb,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAU9B,KAAK,EAAE;MACjDM,IAAI,CAACnB,QAAQ,CAAC4C,iBAAiB,CAACL,QAAQ,CAAC;MAEzC,MAAMjC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACe,gBAAgB,CAAC,CAAC;MACnCD,MAAM,CAAChB,OAAO,CAACJ,IAAI,CAAC,CAACsB,OAAO,CAACR,QAAQ,CAAC;MACtCM,MAAM,CAAC1B,IAAI,CAACnB,QAAQ,CAAC,CAACgD,oBAAoB,CAACtB,MAAM,CAAC;IACpD,CAAC,CAAC;IAEFU,EAAE,CAAC,6CAA6C,EAAE,YAAY;MAC5D,OAAOP,OAAO,CAACjB,OAAO,CAAC+B,aAAa;MAEpC,MAAMrC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,uDAAuD,EAAE,YAAY;MACtEP,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,oBAAoB;MAEpD,MAAMrC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,uBAAuB;QAC9BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,uCAAuC,EAAE,YAAY;MACtD,MAAMc,YAAY,GAAG,8CAA8C;MACnErB,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAUO,YAAY,EAAE;MAExD,MAAM5C,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,8BAA8B,EAAE,YAAY;MAC7C,MAAMe,YAAY,GAAG/C,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAS,CAAC,EAAE,aAAa,EAAE;QAAEc,SAAS,EAAE;MAAM,CAAC,CAAC;MACpFvB,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAUQ,YAAY,EAAE;MAExD,MAAM7C,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,mBAAmB;QAC1BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,oCAAoC,EAAE,YAAY;MACnDP,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,wBAAwB;MAExD,MAAMrC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,sBAAsB;QAC7BC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,0CAA0C,EAAE,YAAY;MACzD,MAAMvB,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAc,CAAC,EAAEhB,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MACtFK,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAU9B,KAAK,EAAE;MAEjDM,IAAI,CAACnB,QAAQ,CAAC4C,iBAAiB,CAAC,IAAI,CAAC;MAErC,MAAMtC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,gBAAgB;QACvBC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFkB,EAAE,CAAC,kDAAkD,EAAE,YAAY;MACjE,MAAMvB,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAS,CAAC,EAAEhB,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MACjFK,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAU9B,KAAK,EAAE;MAEjD,MAAMwC,OAAO,GAAG,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACvDnC,IAAI,CAACnB,QAAQ,CAACuD,iBAAiB,CAACF,OAAO,CAAC;;MAExC;MACA,MAAMG,eAAe,GAAGC,MAAM,CAACC,OAAO;MACtCD,MAAM,CAACC,OAAO,GAAG;QACfC,IAAI,EAAE1D,IAAI,CAACC,EAAE,CAAC,CAAC;QACfe,KAAK,EAAEhB,IAAI,CAACC,EAAE,CAAC;MACjB,CAAC;MAED,MAAMI,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;;MAEnD;MACA0B,MAAM,CAACC,OAAO,GAAGF,eAAe;MAEhCX,MAAM,CAACd,QAAQ,CAAC,CAACkB,GAAG,CAACH,gBAAgB,CAAC,CAAC;MACvCD,MAAM,CAACf,OAAO,CAACf,MAAM,CAAC,CAACiC,oBAAoB,CAAC,GAAG,CAAC;MAChDH,MAAM,CAACf,OAAO,CAACd,IAAI,CAAC,CAACgC,oBAAoB,CAAC;QACxC/B,KAAK,EAAE,2BAA2B;QAClCC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFU,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjCQ,EAAE,CAAC,uDAAuD,EAAE,YAAY;MACtE,MAAMvB,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAS,CAAC,EAAEhB,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MACjF,MAAMmB,aAAa,GAAG,UAAU9B,KAAK,EAAE;MACvC,MAAM0B,QAAQ,GAAG;QAAEC,GAAG,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAW,CAAC;MAExDZ,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAGA,aAAa;MAC7CxB,IAAI,CAACnB,QAAQ,CAAC4C,iBAAiB,CAACL,QAAQ,CAAC;MAEzC,MAAMjC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACe,gBAAgB,CAAC,CAAC;MACnCD,MAAM,CAAC1B,IAAI,CAACnB,QAAQ,CAAC,CAACgD,oBAAoB,CAAC,QAAQ,CAAC;IACtD,CAAC,CAAC;IAEFZ,EAAE,CAAC,wDAAwD,EAAE,YAAY;MACvE,MAAMvB,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAiB,CAAC,EAAEhB,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MACzFK,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,eAAe9B,KAAK,KAAK;MACzD,MAAM0B,QAAQ,GAAG;QAAEC,GAAG,EAAE,gBAAgB;QAAEC,QAAQ,EAAE;MAAW,CAAC;MAEhEtB,IAAI,CAACnB,QAAQ,CAAC4C,iBAAiB,CAACL,QAAQ,CAAC;MAEzC,MAAMjC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAACd,QAAQ,CAAC,CAACe,gBAAgB,CAAC,CAAC;MACnCD,MAAM,CAAC1B,IAAI,CAACnB,QAAQ,CAAC,CAACgD,oBAAoB,CAAC,gBAAgB,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFpB,QAAQ,CAAC,oBAAoB,EAAE,MAAM;IACnCQ,EAAE,CAAC,sCAAsC,EAAE,YAAY;MACrD,MAAMvB,KAAK,GAAGT,GAAG,CAACiC,IAAI,CAAC;QAAEC,EAAE,EAAE;MAAa,CAAC,EAAEhB,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI,aAAa,CAAC;MACrFK,OAAO,CAACjB,OAAO,CAAC+B,aAAa,GAAG,UAAU9B,KAAK,EAAE;MACjD,MAAM0B,QAAQ,GAAG;QAAEC,GAAG,EAAE,YAAY;QAAEC,QAAQ,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAQ,CAAC;MAE7EvB,IAAI,CAACnB,QAAQ,CAAC4C,iBAAiB,CAACL,QAAQ,CAAC;MAEzC,MAAMjC,iBAAiB,CAACuB,OAAO,EAAEC,OAAO,EAAEC,QAAQ,CAAC;MAEnDc,MAAM,CAAChB,OAAO,CAACJ,IAAI,CAAC,CAACsB,OAAO,CAACR,QAAQ,CAAC;MACtCM,MAAM,CAAChB,OAAO,CAACJ,IAAI,CAACe,GAAG,CAAC,CAACoB,IAAI,CAAC,YAAY,CAAC;MAC3Cf,MAAM,CAAChB,OAAO,CAACJ,IAAI,CAACgB,QAAQ,CAAC,CAACmB,IAAI,CAAC,YAAY,CAAC;MAChDf,MAAM,CAAChB,OAAO,CAACJ,IAAI,CAACiB,IAAI,CAAC,CAACkB,IAAI,CAAC,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}