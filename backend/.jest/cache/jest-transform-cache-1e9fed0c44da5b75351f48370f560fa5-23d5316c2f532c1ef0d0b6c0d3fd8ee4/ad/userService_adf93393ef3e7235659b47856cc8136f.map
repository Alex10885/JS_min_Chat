{"version":3,"names":["cov_1ojqbjaj16","actualCoverage","User","s","require","logger","cacheUser","getCachedUser","invalidateUserCache","cacheUserActivity","UserService","constructor","f","getAllUsers","users","find","select","sort","nickname","error","getUserById","userId","cachedUser","b","debug","user","findById","cacheableUser","_id","role","status","createdAt","lastActive","isMuted","muteExpires","channels","catch","getUserByNickname","findOne","updateUserStatus","findByIdAndUpdate","Date","new","activityData","timestamp","now","banUser","adminUserId","targetUserId","reason","duration","targetUser","Error","ban","info","adminId","bannedUserId","unbanUser","unban","warnUser","warn","save","warnedUserId","changeUserRole","newRole","oldRole","muteUser","mute","mutedBy","mutedUser","unmuteUser","unmute","unmutedBy","unmutedUser","getUsersForAdmin","page","limit","skip","total","countDocuments","pagination","pages","Math","ceil","module","exports"],"sources":["userService.js"],"sourcesContent":["const User = require('../models/User');\nconst { logger } = require('../middleware/auth');\nconst { cacheUser, getCachedUser, invalidateUserCache, cacheUserActivity } = require('./cacheService');\n\nclass UserService {\n  constructor() {\n    this.logger = logger;\n  }\n\n  async getAllUsers() {\n    try {\n      const users = await User.find({})\n        .select('_id nickname role status createdAt lastActive')\n        .sort({ nickname: 1 });\n\n      return users;\n    } catch (error) {\n      this.logger.error('Error fetching users:', error);\n      throw error;\n    }\n  }\n\n  async getUserById(userId) {\n    try {\n      // Try to get from cache first\n      const cachedUser = await getCachedUser(userId);\n      if (cachedUser) {\n        this.logger.debug('User data retrieved from cache');\n        return cachedUser;\n      }\n\n      // Not in cache, fetch from database\n      const user = await User.findById(userId);\n      if (user) {\n        // Cache the user data (without sensitive fields)\n        const cacheableUser = {\n          _id: user._id,\n          nickname: user.nickname,\n          role: user.role,\n          status: user.status,\n          createdAt: user.createdAt,\n          lastActive: user.lastActive,\n          isMuted: user.isMuted,\n          muteExpires: user.muteExpires,\n          channels: user.channels || []\n        };\n\n        // Cache user data asynchronously (don't block response)\n        cacheUser(userId, cacheableUser).catch(error => {\n          this.logger.error('Error caching user data:', error);\n        });\n      }\n\n      return user;\n    } catch (error) {\n      this.logger.error('Error fetching user by ID:', error);\n      throw error;\n    }\n  }\n\n  async getUserByNickname(nickname) {\n    try {\n      const user = await User.findOne({ nickname });\n      return user;\n    } catch (error) {\n      this.logger.error('Error fetching user by nickname:', error);\n      throw error;\n    }\n  }\n\n  async updateUserStatus(userId, status) {\n    try {\n      const user = await User.findByIdAndUpdate(\n        userId,\n        {\n          status,\n          lastActive: new Date()\n        },\n        { new: true }\n      );\n\n      if (user) {\n        // Invalidate cache to ensure fresh data\n        invalidateUserCache(userId).catch(error => {\n          this.logger.error('Error invalidating user cache:', error);\n        });\n\n        // Cache activity data\n        const activityData = {\n          lastActive: user.lastActive,\n          status: user.status,\n          timestamp: Date.now()\n        };\n        cacheUserActivity(userId, activityData).catch(error => {\n          this.logger.error('Error caching user activity:', error);\n        });\n      }\n\n      return user;\n    } catch (error) {\n      this.logger.error('Error updating user status:', error);\n      throw error;\n    }\n  }\n\n  async banUser(adminUserId, targetUserId, reason, duration) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      await targetUser.ban(reason, duration, adminUserId);\n\n      this.logger.info(`User ${targetUser.nickname} banned by admin ${adminUserId}`, {\n        adminId: adminUserId,\n        bannedUserId: targetUserId,\n        reason,\n        duration\n      });\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error banning user:', error);\n      throw error;\n    }\n  }\n\n  async unbanUser(targetUserId) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      await targetUser.unban();\n      this.logger.info(`User ${targetUser.nickname} unbanned`);\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error unbanning user:', error);\n      throw error;\n    }\n  }\n\n  async warnUser(adminUserId, targetUserId, reason, duration) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      await targetUser.warn(reason, adminUserId, duration);\n      await targetUser.save();\n\n      this.logger.info(`Warning issued to user ${targetUser.nickname} by admin ${adminUserId}`, {\n        adminId: adminUserId,\n        warnedUserId: targetUserId,\n        reason,\n        duration\n      });\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error warning user:', error);\n      throw error;\n    }\n  }\n\n  async changeUserRole(adminUserId, targetUserId, newRole) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      const oldRole = targetUser.role;\n      targetUser.role = newRole;\n      await targetUser.save();\n\n      this.logger.info(`User ${targetUser.nickname} role changed from ${oldRole} to ${newRole} by admin ${adminUserId}`, {\n        adminId: adminUserId,\n        targetUserId,\n        oldRole,\n        newRole\n      });\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error changing user role:', error);\n      throw error;\n    }\n  }\n\n  async muteUser(adminUserId, targetUserId, duration) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      await targetUser.mute(duration);\n\n      this.logger.info(`User ${targetUser.nickname} muted by admin ${adminUserId}`, {\n        mutedBy: adminUserId,\n        mutedUser: targetUser._id,\n        duration\n      });\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error muting user:', error);\n      throw error;\n    }\n  }\n\n  async unmuteUser(adminUserId, targetUserId) {\n    try {\n      const targetUser = await User.findById(targetUserId);\n      if (!targetUser) {\n        throw new Error('User not found');\n      }\n\n      await targetUser.unmute();\n\n      this.logger.info(`User ${targetUser.nickname} unmuted by admin ${adminUserId}`, {\n        unmutedBy: adminUserId,\n        unmutedUser: targetUser._id\n      });\n\n      return targetUser;\n    } catch (error) {\n      this.logger.error('Error unmuting user:', error);\n      throw error;\n    }\n  }\n\n  async getUsersForAdmin(page = 1, limit = 50) {\n    try {\n      const skip = (page - 1) * limit;\n\n      const users = await User.find({})\n        .select('-password -resetPasswordToken -resetPasswordExpires -moderationToken -moderationTokenExpires')\n        .sort({ createdAt: -1 })\n        .skip(skip)\n        .limit(limit);\n\n      const total = await User.countDocuments();\n\n      return {\n        users,\n        pagination: {\n          page,\n          limit,\n          total,\n          pages: Math.ceil(total / limit)\n        }\n      };\n    } catch (error) {\n      this.logger.error('Error fetching users for admin:', error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = new UserService();"],"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","ignoreList":[]}