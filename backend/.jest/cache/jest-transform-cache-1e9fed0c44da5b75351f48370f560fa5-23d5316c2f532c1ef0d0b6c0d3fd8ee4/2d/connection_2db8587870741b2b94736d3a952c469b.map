{"version":3,"names":["mongoose","require","winston","logger","createLogger","level","format","combine","timestamp","errors","stack","json","defaultMeta","service","transports","File","filename","Console","colorize","simple","connectDB","retries","i","conn","connect","process","env","MONGODB_URI","serverSelectionTimeoutMS","socketTimeoutMS","connectTimeoutMS","info","connection","host","on","err","error","warn","setTimeout","delay","Math","min","pow","Promise","resolve","closeDB","readyState","close","forceError","module","exports"],"sources":["connection.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst winston = require('winston');\n\nconst logger = winston.createLogger({\n  level: 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'database' },\n  transports: [\n    new winston.transports.File({ filename: 'logs/database.log' }),\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple()\n      )\n    })\n  ]\n});\n\nconst connectDB = async (retries = 5) => {\n  for (let i = 1; i <= retries; i++) {\n    try {\n      const conn = await mongoose.connect(process.env.MONGODB_URI, {\n        // Modern Mongoose doesn't need these options, but keeping for compatibility\n        // useNewUrlParser: true,\n        // useUnifiedTopology: true,\n        // Increase timeouts for better reliability\n        serverSelectionTimeoutMS: 30000,\n        socketTimeoutMS: 45000,\n        connectTimeoutMS: 30000,\n      });\n\n      logger.info(`MongoDB Connected: ${conn.connection.host}`);\n\n      // Handle connection events\n      mongoose.connection.on('error', (err) => {\n        logger.error('Database connection error:', err);\n      });\n\n      mongoose.connection.on('disconnected', () => {\n        logger.warn('Database disconnected');\n      });\n\n      mongoose.connection.on('reconnected', () => {\n        logger.info('Database reconnected');\n      });\n\n      // Handle unexpected disconnections with reconnection\n      mongoose.connection.on('disconnected', () => {\n        logger.warn('Database unexpectedly disconnected, attempting to reconnect...');\n        setTimeout(() => {\n          connectDB(1); // Single retry on disconnection\n        }, 5000);\n      });\n\n      return conn;\n    } catch (error) {\n      logger.error(`Database connection attempt ${i}/${retries} failed:`, error);\n\n      if (i === retries) {\n        logger.error('Database connection failed after all retries:', error);\n        throw error; // Let the caller handle it\n      }\n\n      // Exponential backoff for retries\n      const delay = Math.min(1000 * Math.pow(2, i - 1), 30000);\n      logger.info(`Retrying database connection in ${delay}ms...`);\n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n};\n\nconst closeDB = async () => {\n  try {\n    if (mongoose.connection.readyState === 1) {\n      await mongoose.connection.close();\n      logger.info('Database connection closed gracefully');\n    } else {\n      logger.info('Database connection was not open, no need to close');\n    }\n  } catch (error) {\n    logger.error('Error closing database connection:', error);\n    // Force close if graceful close fails\n    try {\n      mongoose.connection.close(true);\n    } catch (forceError) {\n      logger.error('Force close failed:', forceError);\n    }\n  }\n};\n\nmodule.exports = { connectDB, closeDB };"],"mappings":"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","ignoreList":[]}