a0896731458034d69bcefc74fb458ebf
/* istanbul ignore next */
function cov_8huahnvr1() {
  var path = "/home/raerlim/Chat-JS/backend/services/emailService.js";
  var hash = "6a8328c386e0108747007f056e1789c64ab81ad2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/raerlim/Chat-JS/backend/services/emailService.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 19
        },
        end: {
          line: 1,
          column: 40
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 106
        }
      },
      "3": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "4": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "5": {
        start: {
          line: 86,
          column: 19
        },
        end: {
          line: 86,
          column: 63
        }
      },
      "6": {
        start: {
          line: 87,
          column: 6
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "7": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 58
        }
      },
      "8": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 66
        }
      },
      "9": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 18
        }
      },
      "10": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "11": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "12": {
        start: {
          line: 150,
          column: 19
        },
        end: {
          line: 150,
          column: 63
        }
      },
      "13": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 72
        }
      },
      "14": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 58
        }
      },
      "15": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 74
        }
      },
      "16": {
        start: {
          line: 155,
          column: 6
        },
        end: {
          line: 155,
          column: 18
        }
      },
      "17": {
        start: {
          line: 160,
          column: 0
        },
        end: {
          line: 160,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 2
          },
          end: {
            line: 4,
            column: 3
          }
        },
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 14,
            column: 3
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 16,
            column: 3
          }
        },
        loc: {
          start: {
            line: 16,
            column: 50
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        loc: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 157,
            column: 3
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 12
          },
          end: {
            line: 6,
            column: 33
          }
        }, {
          start: {
            line: 6,
            column: 37
          },
          end: {
            line: 6,
            column: 53
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        }, {
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 48
          }
        }, {
          start: {
            line: 17,
            column: 52
          },
          end: {
            line: 17,
            column: 75
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a8328c386e0108747007f056e1789c64ab81ad2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8huahnvr1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8huahnvr1();
const nodemailer =
/* istanbul ignore next */
(cov_8huahnvr1().s[0]++, require('nodemailer'));
class EmailService {
  constructor() {
    /* istanbul ignore next */
    cov_8huahnvr1().f[0]++;
    cov_8huahnvr1().s[1]++;
    this.transporter = nodemailer.createTransport({
      host:
      /* istanbul ignore next */
      (cov_8huahnvr1().b[0][0]++, process.env.SMTP_HOST) ||
      /* istanbul ignore next */
      (cov_8huahnvr1().b[0][1]++, 'smtp.gmail.com'),
      port:
      /* istanbul ignore next */
      (cov_8huahnvr1().b[1][0]++, process.env.SMTP_PORT) ||
      /* istanbul ignore next */
      (cov_8huahnvr1().b[1][1]++, 587),
      secure: false,
      // true for 465, false for other ports
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS
      }
    });
  }
  async sendPasswordResetEmail(email, resetToken) {
    /* istanbul ignore next */
    cov_8huahnvr1().f[1]++;
    const resetUrl =
    /* istanbul ignore next */
    (cov_8huahnvr1().s[2]++, `${
    /* istanbul ignore next */
    (cov_8huahnvr1().b[2][0]++, process.env.FRONTEND_URL) ||
    /* istanbul ignore next */
    (cov_8huahnvr1().b[2][1]++, 'http://localhost:3000')}/reset-password/${resetToken}`);
    const mailOptions =
    /* istanbul ignore next */
    (cov_8huahnvr1().s[3]++, {
      from: {
        name: 'Chat-JS Support',
        address: process.env.SMTP_USER
      },
      to: email,
      subject: 'Password Reset Request - Chat-JS',
      html: `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Password Reset</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px 10px 0 0; }
                .content { background: #f8f9fa; padding: 20px; border: 1px solid #dee2e6; }
                .button { display: inline-block; padding: 12px 24px; background: #007bff; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
                .footer { background: #6c757d; color: white; padding: 20px; border-radius: 0 0 10px 10px; font-size: 12px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>Password Reset Request</h2>
                </div>
                <div class="content">
                    <p>You have requested to reset your password for your Chat-JS account.</p>
                    <p>Please click the button below to reset your password:</p>

                    <a href="${resetUrl}" class="button">Reset Password</a>

                    <p><strong>This link will expire in 1 hour.</strong></p>

                    <p>If you did not request this password reset, please ignore this email.</p>

                    <p>For security reasons, this link can only be used once.</p>
                </div>
                <div class="footer">
                    <p>If the button doesn't work, copy and paste this URL into your browser:</p>
                    <p>${resetUrl}</p>
                    <p>&copy; 2024 Chat-JS. All rights reserved.</p>
                </div>
            </div>
        </body>
        </html>
      `,
      text: `
        Password Reset Request - Chat-JS

        You have requested to reset your password.

        Please use the following link to reset your password:
        ${resetUrl}

        This link will expire in 1 hour.

        If you did not request this password reset, please ignore this email.

        Best regards,
        Chat-JS Support Team
      `
    });
    /* istanbul ignore next */
    cov_8huahnvr1().s[4]++;
    try {
      const info =
      /* istanbul ignore next */
      (cov_8huahnvr1().s[5]++, await this.transporter.sendMail(mailOptions));
      /* istanbul ignore next */
      cov_8huahnvr1().s[6]++;
      console.log('Password reset email sent:', info.messageId);
      /* istanbul ignore next */
      cov_8huahnvr1().s[7]++;
      return {
        success: true,
        messageId: info.messageId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_8huahnvr1().s[8]++;
      console.error('Error sending password reset email:', error);
      /* istanbul ignore next */
      cov_8huahnvr1().s[9]++;
      throw error;
    }
  }
  async sendPasswordResetSuccessEmail(email) {
    /* istanbul ignore next */
    cov_8huahnvr1().f[2]++;
    const mailOptions =
    /* istanbul ignore next */
    (cov_8huahnvr1().s[10]++, {
      from: {
        name: 'Chat-JS Support',
        address: process.env.SMTP_USER
      },
      to: email,
      subject: 'Password Reset Successful - Chat-JS',
      html: `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Password Reset Successful</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 20px; border-radius: 10px 10px 0 0; }
                .content { background: #f8f9fa; padding: 20px; border: 1px solid #dee2e6; }
                .footer { background: #6c757d; color: white; padding: 20px; border-radius: 0 0 10px 10px; font-size: 12px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>Password Reset Successful</h2>
                </div>
                <div class="content">
                    <p>Your password has been successfully reset!</p>
                    <p>You can now sign in to your Chat-JS account with your new password.</p>
                    <p>If you did not make this change, please contact our support team immediately.</p>
                </div>
                <div class="footer">
                    <p>&copy; 2024 Chat-JS. All rights reserved.</p>
                </div>
            </div>
        </body>
        </html>
      `,
      text: `
        Password Reset Successful - Chat-JS

        Your password has been successfully reset!

        You can now sign in to your Chat-JS account with your new password.

        If you did not make this change, please contact our support team immediately.

        Best regards,
        Chat-JS Support Team
      `
    });
    /* istanbul ignore next */
    cov_8huahnvr1().s[11]++;
    try {
      const info =
      /* istanbul ignore next */
      (cov_8huahnvr1().s[12]++, await this.transporter.sendMail(mailOptions));
      /* istanbul ignore next */
      cov_8huahnvr1().s[13]++;
      console.log('Password reset success email sent:', info.messageId);
      /* istanbul ignore next */
      cov_8huahnvr1().s[14]++;
      return {
        success: true,
        messageId: info.messageId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_8huahnvr1().s[15]++;
      console.error('Error sending password reset success email:', error);
      /* istanbul ignore next */
      cov_8huahnvr1().s[16]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_8huahnvr1().s[17]++;
module.exports = new EmailService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,