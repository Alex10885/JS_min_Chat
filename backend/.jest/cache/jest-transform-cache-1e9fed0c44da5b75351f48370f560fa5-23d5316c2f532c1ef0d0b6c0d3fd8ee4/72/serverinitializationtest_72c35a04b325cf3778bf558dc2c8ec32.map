{"version":3,"names":["mongoose","require","MongoMemoryServer","connectDB","closeDB","Channel","describe","mongoServer","beforeAll","create","mongoUri","getUri","process","env","MONGODB_URI","afterAll","stop","beforeEach","disconnect","it","expect","connection","readyState","toBe","error","err","toBeDefined","message","toContain","consoleSpy","jest","spyOn","console","mockImplementation","toHaveBeenCalledWith","stringContaining","mockRestore","deleteMany","defaultChannels","id","name","type","createdBy","channelData","findOneAndUpdate","upsert","new","channels","find","length","generalChannel","ch","voiceChannel","channel","findOne"],"sources":["server-initialization.test.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst { MongoMemoryServer } = require('mongodb-memory-server');\nconst { connectDB, closeDB } = require('../db/connection');\nconst Channel = require('../models/Channel');\n\ndescribe('Database Initialization', () => {\n  let mongoServer;\n\n  beforeAll(async () => {\n    // Start in-memory MongoDB\n    mongoServer = await MongoMemoryServer.create();\n    const mongoUri = mongoServer.getUri();\n    process.env.MONGODB_URI = mongoUri;\n  });\n\n  afterAll(async () => {\n    await mongoServer.stop();\n  });\n\n  beforeEach(async () => {\n    await mongoose.disconnect();\n  });\n\n  describe('connectDB function', () => {\n    it('should connect to MongoDB successfully', async () => {\n      await connectDB();\n      expect(mongoose.connection.readyState).toBe(1); // Connected\n    });\n\n    it('should handle connection errors gracefully', async () => {\n      // Set invalid MongoDB URI\n      process.env.MONGODB_URI = 'mongodb://invalid-host:27017/test';\n\n      let error;\n      try {\n        await connectDB();\n      } catch (err) {\n        error = err;\n      }\n\n      expect(error).toBeDefined();\n      expect(error.message).toContain('connect');\n    });\n\n    it('should log successful connection', async () => {\n      const consoleSpy = jest.spyOn(console, 'log').mockImplementation(() => {});\n\n      await connectDB();\n\n      expect(consoleSpy).toHaveBeenCalledWith(\n        expect.stringContaining('MongoDB Connected:')\n      );\n\n      consoleSpy.mockRestore();\n    });\n  });\n\n  describe('closeDB function', () => {\n    beforeEach(async () => {\n      await connectDB();\n    });\n\n    it('should close MongoDB connection successfully', async () => {\n      expect(mongoose.connection.readyState).toBe(1);\n\n      await closeDB();\n      expect(mongoose.connection.readyState).toBe(0); // Disconnected\n    });\n\n    it('should log disconnection', async () => {\n      const consoleSpy = jest.spyOn(console, 'warn').mockImplementation(() => {});\n\n      await closeDB();\n\n      // Note: The actual log comes from connection.js when DB closes\n      expect(mongoose.connection.readyState).toBe(0);\n\n      consoleSpy.mockRestore();\n    });\n  });\n\n  describe('Default Channels Initialization', () => {\n    beforeEach(async () => {\n      await connectDB();\n      await Channel.deleteMany({}); // Clear channels\n    });\n\n    it('should create default channels on initialization', async () => {\n      // Simulate the channel creation logic from server.js\n      const defaultChannels = [\n        { id: 'general', name: 'General', type: 'text', createdBy: 'system' },\n        { id: 'voice-chat', name: 'Voice Chat', type: 'voice', createdBy: 'system' }\n      ];\n\n      for (const channelData of defaultChannels) {\n        await Channel.findOneAndUpdate(\n          { id: channelData.id },\n          channelData,\n          { upsert: true, new: true }\n        );\n      }\n\n      const channels = await Channel.find({});\n      expect(channels.length).toBe(2);\n\n      const generalChannel = channels.find(ch => ch.id === 'general');\n      const voiceChannel = channels.find(ch => ch.id === 'voice-chat');\n\n      expect(generalChannel).toBeDefined();\n      expect(generalChannel.type).toBe('text');\n      expect(generalChannel.name).toBe('General');\n\n      expect(voiceChannel).toBeDefined();\n      expect(voiceChannel.type).toBe('voice');\n      expect(voiceChannel.name).toBe('Voice Chat');\n    });\n\n    it('should not create duplicates of default channels', async () => {\n      // Create channels first time\n      const channelData = { id: 'general', name: 'General', type: 'text', createdBy: 'system' };\n      await Channel.findOneAndUpdate(\n        { id: channelData.id },\n        channelData,\n        { upsert: true, new: true }\n      );\n\n      // Try to create same channel again\n      await Channel.findOneAndUpdate(\n        { id: channelData.id },\n        channelData,\n        { upsert: true, new: true }\n      );\n\n      const channels = await Channel.find({ id: 'general' });\n      expect(channels.length).toBe(1); // Should only have one\n    });\n\n    it('should set createdBy to system for default channels', async () => {\n      const channelData = { id: 'general', name: 'General', type: 'text', createdBy: 'system' };\n      await Channel.findOneAndUpdate(\n        { id: channelData.id },\n        channelData,\n        { upsert: true, new: true }\n      );\n\n      const channel = await Channel.findOne({ id: 'general' });\n      expect(channel.createdBy).toBe('system');\n    });\n\n    it('should not overwrite existing channels', async () => {\n      // Create channel with custom name\n      await Channel.findOneAndUpdate(\n        { id: 'general' },\n        { id: 'general', name: 'Custom General', type: 'text', createdBy: 'system' },\n        { upsert: true, new: true }\n      );\n\n      // Call initialization again\n      await Channel.findOneAndUpdate(\n        { id: 'general' },\n        { id: 'general', name: 'General', type: 'text', createdBy: 'system' },\n        { upsert: true, new: true }\n      );\n\n      const channel = await Channel.findOne({ id: 'general' });\n      // Should preserve existing data, not overwrite\n      expect(channel.name).toBeDefined();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}