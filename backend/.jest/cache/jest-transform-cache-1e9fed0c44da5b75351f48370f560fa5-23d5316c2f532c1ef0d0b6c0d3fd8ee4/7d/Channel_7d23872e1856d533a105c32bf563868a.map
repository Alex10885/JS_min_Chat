{"version":3,"names":["mongoose","require","channelSchema","Schema","id","type","String","required","unique","trim","name","maxlength","parent","default","enum","description","position","Number","createdBy","createdAt","Date","now","updatedAt","permissions","read","write","locked","Boolean","index","pre","next","methods","safeDelete","messageCount","model","countDocuments","channel","Error","remove","module","exports"],"sources":["Channel.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst channelSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n    maxlength: 100\n  },\n  parent: {\n    type: String,\n    default: null\n  },\n  type: {\n    type: String,\n    enum: ['text', 'voice'],\n    required: true\n  },\n  description: {\n    type: String,\n    maxlength: 500\n  },\n  position: {\n    type: Number,\n    default: 0\n  },\n  createdBy: {\n    type: String,\n    required: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  },\n  permissions: {\n    read: {\n      type: String,\n      enum: ['everyone', 'admin'],\n      default: 'everyone'\n    },\n    write: {\n      type: String,\n      enum: ['everyone', 'admin'],\n      default: 'everyone'\n    }\n  },\n  locked: {\n    type: Boolean,\n    default: false\n  }\n});\n\n// Indexes\nchannelSchema.index({ id: 1, type: 1 }); // For channel queries by type\nchannelSchema.index({ parent: 1 }); // For nested channels\nchannelSchema.index({ position: 1 }); // For ordering\n\n// Update timestamp on save\nchannelSchema.pre('save', function(next) {\n  this.updatedAt = new Date();\n  next();\n});\n\n// Remove channel method (used for deleting with checks)\nchannelSchema.methods.safeDelete = async function() {\n  // Count messages in this channel\n  const messageCount = await mongoose.model('Message').countDocuments({ channel: this.id });\n\n  if (messageCount > 0) {\n    throw new Error(`Cannot delete channel with ${messageCount} messages. Channel must be empty or archived.`);\n  }\n\n  return this.remove();\n};\n\nmodule.exports = mongoose.model('Channel', channelSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AAEpC,MAAMC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACxCC,EAAE,EAAE;IACFC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE;IACJL,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdE,IAAI,EAAE,IAAI;IACVE,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNP,IAAI,EAAEC,MAAM;IACZO,OAAO,EAAE;EACX,CAAC;EACDR,IAAI,EAAE;IACJA,IAAI,EAAEC,MAAM;IACZQ,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;IACvBP,QAAQ,EAAE;EACZ,CAAC;EACDQ,WAAW,EAAE;IACXV,IAAI,EAAEC,MAAM;IACZK,SAAS,EAAE;EACb,CAAC;EACDK,QAAQ,EAAE;IACRX,IAAI,EAAEY,MAAM;IACZJ,OAAO,EAAE;EACX,CAAC;EACDK,SAAS,EAAE;IACTb,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDY,SAAS,EAAE;IACTd,IAAI,EAAEe,IAAI;IACVP,OAAO,EAAEO,IAAI,CAACC;EAChB,CAAC;EACDC,SAAS,EAAE;IACTjB,IAAI,EAAEe,IAAI;IACVP,OAAO,EAAEO,IAAI,CAACC;EAChB,CAAC;EACDE,WAAW,EAAE;IACXC,IAAI,EAAE;MACJnB,IAAI,EAAEC,MAAM;MACZQ,IAAI,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;MAC3BD,OAAO,EAAE;IACX,CAAC;IACDY,KAAK,EAAE;MACLpB,IAAI,EAAEC,MAAM;MACZQ,IAAI,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;MAC3BD,OAAO,EAAE;IACX;EACF,CAAC;EACDa,MAAM,EAAE;IACNrB,IAAI,EAAEsB,OAAO;IACbd,OAAO,EAAE;EACX;AACF,CAAC,CAAC;;AAEF;AACAX,aAAa,CAAC0B,KAAK,CAAC;EAAExB,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAE,CAAC,CAAC,CAAC,CAAC;AACzCH,aAAa,CAAC0B,KAAK,CAAC;EAAEhB,MAAM,EAAE;AAAE,CAAC,CAAC,CAAC,CAAC;AACpCV,aAAa,CAAC0B,KAAK,CAAC;EAAEZ,QAAQ,EAAE;AAAE,CAAC,CAAC,CAAC,CAAC;;AAEtC;AACAd,aAAa,CAAC2B,GAAG,CAAC,MAAM,EAAE,UAASC,IAAI,EAAE;EACvC,IAAI,CAACR,SAAS,GAAG,IAAIF,IAAI,CAAC,CAAC;EAC3BU,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACA5B,aAAa,CAAC6B,OAAO,CAACC,UAAU,GAAG,kBAAiB;EAClD;EACA,MAAMC,YAAY,GAAG,MAAMjC,QAAQ,CAACkC,KAAK,CAAC,SAAS,CAAC,CAACC,cAAc,CAAC;IAAEC,OAAO,EAAE,IAAI,CAAChC;EAAG,CAAC,CAAC;EAEzF,IAAI6B,YAAY,GAAG,CAAC,EAAE;IACpB,MAAM,IAAII,KAAK,CAAC,8BAA8BJ,YAAY,+CAA+C,CAAC;EAC5G;EAEA,OAAO,IAAI,CAACK,MAAM,CAAC,CAAC;AACtB,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGxC,QAAQ,CAACkC,KAAK,CAAC,SAAS,EAAEhC,aAAa,CAAC","ignoreList":[]}