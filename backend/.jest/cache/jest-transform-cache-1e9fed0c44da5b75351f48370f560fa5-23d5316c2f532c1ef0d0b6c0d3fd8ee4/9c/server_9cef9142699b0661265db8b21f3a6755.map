{"version":3,"names":["require","config","express","http","socketIo","jwt","cors","winston","swaggerJsdoc","swaggerUi","helmet","rateLimit","body","validationResult","mongoose","crypto","session","MongoStore","connectDB","closeDB","emailService","User","Message","Channel","logger","createLogger","level","format","combine","timestamp","errors","stack","json","defaultMeta","service","transports","File","filename","Console","colorize","simple","app","server","createServer","authRateLimiter","windowMs","max","process","env","NODE_ENV","CYPRESS_API_SKIP","message","error","standardHeaders","legacyHeaders","skip","req","get","includes","apiRateLimiter","generalRateLimiter","passwordResetRateLimiter","io","origin","ALLOWED_ORIGINS","split","methods","allowedHeaders","credentials","connectTimeout","pingTimeout","pingInterval","upgradeTimeout","allowUpgrades","cookieHttpOnly","cookieSameSite","engine","on","err","console","log","code","httpStatus","status","headers","use","limit","strict","urlencoded","extended","sessionMiddleware","secret","SESSION_SECRET","resave","saveUninitialized","store","create","mongoUrl","MONGODB_URI","collectionName","ttl","autoRemove","touchAfter","forEach","method","originalMethod","sid","args","toUpperCase","startTime","Date","now","result","call","duration","authenticated","userId","cookie","secure","httpOnly","maxAge","sameSite","name","rolling","unset","errorHandler","res","next","url","ip","userAgent","Object","values","map","e","field","path","value","details","keys","keyValue","requestId","id","start","info","statusCode","user","nickname","JSON","stringify","undefined","authenticateSession","sessionId","sessionID","sessionExists","sessionData","role","loginTime","csrfToken","substring","findById","_id","sessionValid","sessionUser","lastSessionCheck","toISOString","warn","authenticateToken","authHeader","token","hasAuthHeader","hasToken","decoded","verify","JWT_SECRET","requireModerator","hasModeratorPrivileges","requireAdmin","hasAdminPrivileges","contentSecurityPolicy","directives","defaultSrc","styleSrc","fontSrc","imgSrc","scriptSrc","connectSrc","crossOriginEmbedderPolicy","swaggerOptions","definition","openapi","title","version","description","contact","servers","components","schemas","type","properties","minLength","maxLength","email","enum","default","createdAt","lastActive","required","createdBy","position","RegisterRequest","password","LoginRequest","identifier","AuthResponse","$ref","ChannelRequest","ErrorResponse","items","msg","param","location","securitySchemes","bearerAuth","scheme","bearerFormat","security","apis","swaggerSpec","removeHeader","serve","setup","page","parseInt","query","users","find","select","sort","total","countDocuments","adminId","pagination","pages","Math","ceil","post","isLength","min","trim","optional","isInt","isEmpty","array","params","reason","toString","ban","bannedUserId","bannedById","banned","banReason","banExpires","unban","unbannedUserId","unbannedById","save","warnedUserId","warnedById","warning","issuedBy","issuedAt","expires","warningsCount","getActiveWarningsCount","isIn","newRole","oldRole","changedUserId","changedById","mute","mutedUserId","mutedById","muteExpires","isMuted","unmute","unmutedUserId","unmutedById","totalUsers","length","setHeader","send","authLimiterStore","resetAll","success","uptime","hasPassword","findOne","$or","isPasswordValid","comparePassword","randomBytes","csrfTokenHash","createHash","update","digest","userAgentLength","Promise","resolve","reject","errorMessage","errorStack","userAgentHash","sign","expiresIn","escape","isEmail","normalizeEmail","existingUser","conflictField","registrationTime","authorization","channels","channelCount","channel","channelId","sockets","onlineUsers","disconnectedCount","socketId","socketData","entries","socket","disconnect","findByIdAndUpdate","disconnectedSockets","hasJwtAuth","hasSessionAuth","sessionUserId","destroy","sessionDestroyed","jwtLogoutResult","sessionLogoutResult","jwtError","sessionError","overallSuccess","Map","userConnections","voiceChannels","request","getHeader","writeHead","end","headersSent","handshake","auth","csrfTokenProvided","sessionCsrfToken","match","providedCsrfToken","Error","provided","expected","connectionCount","newConnectionCount","set","isBanned","emit","updateResult","findOneAndUpdate","$set","new","runValidators","connections","address","cleanupInactiveConnections","timeout","lastHeartbeat","connectionsLeft","catch","delete","setInterval","room","size","updateHeartbeat","heartbeatInterval","connected","clearInterval","retryDatabaseOperation","operation","retries","i","setTimeout","data","leave","previousRoomUsers","Array","from","filter","u","to","join","joinMessage","author","text","roomUsers","history","target","currentUser","messageData","debug","trimmedText","targetNickname","senderRoom","senderSocketId","targetUser","targetFound","targetRoom","onlineUsersInRoom","onlineUsersInSenderRoom","availableUsers","targetSocketId","sender","messageId","onlineUsersCount","messageLength","speaking","has","channelPeers","peerConnection","stream","voiceChannel","offer","fromNickname","answer","candidate","currentCount","newCount","leaveMessage","remainingConnections","initializeServer","defaultChannels","channelData","upsert","PORT","listen","exit","close"],"sources":["server.js"],"sourcesContent":["require('dotenv').config();\nconst express = require('express');\nconst http = require('http');\nconst socketIo = require('socket.io');\nconst jwt = require('jsonwebtoken');\nconst cors = require('cors');\nconst winston = require('winston');\nconst swaggerJsdoc = require('swagger-jsdoc');\nconst swaggerUi = require('swagger-ui-express');\nconst helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst { body, validationResult } = require('express-validator');\nconst mongoose = require('mongoose');\n// Import crypto for generating secure tokens\nconst crypto = require('crypto');\nconst session = require('express-session');\nconst MongoStore = require('connect-mongo');\nconst { connectDB, closeDB } = require('./db/connection');\nconst emailService = require('./services/emailService');\n\n// Import models\nconst User = require('./models/User');\nconst Message = require('./models/Message');\nconst Channel = require('./models/Channel');\n\n// Logger setup\nconst logger = winston.createLogger({\n  level: 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'chat-server' },\n  transports: [\n    new winston.transports.File({ filename: 'logs/server.log' }),\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple()\n      )\n    })\n  ]\n});\n\nconst app = express();\nconst server = http.createServer(app);\n\nconst authRateLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: process.env.NODE_ENV === 'test' || process.env.CYPRESS_API_SKIP ? 20000 : 10, // Higher limit for better UX\n  message: { error: 'Too many authentication attempts, please try again later.' },\n  standardHeaders: true,\n  legacyHeaders: false,\n  skip: (req) => {\n    return req.get('User-Agent') && req.get('User-Agent').includes('Cypress');\n  }\n});\n\nconst apiRateLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 200, // Increased from 100 for better reliability\n  message: { error: 'Too many requests, please try again later.' },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst generalRateLimiter = rateLimit({\n  windowMs: 60 * 60 * 1000, // 1 hour\n  max: 2000, // Increased from 1000\n  message: { error: 'Too many requests from this IP, please try again later.' },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nconst passwordResetRateLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 5, // Increased slightly for reliability\n  message: { error: 'Too many password reset requests, please try again later.' },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\nconst io = socketIo(server, {\n  cors: {\n    origin: process.env.NODE_ENV === 'production'\n      ? process.env.ALLOWED_ORIGINS?.split(',') || false\n      : [\"http://localhost:3003\", \"http://localhost:3000\"],\n    methods: [\"GET\", \"POST\"],\n    allowedHeaders: [\"authorization\", \"content-type\"],\n    credentials: true\n  },\n  // Ensure both transports are supported\n  transports: ['websocket', 'polling'],\n  // Connection settings for better reliability\n  connectTimeout: 20000, // 20 seconds\n  pingTimeout: 5000, // 5 seconds for ping\n  pingInterval: 10000, // 10 seconds between pings\n  upgradeTimeout: 10000,\n  allowUpgrades: true,\n  cookieHttpOnly: true,\n  cookieSameSite: 'lax'\n});\n\n// Log socket connection errors for debugging\nio.engine.on('connection_error', (err) => {\n  console.log('🔌 Socket engine connection error:', err.code, err.message);\n  logger.error('Socket connection error:', {\n    code: err.code,\n    message: err.message,\n    httpStatus: err.status,\n    headers: err.req?.headers\n  });\n});\n\n// CORS configuration\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production'\n    ? process.env.ALLOWED_ORIGINS?.split(',') || false\n    : true,\n  credentials: true\n}));\n\napp.use(express.json({ limit: '20mb', strict: false })); // Increased limit and disabled strict parsing for better error tolerance\napp.use(express.urlencoded({ extended: true, limit: '20mb' })); // Handle form data with increased limit\n\n// Session configuration with secure settings and detailed logging\nconst sessionMiddleware = session({\n  secret: process.env.SESSION_SECRET || 'your-very-long-secure-secret-key-change-in-production',\n  resave: false,\n  saveUninitialized: false,\n  store: (() => {\n    const store = MongoStore.create({\n      mongoUrl: process.env.MONGODB_URI || 'mongodb://localhost:27017/chatjs',\n      collectionName: 'sessions',\n      ttl: 24 * 60 * 60, // 1 day in seconds\n      autoRemove: 'native',\n      touchAfter: 1 * 3600 // Limit session saves to every 1 hour to reduce DB load (must be less than ttl)\n    });\n\n    // Enhanced logging for MongoDB session store operations\n    ['set', 'get', 'destroy', 'touch'].forEach(method => {\n      const originalMethod = store[method];\n      if (typeof originalMethod === 'function') {\n        store[method] = async function(sid, ...args) {\n          try {\n            console.log(`🔄 MongoDB Store ${method.toUpperCase()}: sessionId=${sid}, operation=start`);\n            const startTime = Date.now();\n            const result = await originalMethod.call(this, sid, ...args);\n            const duration = Date.now() - startTime;\n            console.log(`✅ MongoDB Store ${method.toUpperCase()}: sessionId=${sid}, operation=success, duration=${duration}ms, result=${!!result}`);\n\n            // Log session content for set operations\n            if (method === 'set' && args[0]) {\n              console.log(`📝 Session Content: sid=${sid}, authenticated=${args[0].authenticated}, userId=${args[0].userId}`);\n            }\n\n            return result;\n          } catch (error) {\n            console.error(`❌ MongoDB Store ${method.toUpperCase()}: sessionId=${sid}, operation=failed, error=${error.message}`);\n            throw error;\n          }\n        };\n      }\n    });\n\n    return store;\n  })(),\n  cookie: {\n    secure: process.env.NODE_ENV === 'production', // HTTPS only in production\n    httpOnly: true, // Prevent XSS access to cookie\n    maxAge: 24 * 60 * 60 * 1000, // 24 hours\n    sameSite: 'lax' // CSRF protection, 'lax' for cross-origin requests\n  },\n  name: 'chatSession', // Custom name to avoid default 'connect.sid'\n  rolling: false, // Don't extend cookie expiration on each request\n  unset: 'destroy' // Destroy session on logout\n});\n\napp.use(sessionMiddleware);\n\n// Error handling middleware\nconst errorHandler = (err, req, res, next) => {\n  logger.error('Unhandled error:', {\n    message: err.message,\n    stack: err.stack,\n    url: req.url,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent')\n  });\n\n  // Mongoose validation errors\n  if (err.name === 'ValidationError') {\n    const errors = Object.values(err.errors).map(e => ({\n      field: e.path,\n      message: e.message,\n      value: e.value\n    }));\n\n    return res.status(422).json({\n      error: 'Validation failed',\n      details: errors,\n      code: 'VALIDATION_ERROR'\n    });\n  }\n\n  // Mongoose duplicate key error\n  if (err.code === 11000) {\n    const field = Object.keys(err.keyValue)[0];\n    const value = err.keyValue[field];\n    return res.status(409).json({\n      error: `${field} '${value}' already exists`,\n      code: 'DUPLICATE_ERROR'\n    });\n  }\n\n  // JWT errors\n  if (err.name === 'JsonWebTokenError') {\n    return res.status(401).json({\n      error: 'Invalid or expired token',\n      code: 'INVALID_TOKEN'\n    });\n  }\n\n  if (err.name === 'TokenExpiredError') {\n    return res.status(401).json({\n      error: 'Token has expired',\n      code: 'TOKEN_EXPIRED'\n    });\n  }\n\n  // Default server error\n  res.status(500).json({\n    error: 'Internal server error',\n    code: 'INTERNAL_ERROR',\n    requestId: req.id || 'unknown'\n  });\n};\n\n// Request logging middleware\napp.use((req, res, next) => {\n  const start = Date.now();\n\n  res.on('finish', () => {\n    const duration = Date.now() - start;\n    logger.info(`${req.method} ${req.url} - ${res.statusCode} (${duration}ms)`, {\n      ip: req.ip,\n      userAgent: req.get('User-Agent'),\n      user: req.user?.nickname || 'anonymous',\n      body: req.method !== 'GET' ? JSON.stringify(req.body) : undefined\n    });\n  });\n\n  next();\n});\n\n// Session authentication middleware (works parallel to JWT)\nconst authenticateSession = async (req, res, next) => {\n  try {\n    console.log('🔐 Session authentication middleware called:', {\n      url: req.url,\n      method: req.method,\n      sessionId: req.sessionID,\n      sessionExists: !!req.session,\n      sessionData: req.session ? {\n        authenticated: req.session.authenticated,\n        userId: req.session.userId,\n        nickname: req.session.nickname,\n        role: req.session.role,\n        loginTime: req.session.loginTime,\n        csrfToken: req.session.csrfToken?.substring(0, 8) + '...'\n      } : null\n    });\n\n    // Check if session exists and has authenticated user\n    if (req.session && req.session.authenticated && req.session.userId) {\n      console.log('🎯 Found authenticated session for userId:', req.session.userId);\n      console.log('🔓 Session fingerprint check:', {\n        sid: req.sessionID,\n        csrfToken: req.session.csrfToken?.substring(0, 4) + '...',\n        userAgent: req.session.userAgent?.substring(0, 20) + '...',\n        loginTime: req.session.loginTime\n      });\n\n      const user = await User.findById(req.session.userId);\n      if (user) {\n        console.log('✅ Session user found in DB:', {\n          nickname: user.nickname,\n          id: user._id,\n          status: user.status,\n          sessionValid: true\n        });\n        req.sessionUser = user; // Store in req.sessionUser to avoid conflict with JWT req.user\n\n        // Update session fingerprint if needed\n        if (req.session.csrfToken && req.session.userAgent) {\n          req.session.lastSessionCheck = new Date().toISOString();\n          console.log('🔐 Session fingerprint verified and updated');\n        }\n      } else {\n        console.log('⚠️ Session user not found in DB, cleaning session:', req.session.userId);\n        // Clean invalid session\n        delete req.session.authenticated;\n        delete req.session.userId;\n        delete req.session.nickname;\n        delete req.session.role;\n      }\n    } else {\n      console.log('🔍 No authenticated session found or session not initialized', {\n        sessionId: req.sessionID,\n        session: !!req.session,\n        authenticated: req.session?.authenticated,\n        userId: req.session?.userId\n      });\n      req.sessionUser = null; // Explicitly set to null when no session\n    }\n    next();\n  } catch (error) {\n    logger.warn('Session authentication error:', {\n      error: error.message,\n      sessionId: req.sessionID,\n      ip: req.ip\n    });\n    req.sessionUser = null; // Set to null on error\n    next();\n  }\n};\n\n// JWT authentication middleware\nconst authenticateToken = async (req, res, next) => {\n  try {\n    console.log('🔐 JWT authentication middleware called:', { url: req.url, method: req.method });\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n\n    console.log('🔑 Token extraction result:', { hasAuthHeader: !!authHeader, hasToken: !!token });\n\n    if (!token) {\n      console.log('❌ No token provided');\n      return res.status(401).json({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    }\n\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\n    console.log('✅ JWT decoded:', { userId: decoded.userId, nickname: decoded.nickname });\n    const user = await User.findById(decoded.userId);\n\n    if (!user) {\n      console.log('❌ User not found in DB for JWT userId:', decoded.userId);\n      return res.status(401).json({\n        error: 'User not found',\n        code: 'USER_NOT_FOUND'\n      });\n    }\n\n    req.user = user;\n    console.log('✅ JWT authentication successful for user:', user.nickname, { id: user._id, status: user.status });\n    next();\n  } catch (error) {\n    logger.warn('JWT authentication failed:', {\n      error: error.message,\n      ip: req.ip\n    });\n\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        error: 'Invalid token format',\n        code: 'INVALID_TOKEN_FORMAT'\n      });\n    }\n\n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        error: 'Token has expired',\n        code: 'TOKEN_EXPIRED'\n      });\n    }\n\n    return res.status(401).json({\n      error: 'Token verification failed',\n      code: 'TOKEN_VERIFICATION_FAILED'\n    });\n  }\n};\n\n// Role-based access control middleware\nconst requireModerator = async (req, res, next) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        error: 'Authentication required',\n        code: 'AUTH_REQUIRED'\n      });\n    }\n\n    if (!req.user.hasModeratorPrivileges()) {\n      return res.status(403).json({\n        error: 'Moderator privileges required',\n        code: 'MODERATOR_REQUIRED'\n      });\n    }\n\n    next();\n  } catch (error) {\n    logger.error('Moderator check error:', error);\n    res.status(500).json({\n      error: 'Server error during authorization check',\n      code: 'AUTH_CHECK_ERROR'\n    });\n  }\n};\n\nconst requireAdmin = async (req, res, next) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        error: 'Authentication required',\n        code: 'AUTH_REQUIRED'\n      });\n    }\n\n    if (!req.user.hasAdminPrivileges()) {\n      return res.status(403).json({\n        error: 'Administrator privileges required',\n        code: 'ADMIN_REQUIRED'\n      });\n    }\n\n    next();\n  } catch (error) {\n    logger.error('Admin check error:', error);\n    res.status(500).json({\n      error: 'Server error during authorization check',\n      code: 'AUTH_CHECK_ERROR'\n    });\n  }\n};\n\n// Error handling middleware\n\n// Session authentication middleware (run before rate limiting)\napp.use(authenticateSession);\n\n// General rate limiting (applied to all HTTP requests)\napp.use(generalRateLimiter);\n\n// Helmet security headers\napp.use(\n  helmet({\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n        fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n        imgSrc: [\"'self'\", \"data:\"],\n        scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n        connectSrc: [\"'self'\"]\n      }\n    },\n    crossOriginEmbedderPolicy: false\n  })\n);\n\n// Swagger configuration\nconst swaggerOptions = {\n  definition: {\n    openapi: '3.0.0',\n    info: {\n      title: 'Chat-JS API',\n      version: '1.0.0',\n      description: 'REST API for Chat-JS application with real-time messaging and voice channels',\n      contact: {\n        name: 'Chat-JS Support'\n      }\n    },\n    servers: [\n      {\n        url: 'http://localhost:3001',\n        description: 'Development server'\n      }\n    ],\n    components: {\n      schemas: {\n        User: {\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'User unique identifier'\n            },\n            nickname: {\n              type: 'string',\n              description: 'User nickname',\n              minLength: 3,\n              maxLength: 50\n            },\n            email: {\n              type: 'string',\n              format: 'email',\n              description: 'User email address'\n            },\n            role: {\n              type: 'string',\n              enum: ['admin', 'member'],\n              default: 'member',\n              description: 'User role'\n            },\n            createdAt: {\n              type: 'string',\n              format: 'date-time',\n              description: 'User creation timestamp'\n            },\n            lastActive: {\n              type: 'string',\n              format: 'date-time',\n              description: 'Last activity timestamp'\n            },\n            status: {\n              type: 'string',\n              enum: ['online', 'offline'],\n              description: 'User online status'\n            }\n          },\n          required: ['nickname', 'email', 'password', 'role']\n        },\n        Channel: {\n          type: 'object',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'Channel unique identifier (auto-generated from name)'\n            },\n            name: {\n              type: 'string',\n              description: 'Channel display name',\n              minLength: 1,\n              maxLength: 100\n            },\n            type: {\n              type: 'string',\n              enum: ['text', 'voice'],\n              description: 'Channel type'\n            },\n            description: {\n              type: 'string',\n              description: 'Channel description',\n              maxLength: 500\n            },\n            createdBy: {\n              type: 'string',\n              description: 'Creator nickname'\n            },\n            position: {\n              type: 'number',\n              default: 0,\n              description: 'Channel display position'\n            }\n          },\n          required: ['id', 'name', 'type', 'createdBy']\n        },\n        RegisterRequest: {\n          type: 'object',\n          required: ['nickname', 'email', 'password'],\n          properties: {\n            nickname: {\n              type: 'string',\n              minLength: 3,\n              maxLength: 50,\n              description: 'Unique username'\n            },\n            email: {\n              type: 'string',\n              format: 'email',\n              description: 'Valid email address'\n            },\n            password: {\n              type: 'string',\n              minLength: 6,\n              description: 'User password'\n            }\n          }\n        },\n        LoginRequest: {\n          type: 'object',\n          required: ['identifier', 'password'],\n          properties: {\n            identifier: {\n              type: 'string',\n              description: 'Username or email'\n            },\n            password: {\n              type: 'string',\n              description: 'User password'\n            }\n          }\n        },\n        AuthResponse: {\n          type: 'object',\n          properties: {\n            token: {\n              type: 'string',\n              description: 'JWT access token'\n            },\n            user: {\n              $ref: '#/components/schemas/User'\n            }\n          }\n        },\n        ChannelRequest: {\n          type: 'object',\n          required: ['name', 'type'],\n          properties: {\n            name: {\n              type: 'string',\n              minLength: 1,\n              maxLength: 100,\n              description: 'Channel display name'\n            },\n            type: {\n              type: 'string',\n              enum: ['text', 'voice'],\n              description: 'Channel type'\n            },\n            description: {\n              type: 'string',\n              maxLength: 500,\n              description: 'Optional channel description'\n            }\n          }\n        },\n        ErrorResponse: {\n          type: 'object',\n          properties: {\n            error: {\n              type: 'string',\n              description: 'Error message'\n            },\n            errors: {\n              type: 'array',\n              items: {\n                type: 'object',\n                properties: {\n                  msg: { type: 'string' },\n                  param: { type: 'string' },\n                  location: { type: 'string' }\n                }\n              },\n              description: 'Validation errors array'\n            }\n          }\n        }\n      },\n      securitySchemes: {\n        bearerAuth: {\n          type: 'http',\n          scheme: 'bearer',\n          bearerFormat: 'JWT'\n        }\n      }\n    },\n    security: [\n      {\n        bearerAuth: []\n      }\n    ]\n  },\n  apis: ['./server.js'] // Path to the API routes\n};\n\nconst swaggerSpec = swaggerJsdoc(swaggerOptions);\n\n// Swagger UI with CSP disabled for this route\napp.use('/api-docs', (req, res, next) => {\n  // Disable CSP for Swagger UI\n  res.removeHeader('Content-Security-Policy');\n  next();\n}, swaggerUi.serve, swaggerUi.setup(swaggerSpec));\n\n// Administrative endpoints - require moderator privileges\nconsole.log('🔧 Administrative API endpoints registered at startup');\n\n// GET /api/admin/users - List all users with moderation info\napp.get('/api/admin/users', authenticateToken, requireModerator, apiRateLimiter, async (req, res) => {\n  try {\n    const page = parseInt(req.query.page) || 1;\n    const limit = parseInt(req.query.limit) || 50;\n    const skip = (page - 1) * limit;\n\n    const users = await User.find({})\n      .select('-password -resetPasswordToken -resetPasswordExpires -moderationToken -moderationTokenExpires')\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n\n    const total = await User.countDocuments();\n\n    logger.info(`Admin user list requested by ${req.user.nickname}`, {\n      adminId: req.user._id,\n      page,\n      limit,\n      total\n    });\n\n    res.json({\n      users,\n      pagination: {\n        page,\n        limit,\n        total,\n        pages: Math.ceil(total / limit)\n      }\n    });\n  } catch (error) {\n    logger.error('Error fetching users for admin:', error);\n    res.status(500).json({ error: 'Failed to fetch users', code: 'DATABASE_ERROR' });\n  }\n});\n\n// POST /api/admin/users/:userId/ban - Ban a user\napp.post('/api/admin/users/:userId/ban', authenticateToken, requireModerator, apiRateLimiter, [\n  body('reason').isLength({ min: 1, max: 500 }).trim(),\n  body('duration').optional().isInt({ min: 1, max: 31536000 }) // Max 1 year in seconds\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { userId } = req.params;\n    const { reason, duration } = req.body;\n\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    // Prevent banning yourself\n    if (user._id.toString() === req.user._id.toString()) {\n      return res.status(400).json({ error: 'Cannot ban yourself' });\n    }\n\n    // Prevent non-admin from banning admin\n    if (user.role === 'admin' && req.user.role !== 'admin') {\n      return res.status(403).json({ error: 'Cannot ban administrator' });\n    }\n\n    await user.ban(reason, duration, req.user._id);\n\n    logger.info(`User ${user.nickname} banned by ${req.user.nickname}`, {\n      bannedUserId: userId,\n      bannedById: req.user._id,\n      reason,\n      duration\n    });\n\n    res.json({\n      message: `User ${user.nickname} has been banned`,\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        banned: true,\n        banReason: reason,\n        banExpires: user.banExpires\n      }\n    });\n  } catch (error) {\n    logger.error('Error banning user:', error);\n    res.status(500).json({ error: 'Failed to ban user' });\n  }\n});\n\n// POST /api/admin/users/:userId/unban - Unban a user\napp.post('/api/admin/users/:userId/unban', authenticateToken, requireModerator, apiRateLimiter, async (req, res) => {\n  try {\n    const { userId } = req.params;\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    if (!user.banned) {\n      return res.status(400).json({ error: 'User is not banned' });\n    }\n\n    await user.unban();\n\n    logger.info(`User ${user.nickname} unbanned by ${req.user.nickname}`, {\n      unbannedUserId: userId,\n      unbannedById: req.user._id\n    });\n\n    res.json({\n      message: `User ${user.nickname} has been unbanned`,\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        banned: false\n      }\n    });\n  } catch (error) {\n    logger.error('Error unbanning user:', error);\n    res.status(500).json({ error: 'Failed to unban user' });\n  }\n});\n\n// POST /api/admin/users/:userId/warn - Issue warning to user\napp.post('/api/admin/users/:userId/warn', authenticateToken, requireModerator, apiRateLimiter, [\n  body('reason').isLength({ min: 1, max: 500 }).trim(),\n  body('duration').optional().isInt({ min: 1, max: 31536000 })\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { userId } = req.params;\n    const { reason, duration } = req.body;\n\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    await user.warn(reason, req.user._id, duration);\n    await user.save();\n\n    logger.info(`Warning issued to user ${user.nickname} by ${req.user.nickname}`, {\n      warnedUserId: userId,\n      warnedById: req.user._id,\n      reason,\n      duration\n    });\n\n    res.json({\n      message: `Warning issued to user ${user.nickname}`,\n      warning: {\n        reason,\n        issuedBy: req.user.nickname,\n        issuedAt: new Date(),\n        expires: duration ? new Date(Date.now() + duration) : null\n      },\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        warningsCount: user.getActiveWarningsCount()\n      }\n    });\n  } catch (error) {\n    logger.error('Error warning user:', error);\n    res.status(500).json({ error: 'Failed to warn user' });\n  }\n});\n\n// POST /api/admin/users/:userId/role - Change user role\napp.post('/api/admin/users/:userId/role', authenticateToken, requireAdmin, apiRateLimiter, [\n  body('role').isIn(['member', 'moderator', 'admin'])\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { userId } = req.params;\n    const { role: newRole } = req.body;\n\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    // Prevent modifying your own role in potentially problematic ways\n    if (user._id.toString() === req.user._id.toString()) {\n      return res.status(400).json({ error: 'Cannot modify your own role' });\n    }\n\n    // Prevent non-admin from promoting to admin or demoting admin\n    if ((newRole === 'admin' || user.role === 'admin') && req.user.role !== 'admin') {\n      return res.status(403).json({ error: 'Only administrators can manage admin roles' });\n    }\n\n    const oldRole = user.role;\n    user.role = newRole;\n    await user.save();\n\n    logger.info(`User ${user.nickname} role changed from ${oldRole} to ${newRole} by ${req.user.nickname}`, {\n      changedUserId: userId,\n      changedById: req.user._id,\n      oldRole,\n      newRole\n    });\n\n    res.json({\n      message: `User ${user.nickname} role changed to ${newRole}`,\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        role: newRole\n      }\n    });\n  } catch (error) {\n    logger.error('Error changing user role:', error);\n    res.status(500).json({ error: 'Failed to change user role' });\n  }\n});\n\n// POST /api/admin/users/:userId/mute - Mute user\napp.post('/api/admin/users/:userId/mute', authenticateToken, requireModerator, apiRateLimiter, [\n  body('duration').isInt({ min: 60, max: 86400 }) // 1 minute to 24 hours\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { userId } = req.params;\n    const { duration } = req.body;\n\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    await user.mute(duration);\n\n    logger.info(`User ${user.nickname} muted by ${req.user.nickname}`, {\n      mutedUserId: userId,\n      mutedById: req.user._id,\n      duration\n    });\n\n    res.json({\n      message: `User ${user.nickname} has been muted`,\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        muteExpires: user.muteExpires\n      }\n    });\n  } catch (error) {\n    logger.error('Error muting user:', error);\n    res.status(500).json({ error: 'Failed to mute user' });\n  }\n});\n\n// POST /api/admin/users/:userId/unmute - Unmute user\napp.post('/api/admin/users/:userId/unmute', authenticateToken, requireModerator, apiRateLimiter, async (req, res) => {\n  try {\n    const { userId } = req.params;\n    const user = await User.findById(userId);\n    if (!user) {\n      return res.status(404).json({ error: 'User not found' });\n    }\n\n    if (!user.isMuted()) {\n      return res.status(400).json({ error: 'User is not muted' });\n    }\n\n    await user.unmute();\n\n    logger.info(`User ${user.nickname} unmuted by ${req.user.nickname}`, {\n      unmutedUserId: userId,\n      unmutedById: req.user._id\n    });\n\n    res.json({\n      message: `User ${user.nickname} has been unmuted`,\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        muteExpires: null\n      }\n    });\n  } catch (error) {\n    logger.error('Error unmuting user:', error);\n    res.status(500).json({ error: 'Failed to unmute user' });\n  }\n});\n\n/**\n * @swagger\n * /api/users:\n *   get:\n *     tags:\n *       - Users\n *     summary: Get list of all registered users\n *     description: Retrieves a list of all users with their roles and online status\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: List of users successfully retrieved\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 type: object\n *                 properties:\n *                   id:\n *                     type: string\n *                     description: User's unique identifier\n *                   nickname:\n *                     type: string\n *                     description: User's display name\n *                   role:\n *                     type: string\n *                     enum: [admin, moderator, member]\n *                     description: User's role level\n *                   status:\n *                     type: string\n *                     enum: [online, offline]\n *                     description: User's online status\n *                   createdAt:\n *                     type: string\n *                     format: date-time\n *                     description: User registration date\n *                   lastActive:\n *                     type: string\n *                     format: date-time\n *                     description: Last activity timestamp\n *             example:\n *               - id: \"507f1f77bcf86cd799439011\"\n *                 nickname: \"john_doe\"\n *                 role: \"member\"\n *                 status: \"online\"\n *                 createdAt: \"2024-09-07T10:30:00Z\"\n *                 lastActive: \"2024-09-07T22:15:00Z\"\n *       401:\n *         description: Authentication required\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ErrorResponse'\n *       500:\n *         description: Server error\n */\nconsole.log('🔧 GET /api/users route registered at startup');\napp.get('/api/users', authenticateToken, apiRateLimiter, async (req, res) => {\n  try {\n    const users = await User.find({})\n      .select('_id nickname role status createdAt lastActive')\n      .sort({ nickname: 1 });\n\n    logger.info(`Users list requested by ${req.user.nickname}`, {\n      userId: req.user._id,\n      totalUsers: users.length\n    });\n\n    console.log('📤 Returning users data:', users.length);\n    res.json(users);\n  } catch (error) {\n    logger.error('Error fetching users:', error);\n    console.error('❌ Error in GET /api/users:', error.message);\n    res.status(500).json({ error: 'Failed to fetch users', code: 'DATABASE_ERROR' });\n  }\n});\n\n// Swagger JSON endpoint\napp.get('/api-docs.json', (req, res) => {\n  res.removeHeader('Content-Security-Policy');\n  res.setHeader('Content-Type', 'application/json');\n  res.send(swaggerSpec);\n});\n\n// Development and test endpoint to reset rate limiting\napp.post('/api/reset-ratelimit', (req, res) => {\n  // In a real application, you'd want to get the store from the limiter instance\n  // For express-rate-limit v7+, you can access the store like this:\n  try {\n    const authLimiterStore = authRateLimiter.store;\n    if (authLimiterStore && typeof authLimiterStore.resetAll === 'function') {\n      authLimiterStore.resetAll();\n      console.log('🔄 Rate limiting reset for testing purposes');\n      res.json({ success: true, message: 'Rate limiting has been reset' });\n    } else {\n      // If store doesn't expose resetAll, create a temporary workaround\n      console.log('⚠️ Rate limiter store doesn\\'t support resetAll - rate limiting will expire naturally');\n      res.json({ success: false, message: 'Cannot reset rate limiting automatically, wait for timeout' });\n    }\n  } catch (error) {\n    console.log('❌ Error resetting rate limiting:', error.message);\n    res.status(500).json({ success: false, error: 'Failed to reset rate limiting' });\n  }\n});\n\n// Health check endpoint\napp.get('/health', (req, res) => {\n  res.json({\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime()\n  });\n});\n\n// Log middleware to check incoming requests\napp.use((req, res, next) => {\n  logger.info(`🔍 Incoming request: ${req.method} ${req.url}`, {\n    ip: req.ip,\n    userAgent: req.get('User-Agent'),\n    headers: req.headers\n  });\n  next();\n});\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n   * @swagger\n   * /api/login:\n   *   post:\n   *     tags:\n   *       - Authentication\n   *     summary: Login existing user\n   *     description: Authenticates and logs in an existing user with JWT token\n   *     requestBody:\n   *       required: true\n   *       content:\n   *         application/json:\n   *           schema:\n   *             $ref: '#/components/schemas/LoginRequest'\n   *     responses:\n   *       200:\n   *         description: Login successful\n   *         content:\n   *           application/json:\n   *             schema:\n   *               $ref: '#/components/schemas/AuthResponse'\n   *             example:\n   *               token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n   *               user:\n   *                 id: \"507f1f77bcf86cd799439011\"\n   *                 nickname: \"john_doe\"\n   *                 email: \"john@example.com\"\n   *                 role: \"member\"\n   *       400:\n   *         description: Invalid credentials or validation errors\n   *         content:\n   *           application/json:\n   *             schema:\n   *               $ref: '#/components/schemas/ErrorResponse'\n   *             example:\n   *               error: \"Invalid credentials\"\n   *       500:\n   *         description: Server error\n   */\nconsole.log('🔧 POST /api/login route registered at startup');\napp.post('/api/login', [\n  body('identifier').isLength({ min: 1, max: 50 }).trim(),\n  body('password').isLength({ min: 6, max: 100 })\n], async (req, res) => {\n  try {\n    console.log('🔑 Incoming login request:', { identifier: req.body.identifier, hasPassword: !!req.body.password, ip: req.ip });\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      console.log('❌ Login validation errors:', errors.array());\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { identifier, password } = req.body;\n    console.log('🔍 Searching for user with identifier:', identifier);\n\n    // Find user by nickname or email\n    const user = await User.findOne({\n      $or: [{ nickname: identifier }, { email: identifier }]\n    });\n\n    if (!user) {\n      console.log('❌ User not found:', identifier);\n      return res.status(400).json({ error: 'Invalid credentials' });\n    }\n\n    console.log('✅ User found:', { nickname: user.nickname, email: user.email, status: user.status });\n\n    // Compare password\n    const isPasswordValid = await user.comparePassword(password);\n    console.log('🔑 Password validation result:', isPasswordValid);\n\n    if (!isPasswordValid) {\n      console.log('❌ Invalid password for user:', user.nickname);\n      return res.status(400).json({ error: 'Invalid credentials' });\n    }\n\n    // Update user status to online\n    user.status = 'online';\n    await user.save();\n\n    // Store user in session for parallel authentication\n    console.log('🔏 Creating and storing user session for user:', user.nickname);\n    console.log('🏷️ Generating sessionId:', req.sessionId);\n\n    req.session.authenticated = true;\n    req.session.userId = user._id.toString();\n    req.session.nickname = user.nickname; // Store additional info for convenience\n    req.session.role = user.role;\n    req.session.csrfToken = crypto.randomBytes(32).toString('hex'); // Generate secure unique CSRF token\n    req.session.loginTime = new Date().toISOString();\n    req.session.userAgent = req.get('User-Agent'); // Store user agent for additional security\n\n    console.log('🔓 Session fingerprint generated:', {\n      csrfTokenHash: crypto.createHash('sha256').update(req.session.csrfToken).digest('hex').substring(0, 8),\n      userAgentLength: req.session.userAgent?.length,\n      loginTime: req.session.loginTime\n    });\n\n    // Save session before JWT generation\n    console.log('🔐 Saving session to MongoDB before JWT generation:', {\n      sessionId: req.sessionId,\n      userId: req.session.userId,\n      nickname: req.session.nickname,\n      role: req.session.role,\n      csrfToken: req.session.csrfToken?.substring(0, 8) + '...', // Log only first part for security\n      sessionData: {\n        authenticated: req.session.authenticated,\n        userId: req.session.userId,\n        loginTime: req.session.loginTime\n      }\n    });\n\n    await new Promise((resolve, reject) => {\n      req.session.save((err) => {\n        if (err) {\n          console.error('❌ Session save error:', {\n            sessionId: req.sessionId,\n            errorMessage: err.message,\n            errorStack: err.stack\n          });\n          reject(err);\n        } else {\n          console.log('✅ Session saved successfully with security features:', {\n            sessionId: req.sessionId,\n            authenticated: req.session.authenticated,\n            userId: req.session.userId,\n            loginTime: req.session.loginTime,\n            userAgentLength: req.session.userAgent?.length\n          });\n          logger.info('Session saved during login', {\n            sessionId: req.sessionId,\n            userId: req.session.userId,\n            nickname: req.session.nickname,\n            role: req.session.role,\n            ip: req.ip,\n            userAgentHash: crypto.createHash('sha256').update(req.session.userAgent || '').digest('hex').substring(0, 16)\n          });\n          resolve();\n        }\n      });\n    });\n\n    // Generate JWT token\n    console.log('🔏 Generating JWT token for user:', user.nickname);\n    const token = jwt.sign(\n      {\n        userId: user._id,\n        nickname: user.nickname,\n        role: user.role,\n        csrfToken: req.session.csrfToken,\n        sessionId: req.sessionId\n      },\n      process.env.JWT_SECRET,\n      { expiresIn: '24h' }\n    );\n    console.log('✅ JWT token generated successfully');\n\n    logger.info(`User logged in: ${user.nickname}`);\n\n    console.log('📤 Sending login response');\n    res.json({\n      token, // JWT for API calls and WebSockets\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        email: user.email,\n        role: user.role\n      },\n      session: {\n        authenticated: true,\n        id: req.sessionId,\n        expires: req.session.cookie.expires\n      }\n    });\n  } catch (error) {\n    logger.error('Login error:', error);\n    res.status(500).json({ error: 'Server error during login' });\n  }\n});\n\n/**\n   * @swagger\n   * /api/register:\n  *   post:\n  *     tags:\n  *       - Authentication\n  *     summary: Register new user\n  *     description: Creates a new user account and returns JWT token\n  *     requestBody:\n  *       required: true\n  *       content:\n  *         application/json:\n  *           schema:\n  *             $ref: '#/components/schemas/RegisterRequest'\n  *           example:\n  *             nickname: \"john_doe\"\n  *             email: \"john@example.com\"\n  *             password: \"securePass123\"\n  *     responses:\n  *       201:\n  *         description: Registration successful\n  *         content:\n  *           application/json:\n  *             schema:\n  *               $ref: '#/components/schemas/AuthResponse'\n  *             example:\n  *               token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n  *               user:\n  *                 id: \"507f1f77bcf86cd799439011\"\n  *                 nickname: \"john_doe\"\n  *                 email: \"john@example.com\"\n  *                 role: \"member\"\n  *       400:\n  *         description: Validation errors or user already exists\n  *         content:\n  *           application/json:\n  *             schema:\n  *               $ref: '#/components/schemas/ErrorResponse'\n  *             example:\n  *               error: \"Nickname already taken\"\n  *       500:\n  *         description: Server error\n  */\napp.post('/api/register', authRateLimiter, [\n  body('nickname').isLength({ min: 3, max: 50 }).trim().escape(),\n  body('email').isEmail().normalizeEmail(),\n  body('password').isLength({ min: 6 })\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { nickname, email, password } = req.body;\n\n    // Check if user exists\n    const existingUser = await User.findOne({\n      $or: [{ nickname }, { email }]\n    });\n\n    if (existingUser) {\n      const conflictField = existingUser.nickname === nickname ? 'nickname' : 'email';\n      const errorMessage = conflictField === 'nickname' ? 'Nickname already taken' : 'Email already registered';\n      return res.status(409).json({ error: errorMessage });\n    }\n\n    // Create user\n    const user = new User({ nickname, email, password, role: 'member', status: 'online' });\n    await user.save();\n\n    console.log('🔏 Creating and storing new user session during registration for user:', user.nickname);\n    console.log('🏷️ Generating sessionId during registration:', req.sessionId);\n\n    // Store user in session for parallel authentication during registration\n    req.session.authenticated = true;\n    req.session.userId = user._id.toString();\n    req.session.nickname = user.nickname;\n    req.session.role = user.role;\n    req.session.csrfToken = crypto.randomBytes(32).toString('hex'); // Generate secure unique CSRF token\n    req.session.registrationTime = new Date().toISOString();\n    req.session.userAgent = req.get('User-Agent'); // Additional security tracking\n\n    console.log('🔓 Registration session fingerprint generated:', {\n      csrfTokenHash: crypto.createHash('sha256').update(req.session.csrfToken).digest('hex').substring(0, 8),\n      userAgentLength: req.session.userAgent?.length,\n      registrationTime: req.session.registrationTime\n    });\n\n    // Save session before JWT generation\n    console.log('🔐 Saving registration session to MongoDB before JWT generation:', {\n      sessionId: req.sessionId,\n      userId: req.session.userId,\n      nickname: req.session.nickname,\n      role: req.session.role,\n      csrfToken: req.session.csrfToken?.substring(0, 8) + '...',\n      registrationTime: req.session.registrationTime,\n      sessionData: {\n        authenticated: req.session.authenticated,\n        userId: req.session.userId,\n        registrationTime: req.session.registrationTime\n      }\n    });\n\n    await new Promise((resolve, reject) => {\n      req.session.save((err) => {\n        if (err) {\n          console.error('❌ Session save error during registration:', {\n            sessionId: req.sessionId,\n            errorMessage: err.message,\n            errorStack: err.stack\n          });\n          reject(err);\n        } else {\n          console.log('✅ Session saved successfully during registration:', {\n            sessionId: req.sessionId,\n            authenticated: req.session.authenticated,\n            userId: req.session.userId,\n            registrationTime: req.session.registrationTime,\n            userAgentLength: req.session.userAgent?.length\n          });\n          logger.info('Session saved during registration', {\n            sessionId: req.sessionId,\n            userId: req.session.userId,\n            nickname: req.session.nickname,\n            role: req.session.role,\n            ip: req.ip,\n            userAgentHash: crypto.createHash('sha256').update(req.session.userAgent || '').digest('hex').substring(0, 16)\n          });\n          resolve();\n        }\n      });\n    });\n\n    console.log('JWT_SECRET present:', !!process.env.JWT_SECRET);\n    const token = jwt.sign(\n      {\n        userId: user._id,\n        nickname: user.nickname,\n        role: user.role,\n        csrfToken: req.session.csrfToken,\n        sessionId: req.sessionId\n      },\n      process.env.JWT_SECRET,\n      { expiresIn: '24h' }\n    );\n\n    console.log('JWT token generated successfully');\n    logger.info(`User registered: ${user.nickname}`);\n\n    res.status(201).json({\n      token, // JWT for API calls and WebSockets\n      user: {\n        id: user._id,\n        nickname: user.nickname,\n        email: user.email,\n        role: user.role\n      },\n      session: {\n        authenticated: true,\n        id: req.sessionId,\n        expires: req.session.cookie.expires\n      }\n    });\n  } catch (error) {\n    logger.error('Registration error:', error);\n    res.status(500).json({ error: 'Server error during registration' });\n  }\n});\n\n/**\n * @swagger\n * /api/channels:\n *   get:\n *     tags:\n *       - Channels\n *     summary: Get list of channels\n *     description: Retrieves a list of all available channels\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: List of channels\n *         content:\n *           application/json:\n *             schema:\n *               type: array\n *               items:\n *                 $ref: '#/components/schemas/Channel'\n *             example:\n *               - id: \"general\"\n *                 name: \"General\"\n *                 type: \"text\"\n *                 description: \"\"\n *                 createdBy: \"system\"\n *                 position: 0\n *       401:\n *         description: Unauthorized\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ErrorResponse'\n *             example:\n *               error: \"Access token required\"\n *       500:\n *         description: Internal server error\n */\nconsole.log('🔧 GET /api/channels route registered at startup');\napp.get('/api/channels', authenticateToken, apiRateLimiter, async (req, res) => {\n  console.log('🚀 GET /api/channels endpoint called', { method: req.method, url: req.url, headers: req.headers.authorization ? 'auth header present' : 'no auth header' });\n  try {\n    const channels = await Channel.find({})\n      .select('-_id id name type description createdBy position')\n      .sort({ position: 1 });\n\n    logger.info(`Channels list requested by ${req.user.nickname}`, {\n      userId: req.user._id,\n      channelCount: channels.length\n    });\n\n    console.log('📤 Returning channels data:', channels.length);\n    res.json(channels);\n  } catch (error) {\n    logger.error('Error fetching channels:', error);\n    console.error('❌ Error in GET /api/channels:', error.message);\n    res.status(500).json({ error: 'Failed to fetch channels', code: 'DATABASE_ERROR' });\n  }\n});\n\nconsole.log('🔧 POST /api/channels route registered at startup');\n\n/**\n * @swagger\n * /api/channels:\n *   post:\n *     tags:\n *       - Channels\n *     summary: Create a new channel\n *     description: Creates a new text or voice channel\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/ChannelRequest'\n *           example:\n *             name: \"NewChannel\"\n *             type: \"text\"\n *             description: \"Description of the new channel\"\n *     responses:\n *       201:\n *         description: Channel created successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/Channel'\n *             example:\n *               id: \"newchannel\"\n *               name: \"NewChannel\"\n *               type: \"text\"\n *               description: \"Description of the new channel\"\n *               createdBy: \"john_doe\"\n *               position: 10\n *       400:\n *         description: Invalid request data\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ErrorResponse'\n *       401:\n *         description: Unauthorized\n *       409:\n *         description: Channel name already exists\n *       500:\n *         description: Server error\n */\napp.post('/api/channels', authenticateToken, apiRateLimiter, [\n  body('name').isLength({ min: 1, max: 100 }).trim().escape(),\n  body('type').isIn(['text', 'voice']).trim(),\n  body('description').optional().isLength({ max: 500 }).trim()\n], async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { name, type, description } = req.body;\n    const createdBy = req.user.nickname;\n\n    // Create new channel (ID will be auto-generated in pre-save middleware)\n    const channel = new Channel({\n      name,\n      type,\n      description,\n      createdBy\n    });\n\n    await channel.save();\n\n    logger.info(`Channel '${name}' created by ${createdBy}`, {\n      channelId: channel.id,\n      type,\n      userId: req.user._id\n    });\n\n    res.status(201).json({\n      id: channel.id,\n      name: channel.name,\n      type: channel.type,\n      description: channel.description,\n      createdBy: channel.createdBy,\n      position: channel.position\n    });\n\n  } catch (error) {\n    logger.error('Error creating channel:', error);\n\n    if (error.name === 'ValidationError') {\n      return res.status(400).json({\n        error: 'Invalid channel data',\n        details: error.message\n      });\n    }\n\n    if (error.code === 11000) {\n      return res.status(409).json({\n        error: 'Channel name already exists',\n        code: 'DUPLICATE_CHANNEL'\n      });\n    }\n\n    res.status(500).json({\n      error: 'Failed to create channel',\n      code: 'DATABASE_ERROR'\n    });\n  }\n});\n\nconsole.log('🔧 POST /api/logout route registered at startup');\napp.post('/api/logout', authenticateToken, apiRateLimiter, async (req, res) => {\n  try {\n    console.log('🚪 Logout request from user:', req.user.nickname, { userId: req.user._id });\n\n    // Disconnect all Socket.IO connections for this user\n    const sockets = onlineUsers;\n    let disconnectedCount = 0;\n    for (const [socketId, socketData] of sockets.entries()) {\n      if (socketData.userId === req.user._id.toString()) {\n        const socket = io.sockets.sockets.get(socketId);\n        if (socket) {\n          socket.disconnect();\n          disconnectedCount++;\n        }\n      }\n    }\n\n    // Update user status to offline\n    await User.findByIdAndUpdate(req.user._id, {\n      status: 'offline',\n      lastActive: new Date()\n    });\n\n    console.log(`✅ User ${req.user.nickname} logged out successfully, ${disconnectedCount} connections disconnected`);\n    logger.info(`User logged out: ${req.user.nickname}`, {\n      userId: req.user._id,\n      disconnectedSockets: disconnectedCount\n    });\n\n    res.json({\n      success: true,\n      message: 'Logged out successfully',\n      disconnectedCount\n    });\n  } catch (error) {\n    logger.error('Logout error:', error);\n    res.status(500).json({ error: 'Server error during logout' });\n  }\n});\n\n/**\n * Session logout endpoint - destroys session\n * This complements JWT logout to handle session-based authentication\n */\napp.post('/api/logout_session', apiRateLimiter, async (req, res) => {\n  try {\n    console.log('🚪 Session logout request, sessionId:', req.sessionId);\n\n    // Check if there's an authenticated session or JWT user\n    const hasJwtAuth = !!req.user; // From JWT middleware\n    const hasSessionAuth = req.sessionUser || (req.session && req.session.authenticated);\n    const sessionUserId = req.session && req.session.userId;\n\n    console.log('🤔 Session logout check:', {\n      hasJwtAuth,\n      hasSessionAuth,\n      sessionUserId,\n      sessionId: req.sessionId\n    });\n\n    if (hasSessionAuth) {\n      const sessionUser = sessionUserId ? await User.findById(sessionUserId) : null;\n      const nickname = sessionUser ? sessionUser.nickname : 'unknown';\n\n      console.log('✅ Session logout: Destroying session for user:', nickname);\n\n      // Disconnect Socket.IO connections for this session user\n      if (sessionUserId) {\n        const sockets = onlineUsers;\n        let disconnectedCount = 0;\n        for (const [socketId, socketData] of sockets.entries()) {\n          if (socketData.userId === sessionUserId) {\n            const socket = io.sockets.sockets.get(socketId);\n            if (socket) {\n              socket.disconnect();\n              disconnectedCount++;\n            }\n          }\n        }\n\n        console.log(`🗑️ Session logout: Disconnected ${disconnectedCount} socket connections`);\n      }\n\n      // Destroy the session\n      await new Promise((resolve, reject) => {\n        req.session.destroy((err) => {\n          if (err) {\n            console.error('❌ Session destroy error:', err);\n            reject(err);\n          } else {\n            console.log('✅ Session destroyed successfully');\n            resolve();\n          }\n        });\n      });\n\n      logger.info(`Session logged out: ${nickname}`, {\n        sessionId: req.sessionId,\n        ip: req.ip\n      });\n\n      res.json({\n        success: true,\n        message: 'Session logged out successfully',\n        type: 'session_logout',\n        sessionDestroyed: true\n      });\n    } else {\n      console.log('⚠️ Session logout: No authenticated session to destroy');\n      res.json({\n        success: true,\n        message: 'No active session to log out',\n        type: 'session_logout',\n        sessionDestroyed: false\n      });\n    }\n\n  } catch (error) {\n    logger.error('Session logout error:', error);\n    res.status(500).json({\n      error: 'Server error during session logout',\n      code: 'SESSION_LOGOUT_ERROR'\n    });\n  }\n});\n\n// Hybrid logout endpoint - handles both JWT and session logout\napp.post('/api/logout_complete', apiRateLimiter, async (req, res) => {\n  try {\n    console.log('🚪 Complete logout request (JWT + Session), sessionId:', req.sessionId);\n\n    const hasJwtAuth = !!req.user;\n    const hasSessionAuth = req.sessionUser || (req.session && req.session.authenticated);\n    const sessionUserId = req.session && req.session.userId;\n\n    let jwtLogoutResult = null;\n    let sessionLogoutResult = null;\n\n    // Handle JWT logout if JWT is provided\n    if (hasJwtAuth) {\n      try {\n        const sockets = onlineUsers;\n        let disconnectedCount = 0;\n        for (const [socketId, socketData] of sockets.entries()) {\n          if (socketData.userId === req.user._id.toString()) {\n            const socket = io.sockets.sockets.get(socketId);\n            if (socket) {\n              socket.disconnect();\n              disconnectedCount++;\n            }\n          }\n        }\n\n        await User.findByIdAndUpdate(req.user._id, {\n          status: 'offline',\n          lastActive: new Date()\n        });\n\n        jwtLogoutResult = {\n          success: true,\n          disconnectedCount\n        };\n      } catch (jwtError) {\n        jwtLogoutResult = {\n          success: false,\n          error: jwtError.message\n        };\n      }\n    }\n\n    // Handle session logout if session exists\n    if (hasSessionAuth) {\n      try {\n        if (sessionUserId) {\n          const sessionUser = await User.findById(sessionUserId);\n          console.log('✅ Session logout: Destroying session for user:', sessionUser ? sessionUser.nickname : 'unknown');\n\n          // Disconnect Socket.IO connections for this session user\n          const sockets = onlineUsers;\n          let disconnectedCount = 0;\n          for (const [socketId, socketData] of sockets.entries()) {\n            if (socketData.userId === sessionUserId) {\n              const socket = io.sockets.sockets.get(socketId);\n              if (socket) {\n                socket.disconnect();\n                disconnectedCount++;\n              }\n            }\n          }\n          console.log(`🗑️ Session logout: Disconnected ${disconnectedCount} socket connections`);\n        }\n\n        // Destroy the session\n        await new Promise((resolve, reject) => {\n          req.session.destroy((err) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve();\n            }\n          });\n        });\n\n        sessionLogoutResult = {\n          success: true,\n          sessionDestroyed: true\n        };\n      } catch (sessionError) {\n        sessionLogoutResult = {\n          success: false,\n          error: sessionError.message\n        };\n      }\n    }\n\n    const overallSuccess = (!jwtLogoutResult || jwtLogoutResult.success) &&\n                          (!sessionLogoutResult || sessionLogoutResult.success);\n\n    res.json({\n      success: overallSuccess,\n      message: 'Complete logout processed',\n      type: 'complete_logout',\n      jwt: jwtLogoutResult,\n      session: sessionLogoutResult\n    });\n\n  } catch (error) {\n    logger.error('Complete logout error:', error);\n    res.status(500).json({\n      error: 'Server error during complete logout',\n      code: 'COMPLETE_LOGOUT_ERROR'\n    });\n  }\n});\n\n//  404 handler (must be before global error handler)\napp.use((req, res) => {\n  console.warn('❌ Final 404 handler executed - route not found!', { method: req.method, url: req.url });\n  logger.warn(`404 - ${req.method} ${req.url}`, {\n    ip: req.ip,\n    userAgent: req.get('User-Agent')\n  });\n\n  res.status(404).json({\n    error: 'Endpoint not found',\n    path: req.url,\n    method: req.method,\n    code: 'NOT_FOUND'\n  });\n});\n\n// Global error handling middleware (must be last)\napp.use(errorHandler);\n\n\n\n\n\n\n\n\n\n// Global users map for socket management {socketId: {userId, nickname, room}}\nlet onlineUsers = new Map();\n\n// User connection counter {userId: connectionCount}\nlet userConnections = new Map();\n\n// Voice channels management\nconst voiceChannels = new Map(); // channelId -> { socketId: { peerConnection, stream } }\n\n// Improved Socket.IO session middleware with proper res object handling\nio.use((socket, next) => {\n  // Create a more complete mock res object if missing\n  if (!socket.request.res) {\n    socket.request.res = {\n      setHeader: () => {},\n      getHeader: () => {},\n      writeHead: () => {},\n      end: () => {},\n      headersSent: false,\n      statusCode: 200\n    };\n  }\n\n  // Apply session middleware with error handling\n  sessionMiddleware(socket.request, socket.request.res, (err) => {\n    if (err) {\n      console.error('Session middleware error for Socket.IO:', err);\n      return next(err);\n    }\n    next();\n  });\n});\n\n// Socket.IO authentication middleware\nio.use(async (socket, next) => {\n  const { csrfToken } = socket.handshake.auth;\n  const session = socket.request.session;\n\n  console.log('🔑 Socket authentication attempt with session and CSRF fingerprint check');\n  console.log('🔍 Socket session data:', {\n    sessionId: socket.request.sessionId,\n    sessionExists: !!session,\n    authenticated: session?.authenticated,\n    userId: session?.userId,\n    nickname: session?.nickname,\n    role: session?.role,\n    csrfTokenProvided: !!csrfToken,\n    sessionCsrfToken: !!session?.csrfToken,\n    match: csrfToken && session?.csrfToken && csrfToken === session.csrfToken\n  });\n\n  console.log('🔓 Fingerprint verification:', {\n    sid: socket.request.sessionId,\n    providedCsrfToken: csrfToken?.substring(0, 8) + '...',\n    sessionCsrfToken: session?.csrfToken?.substring(0, 8) + '...',\n    userAgent: socket.request.session?.userAgent?.substring(0, 20) + '...',\n    loginTime: session?.loginTime,\n    registrationTime: session?.registrationTime\n  });\n\n  // Validate session exists and has authentication\n  if (!session || !session.authenticated || !session.userId) {\n    console.log('❌ Socket authentication failed: No authenticated session found');\n    console.log('📋 Session details:', {\n      sessionId: socket.request.sessionId,\n      session: !!session,\n      authenticated: session?.authenticated,\n      userId: session?.userId\n    });\n    return next(new Error('Session authentication required'));\n  }\n\n  // Validate CSRF token for additional security (must match session's unique CSRF token)\n  if (!csrfToken || !session.csrfToken || csrfToken !== session.csrfToken) {\n    console.log('❌ Socket authentication failed: Invalid CSRF token fingerprint');\n    console.log('🔒 Fingerprint mismatch details:', {\n      provided: csrfToken?.substring(0, 8) + '...',\n      expected: session.csrfToken?.substring(0, 8) + '...',\n      match: csrfToken === session.csrfToken\n    });\n    return next(new Error('CSRF validation failed'));\n  }\n\n  console.log('✅ Socket fingerprint verification successful');\n\n  try {\n    // Verify user exists in database\n    const user = await User.findById(session.userId);\n    if (!user) {\n      console.log('❌ Socket authentication failed: User not found in DB');\n      return next(new Error('User not found in session'));\n    }\n\n    // Handle user status update based on connection count\n    const userId = session.userId;\n    const connectionCount = userConnections.get(userId) || 0;\n    const newConnectionCount = connectionCount + 1;\n    userConnections.set(userId, newConnectionCount);\n\n    // Check if user is banned\n    if (user.isBanned()) {\n      console.log('❌ Socket authentication failed: User is banned', {\n        userId: userId,\n        nickname: user.nickname,\n        banReason: user.banReason,\n        banExpires: user.banExpires\n      });\n      socket.emit('banned', {\n        reason: user.banReason || 'You have been banned from the server',\n        expires: user.banExpires\n      });\n      return next(new Error('User is banned'));\n    }\n\n    // Check if user is muted and enforce mute in chat\n    const isMuted = user.isMuted();\n    console.log('🔇 User mute status checked:', { nickname: user.nickname, isMuted, muteExpires: user.muteExpires });\n\n    // Update user status with connection count tracking\n    const updateResult = await User.findOneAndUpdate(\n      { _id: userId },\n      {\n        $set: {\n          status: newConnectionCount > 0 ? 'online' : 'offline',\n          lastActive: new Date()\n        }\n      },\n      {\n        new: true,\n        runValidators: true\n      }\n    );\n\n    if (updateResult) {\n      console.log(`🔄 Socket auth: User ${user.nickname} status set to online (connections: ${newConnectionCount})`);\n      logger.info(`User status updated to online via socket auth`, {\n        userId: userId,\n        nickname: user.nickname,\n        connections: newConnectionCount,\n        socketId: socket.id,\n        timestamp: new Date()\n      });\n    }\n\n    // Override local user object with updated data\n    user.status = updateResult ? updateResult.status : 'online';\n    user.lastActive = updateResult ? updateResult.lastActive : new Date();\n\n    // Set socket properties for authenticated user\n    socket.userId = session.userId;\n    socket.nickname = session.nickname;\n    socket.role = session.role || 'member';\n    console.log(`🎉 Socket authenticated via session: ${socket.nickname} (userId: ${socket.userId})`);\n    console.log('Socket authentication successful');\n    return next();\n\n  } catch (error) {\n    console.error('❌ Socket authentication error:', error.message);\n    logger.error(`Socket auth failed: ${error.message}`, {\n      socketId: socket.id,\n      sessionId: session?.id,\n      ip: socket.handshake.address\n    });\n    return next(new Error('Socket authentication failed'));\n  }\n});\n\n/**\n * Cleanup inactive connections based on heartbeat\n */\nfunction cleanupInactiveConnections() {\n  const now = Date.now();\n  const timeout = 60000; // 60 seconds timeout\n\n  for (const [socketId, user] of onlineUsers.entries()) {\n    if (now - user.lastHeartbeat > timeout) {\n      console.log(`🧹 Cleansing dead connection for user ${user.nickname}`);\n\n      // Force disconnect socket\n      const socket = io.sockets.sockets.get(socketId);\n      if (socket) {\n        socket.disconnect(true);\n      }\n\n      // Update user connections count\n      const connectionsLeft = (userConnections.get(user.userId) || 0) - 1;\n      userConnections.set(user.userId, Math.max(0, connectionsLeft));\n\n      // Set status to offline if last connection\n      if (connectionsLeft <= 0) {\n        User.findByIdAndUpdate(user.userId, {\n          status: 'offline',\n          lastActive: new Date()\n        }).catch(err => logger.error('Error updating status on cleanup:', err));\n\n        console.log(`🔄 User ${user.nickname} status set to offline (dead connection)`);\n        logger.info(`User status set to offline due to dead connection`, {\n          userId: user.userId,\n          nickname: user.nickname,\n          socketId: socketId\n        });\n      }\n\n      onlineUsers.delete(socketId);\n    }\n  }\n}\n\n// Run cleanup every 30 seconds - DISABLED for test environment\nif (process.env.NODE_ENV !== 'test') {\n  setInterval(cleanupInactiveConnections, 30000);\n}\n\nio.on('connection', async (socket) => {\n  console.log('🚀 Socket connection established');\n  console.log(`👤 User ${socket.nickname} connected`);\n\n  // Track online user\n  onlineUsers.set(socket.id, {\n    userId: socket.userId,\n    nickname: socket.nickname,\n    role: socket.role,\n    room: null,\n    lastHeartbeat: Date.now()\n  });\n\n  // Log current active connections count\n  console.log(`📊 Active socket connections: ${onlineUsers.size} - auth success for ${socket.nickname}`);\n\n  // Enhanced heartbeat mechanism with reconnection logic\n  socket.on('heartbeat', () => {\n    const user = onlineUsers.get(socket.id);\n    if (user) {\n      const now = Date.now();\n      user.lastHeartbeat = now;\n      console.log(`💓 Heartbeat received from user ${socket.nickname} at ${new Date(now).toISOString()}`);\n    } else {\n      logger.warn(`Heartbeat received from unknown socket: ${socket.id}`);\n    }\n  });\n\n  // Update heartbeat on user activity\n  const updateHeartbeat = () => {\n    const user = onlineUsers.get(socket.id);\n    if (user) {\n      user.lastHeartbeat = Date.now();\n    }\n  };\n\n  // Send heartbeat to client periodically\n  const heartbeatInterval = setInterval(() => {\n    if (socket.connected) {\n      socket.emit('heartbeat_request');\n    }\n  }, 15000); // Send heartbeat every 15 seconds\n\n  // Clear interval on disconnect\n  socket.on('disconnect', () => {\n    clearInterval(heartbeatInterval);\n    // ... rest of disconnect logic\n  });\n\n  // Utility function for retrying database operations\n  const retryDatabaseOperation = async (operation, retries = 3) => {\n    for (let i = 0; i <= retries; i++) {\n      try {\n        return await operation();\n      } catch (error) {\n        if (i === retries) throw error;\n        logger.warn(`Database operation failed, retry ${i + 1}/${retries}:`, error.message);\n        await new Promise(resolve => setTimeout(resolve, 500 * (i + 1))); // Exponential backoff\n      }\n    }\n  };\n\n  socket.on('join_room', async (data) => {\n    updateHeartbeat();\n    const { room } = data;\n    if (!room) {\n      logger.warn('Join room failed: No room specified', {\n        userId: socket.userId,\n        nickname: socket.nickname\n      });\n      socket.emit('error', {\n        message: 'Room name is required',\n        code: 'MISSING_ROOM',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    if (typeof room !== 'string' || room.trim().length === 0) {\n      logger.warn('Join room failed: Invalid room format', {\n        userId: socket.userId,\n        nickname: socket.nickname,\n        room\n      });\n      socket.emit('error', {\n        message: 'Invalid room name format',\n        code: 'INVALID_ROOM_FORMAT',\n        timestamp: new Date().toISOString()\n      });\n      return;\n    }\n\n    try {\n      await retryDatabaseOperation(async () => {\n        // Verify channel exists\n        const channel = await Channel.findOne({ id: room });\n        if (!channel) {\n          logger.warn('Join room failed: Channel not found', {\n            userId: socket.userId,\n            nickname: socket.nickname,\n            room\n          });\n          socket.emit('error', {\n            message: `Channel '${room}' not found`,\n            code: 'CHANNEL_NOT_FOUND',\n            room,\n            timestamp: new Date().toISOString()\n          });\n          throw new Error('Channel not found');\n        }\n\n        // Leave previous room\n        if (socket.room) {\n          socket.leave(socket.room);\n          onlineUsers.set(socket.id, { ...onlineUsers.get(socket.id), room: null });\n\n          // Update online users in previous room\n          const previousRoomUsers = Array.from(onlineUsers.values())\n            .filter(u => u.room === socket.room)\n            .map(u => ({ nickname: u.nickname, role: u.role }));\n          io.to(socket.room).emit('online_users', previousRoomUsers);\n        }\n\n        socket.room = room;\n        socket.join(socket.room);\n\n        // Update user tracking\n        onlineUsers.set(socket.id, {\n          ...onlineUsers.get(socket.id),\n          room: socket.room\n        });\n\n        logger.info(`User ${socket.nickname} joined room ${socket.room}`);\n\n        // Send system message about joining\n        const joinMessage = new Message({\n          author: 'System',\n          channel: socket.room,\n          text: `${socket.nickname} joined the channel.`,\n          type: 'system'\n        });\n        await joinMessage.save();\n\n        io.to(socket.room).emit('message', {\n          author: joinMessage.author,\n          channel: joinMessage.channel,\n          text: joinMessage.text,\n          type: joinMessage.type,\n          timestamp: joinMessage.timestamp\n        });\n\n        // Send online users in current room\n        const roomUsers = Array.from(onlineUsers.values())\n          .filter(u => u.room === socket.room)\n          .map(u => ({ nickname: u.nickname, role: u.role }));\n        io.to(socket.room).emit('online_users', roomUsers);\n\n        // Send message history\n        const history = await Message.find({\n          channel: socket.room,\n          $or: [\n            { type: 'public' },\n            { type: 'system' },\n            { author: socket.nickname },\n            { target: socket.nickname }\n          ]\n        })\n          .sort({ timestamp: -1 })\n          .limit(100)\n          .sort({ timestamp: 1 }); // Resort for chronological order\n\n        socket.emit('history', history.map(msg => ({\n          author: msg.author,\n          room: msg.channel,\n          text: msg.text,\n          type: msg.type,\n          target: msg.target,\n          timestamp: msg.timestamp\n        })));\n      });\n\n    } catch (error) {\n      logger.error('Error in join_room after retries:', error);\n      socket.emit('error', {\n        message: 'Failed to join room after multiple attempts',\n        code: 'JOIN_ROOM_FAILED',\n        timestamp: new Date().toISOString()\n      });\n    }\n  });\n\n  // Load history (fallback, if needed)\n  socket.on('get_history', async () => {\n    if (!socket.room) {\n      socket.emit('history', []);\n      return;\n    }\n\n    try {\n      const history = await Message.find({\n        channel: socket.room,\n        $or: [\n          { type: 'public' },\n          { type: 'system' },\n          { author: socket.nickname },\n          { target: socket.nickname }\n        ]\n      })\n        .sort({ timestamp: -1 })\n        .limit(100)\n        .sort({ timestamp: 1 }); // Resort for chronological order\n\n      socket.emit('history', history.map(msg => ({\n        author: msg.author,\n        room: msg.channel, // Using channel instead of room for consistency\n        text: msg.text,\n        type: msg.type,\n        target: msg.target,\n        timestamp: msg.timestamp\n      })));\n    } catch (error) {\n      logger.error('Error getting history:', error);\n      socket.emit('error', { message: 'Failed to load message history' });\n    }\n  });\n\n  // Public message\n  socket.on('message', async (data) => {\n    updateHeartbeat();\n    if (!socket.room || !data.text?.trim()) return;\n\n    // Check if user is muted\n    const currentUser = await User.findById(socket.userId);\n    if (currentUser && currentUser.isMuted()) {\n      socket.emit('error', {\n        message: 'You are muted and cannot send messages',\n        code: 'USER_MUTED',\n        muteExpires: currentUser.muteExpires\n      });\n      return;\n    }\n\n    try {\n      const message = new Message({\n        author: socket.nickname,\n        channel: socket.room,\n        text: data.text.trim(),\n        type: 'public'\n      });\n\n      await message.save();\n\n      const messageData = {\n        author: message.author,\n        room: message.channel, // Keeping 'room' for frontend compatibility\n        text: message.text,\n        timestamp: message.timestamp,\n        status: 'delivered',\n        type: message.type\n      };\n\n      io.to(socket.room).emit('message', messageData);\n      logger.debug(`Message saved from ${socket.nickname} in ${socket.room}`);\n    } catch (error) {\n      logger.error('Error saving message:', error);\n      socket.emit('error', { message: 'Failed to send message' });\n    }\n  });\n\n  // Private message\n  socket.on('private_message', async (data) => {\n    updateHeartbeat();\n    if (!socket.room || !data.to || !data.text?.trim()) return;\n\n    const trimmedText = data.text.trim();\n    const targetNickname = data.to.trim();\n\n    try {\n      logger.debug(`Private message attempt from ${socket.nickname} to ${targetNickname}`, {\n        senderRoom: socket.room,\n        senderSocketId: socket.id,\n        userId: socket.userId\n      });\n\n      // Validate target nickname format\n      if (targetNickname.length === 0 || targetNickname.length > 50) {\n        socket.emit('error', {\n          message: 'Invalid target user nickname',\n          code: 'INVALID_TARGET_NICKNAME'\n        });\n        return;\n      }\n\n      // Prevent self-messaging\n      if (targetNickname === socket.nickname) {\n        socket.emit('error', {\n          message: 'Cannot send private message to yourself',\n          code: 'SELF_MESSAGE_NOT_ALLOWED'\n        });\n        return;\n      }\n\n      // Find target user in same room with detailed logging\n      const targetUser = Array.from(onlineUsers.values()).find(\n        u => u.nickname === targetNickname && u.room === socket.room\n      );\n\n      logger.debug(`Private message target search result for ${targetNickname}`, {\n        targetFound: !!targetUser,\n        targetRoom: targetUser?.room,\n        senderRoom: socket.room,\n        onlineUsersInRoom: Array.from(onlineUsers.values())\n          .filter(u => u.room === socket.room)\n          .map(u => ({ nickname: u.nickname, room: u.room }))\n      });\n\n      if (!targetUser) {\n        // Enhanced error message with more context\n        const onlineUsersInSenderRoom = Array.from(onlineUsers.values())\n          .filter(u => u.room === socket.room)\n          .map(u => u.nickname);\n\n        socket.emit('error', {\n          message: `User '${targetNickname}' is not available in this channel. Available users: ${onlineUsersInSenderRoom.join(', ') || 'none'}`,\n          code: 'TARGET_USER_NOT_IN_ROOM',\n          target: targetNickname,\n          availableUsers: onlineUsersInSenderRoom,\n          senderRoom: socket.room\n        });\n        return;\n      }\n\n      // Create message object\n      const message = new Message({\n        author: socket.nickname,\n        channel: socket.room,\n        text: trimmedText,\n        type: 'private',\n        target: targetNickname\n      });\n      await message.save();\n\n      const messageData = {\n        author: message.author,\n        room: message.channel,\n        text: message.text,\n        timestamp: message.timestamp,\n        type: message.type,\n        target: message.target,\n        status: 'delivered'\n      };\n\n      // Send to target user with error handling\n      const targetSocketId = Array.from(onlineUsers.keys()).find(\n        id => onlineUsers.get(id).nickname === targetNickname\n      );\n\n      if (targetSocketId) {\n        io.to(targetSocketId).emit('private_message', messageData);\n        logger.debug(`Private message sent to target ${targetNickname}`, {\n          targetSocketId: targetSocketId,\n          sender: socket.nickname,\n          room: socket.room,\n          messageId: message._id\n        });\n      } else {\n        logger.warn(`Target user ${targetNickname} found in onlineUsers but socket ID not found`, {\n          targetNickname,\n          room: socket.room,\n          onlineUsersCount: onlineUsers.size,\n          messageId: message._id\n        });\n        // Message still saved to database for later delivery if user reconnects\n      }\n\n      // Send confirmation to sender (without target for privacy)\n      socket.emit('private_message', {\n        author: message.author,\n        room: message.room,\n        text: message.text,\n        timestamp: message.timestamp,\n        type: message.type,\n        target: null, // Hide target from sender's confirmation\n        status: 'sent'\n      });\n\n      logger.info(`Private message sent successfully`, {\n        sender: socket.nickname,\n        target: targetNickname,\n        room: socket.room,\n        messageId: message._id,\n        messageLength: trimmedText.length\n      });\n\n    } catch (error) {\n      logger.error('Error sending private message:', {\n        error: error.message,\n        sender: socket.nickname,\n        target: data.to,\n        room: socket.room,\n        userId: socket.userId,\n        stack: error.stack\n      });\n      socket.emit('error', {\n        message: 'Failed to send private message',\n        code: 'PRIVATE_MESSAGE_FAILED'\n      });\n    }\n  });\n\n  // Speaking\n  socket.on('speaking', (data) => {\n    updateHeartbeat();\n    socket.to(socket.room).emit('speaking', { nickname: socket.nickname, speaking: data.speaking });\n  });\n\n  // Voice channel events\n  socket.on('join_voice_channel', async (data) => {\n    updateHeartbeat();\n    const { channelId } = data;\n    if (!channelId) return;\n\n    try {\n      // Verify channel exists and is voice\n      const channel = await Channel.findOne({ id: channelId, type: 'voice' });\n      if (!channel) {\n        socket.emit('voice_error', { message: 'Voice channel not found' });\n        return;\n      }\n\n      // Initialize voice channel if not exists\n      if (!voiceChannels.has(channelId)) {\n        voiceChannels.set(channelId, new Map());\n      }\n\n      const channelPeers = voiceChannels.get(channelId);\n\n      // Notify others in the channel\n      socket.to(channelId).emit('user_joined_voice', { nickname: socket.nickname, socketId: socket.id });\n\n      // Add socket to voice channel room\n      socket.join(channelId);\n      channelPeers.set(socket.id, { peerConnection: null, stream: null });\n\n      // Update user's voice channel status\n      socket.voiceChannel = channelId;\n\n      logger.info(`User ${socket.nickname} joined voice channel ${channelId}`);\n      socket.emit('voice_joined', { channelId });\n\n    } catch (error) {\n      logger.error('Error joining voice channel:', error);\n      socket.emit('voice_error', { message: 'Failed to join voice channel' });\n    }\n  });\n\n  socket.on('leave_voice_channel', () => {\n    updateHeartbeat();\n    if (!socket.voiceChannel) return;\n\n    const channelId = socket.voiceChannel;\n    const channelPeers = voiceChannels.get(channelId);\n\n    if (channelPeers) {\n      channelPeers.delete(socket.id);\n      if (channelPeers.size === 0) {\n        voiceChannels.delete(channelId);\n      }\n    }\n\n    // Notify others\n    socket.to(channelId).emit('user_left_voice', { nickname: socket.nickname, socketId: socket.id });\n\n    socket.leave(channelId);\n    socket.voiceChannel = null;\n\n    logger.info(`User ${socket.nickname} left voice channel ${channelId}`);\n    socket.emit('voice_left');\n  });\n\n  socket.on('voice_offer', (data) => {\n    const { offer, targetSocketId } = data;\n    socket.to(targetSocketId).emit('voice_offer', {\n      offer,\n      from: socket.id,\n      fromNickname: socket.nickname\n    });\n  });\n\n  socket.on('voice_answer', (data) => {\n    const { answer, targetSocketId } = data;\n    socket.to(targetSocketId).emit('voice_answer', {\n      answer,\n      from: socket.id,\n      fromNickname: socket.nickname\n    });\n  });\n\n  socket.on('ice_candidate', (data) => {\n    const { candidate, targetSocketId } = data;\n    socket.to(targetSocketId).emit('ice_candidate', {\n      candidate,\n      from: socket.id,\n      fromNickname: socket.nickname\n    });\n  });\n\n  // Disconnect\n  socket.on('disconnect', async () => {\n    logger.info(`User ${socket.nickname} disconnected`);\n\n    try {\n      const userId = socket.userId;\n\n      // Decrease connection count for this user\n      if (userId) {\n        const currentCount = userConnections.get(userId) || 0;\n        const newCount = Math.max(0, currentCount - 1);\n        userConnections.set(userId, newCount);\n\n        logger.info(`User ${socket.nickname} disconnected (remaining connections: ${newCount})`, {\n          userId: userId,\n          socketId: socket.id,\n          connectionsLeft: newCount\n        });\n      }\n\n      // Leave voice channel if in one\n      if (socket.voiceChannel) {\n        const channelId = socket.voiceChannel;\n        const channelPeers = voiceChannels.get(channelId);\n\n        if (channelPeers) {\n          channelPeers.delete(socket.id);\n          if (channelPeers.size === 0) {\n            voiceChannels.delete(channelId);\n          }\n        }\n\n        // Notify others\n        socket.to(channelId).emit('user_left_voice', { nickname: socket.nickname, socketId: socket.id });\n      }\n\n      if (socket.room) {\n        socket.leave(socket.room);\n\n        // Create leave message\n        const leaveMessage = new Message({\n          author: 'System',\n          channel: socket.room,\n          text: `${socket.nickname} left the channel.`,\n          type: 'system'\n        });\n        await leaveMessage.save();\n\n        io.to(socket.room).emit('message', {\n          author: leaveMessage.author,\n          room: leaveMessage.channel,\n          text: leaveMessage.text,\n          type: leaveMessage.type,\n          timestamp: leaveMessage.timestamp\n        });\n\n        // Update online users list\n        const roomUsers = Array.from(onlineUsers.values())\n          .filter(u => u.room === socket.room && u.userId !== socket.userId)\n          .map(u => ({ nickname: u.nickname, role: u.role }));\n        io.to(socket.room).emit('online_users', roomUsers);\n      }\n\n      // Remove from tracking\n      onlineUsers.delete(socket.id);\n\n      // Log current connections after disconnect\n      logger.info(`After disconnect, active socket connections: ${onlineUsers.size}`);\n\n      // Update user status in database if this was the last connection\n      if (userId) {\n        const remainingConnections = userConnections.get(userId) || 0;\n        if (remainingConnections === 0) {\n          await User.findByIdAndUpdate(userId, {\n            status: 'offline',\n            lastActive: new Date()\n          });\n          console.log(`🔄 User ${socket.nickname} status set to offline (last connection)`);\n          logger.info(`User status set to offline (last connection)`, {\n            userId: userId,\n            nickname: socket.nickname\n          });\n        } else {\n          // Update lastActive but keep status online\n          await User.findByIdAndUpdate(userId, {\n            lastActive: new Date()\n          });\n          console.log(`✅ User ${socket.nickname} still online (${remainingConnections} connections left)`);\n          logger.info(`User remains online`, {\n            userId: userId,\n            nickname: socket.nickname,\n            connectionsLeft: remainingConnections\n          });\n        }\n      }\n\n    } catch (error) {\n      logger.error('Error in disconnect handler:', error);\n    }\n });\n});\n\n// Initialize database and start server (duplicate removed)\nconst initializeServer = async () => {\n  try {\n    // Connect to MongoDB\n    await connectDB();\n\n    // Create default channels if they don't exist\n    const defaultChannels = [\n      { id: 'general', name: 'General', type: 'text', createdBy: 'system' },\n      { id: 'voice-chat', name: 'Voice Chat', type: 'voice', createdBy: 'system' }\n    ];\n\n    for (const channelData of defaultChannels) {\n      await Channel.findOneAndUpdate(\n        { id: channelData.id },\n        channelData,\n        { upsert: true, new: true }\n      );\n    }\n\n    logger.info('Default channels initialized');\n\n    // Start server\n    const PORT = process.env.PORT || 3001;\n    server.listen(PORT, '0.0.0.0', () => {\n      logger.info(`Server running on port ${PORT}`);\n      console.log(`Server running on port ${PORT}`);\n    });\n\n  } catch (error) {\n    logger.error('Failed to initialize server:', error);\n    process.exit(1);\n  }\n};\n\n// Graceful shutdown\nprocess.on('SIGINT', async () => {\n  logger.info('Received SIGINT, shutting down gracefully...');\n  await closeDB();\n  io.close(() => {\n    logger.info('Server shut down');\n    process.exit(0);\n  });\n});\n\nprocess.on('SIGTERM', async () => {\n  logger.info('Received SIGTERM, shutting down gracefully...');\n  await closeDB();\n  io.close(() => {\n    logger.info('Server shut down');\n    process.exit(0);\n  });\n});\n\n// Start the server\ninitializeServer().catch(err => {\n  logger.error('Unhandled error during server startup:', err);\n  process.exit(1);\n});\n"],"mappings":"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","ignoreList":[]}