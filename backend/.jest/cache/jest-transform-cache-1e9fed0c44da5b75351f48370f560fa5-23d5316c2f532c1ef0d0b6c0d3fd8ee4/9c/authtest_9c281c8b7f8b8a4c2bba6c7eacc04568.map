{"version":3,"names":["_getJestObj","mock","findById","jest","fn","require","jwt","authenticateToken","User","describe","mockReq","mockRes","mockNext","beforeEach","headers","status","mockReturnThis","json","afterEach","clearAllMocks","it","userId","token","sign","id","process","env","JWT_SECRET","mockUser","_id","nickname","role","authorization","mockResolvedValue","expect","toHaveBeenCalled","user","toEqual","toHaveBeenCalledWith","not","error","code","invalidToken","expiredToken","expiresIn","dbError","Error","mockRejectedValue","originalConsole","global","console","warn","toBe"],"sources":["auth.test.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst { authenticateToken } = require('../../server');\n\n// Mock models\njest.mock('../../models/User', () => ({\n  findById: jest.fn()\n}));\n\nconst User = require('../../models/User');\n\ndescribe('Authentication Middleware', () => {\n  let mockReq;\n  let mockRes;\n  let mockNext;\n\n  beforeEach(() => {\n    mockReq = {\n      headers: {}\n    };\n    mockRes = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn()\n    };\n    mockNext = jest.fn();\n  });\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('authenticateToken', () => {\n    it('should authenticate user with valid token', async () => {\n      const userId = '507f1f77bcf86cd799439011';\n      const token = jwt.sign({ id: userId }, process.env.JWT_SECRET || 'test-secret');\n      const mockUser = {\n        _id: userId,\n        nickname: 'testuser',\n        role: 'member'\n      };\n\n      mockReq.headers.authorization = `Bearer ${token}`;\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(mockReq.user).toEqual(mockUser);\n      expect(User.findById).toHaveBeenCalledWith(userId);\n    });\n\n    it('should return 401 when no token is provided', async () => {\n      delete mockReq.headers.authorization;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    });\n\n    it('should return 401 with malformed authorization header', async () => {\n      mockReq.headers.authorization = 'InvalidTokenFormat';\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    });\n\n    it('should handle JWT verification errors', async () => {\n      const invalidToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.invalid';\n      mockReq.headers.authorization = `Bearer ${invalidToken}`;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token verification failed',\n        code: 'TOKEN_VERIFICATION_FAILED'\n      });\n    });\n\n    it('should handle expired tokens', async () => {\n      const expiredToken = jwt.sign({ id: 'testId' }, 'test-secret', { expiresIn: '-1h' });\n      mockReq.headers.authorization = `Bearer ${expiredToken}`;\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token has expired',\n        code: 'TOKEN_EXPIRED'\n      });\n    });\n\n    it('should handle malformed JWT tokens', async () => {\n      mockReq.headers.authorization = 'Bearer not-a-jwt-token';\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Invalid token format',\n        code: 'INVALID_TOKEN_FORMAT'\n      });\n    });\n\n    it('should return 401 when user is not found', async () => {\n      const token = jwt.sign({ id: 'nonexistent' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n\n      User.findById.mockResolvedValue(null);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'User not found',\n        code: 'USER_NOT_FOUND'\n      });\n    });\n\n    it('should handle database errors during user lookup', async () => {\n      const token = jwt.sign({ id: 'testid' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n\n      const dbError = new Error('Database connection failed');\n      User.findById.mockRejectedValue(dbError);\n\n      // Override console methods to avoid spam\n      const originalConsole = global.console;\n      global.console = {\n        warn: jest.fn(),\n        error: jest.fn()\n      };\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      // Restore console\n      global.console = originalConsole;\n\n      expect(mockNext).not.toHaveBeenCalled();\n      expect(mockRes.status).toHaveBeenCalledWith(401);\n      expect(mockRes.json).toHaveBeenCalledWith({\n        error: 'Token verification failed',\n        code: 'TOKEN_VERIFICATION_FAILED'\n      });\n    });\n  });\n\n  describe('Token extraction', () => {\n    it('should extract token from Bearer authorization header', async () => {\n      const token = jwt.sign({ id: 'testId' }, process.env.JWT_SECRET || 'test-secret');\n      const authorization = `Bearer ${token}`;\n      const mockUser = { _id: 'testId', nickname: 'testuser' };\n\n      mockReq.headers.authorization = authorization;\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(User.findById).toHaveBeenCalledWith('testId');\n    });\n\n    it('should handle extra whitespace in authorization header', async () => {\n      const token = jwt.sign({ id: 'whitespacetest' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `  Bearer    ${token}   `;\n      const mockUser = { _id: 'whitespacetest', nickname: 'testuser' };\n\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockNext).toHaveBeenCalled();\n      expect(User.findById).toHaveBeenCalledWith('whitespacetest');\n    });\n  });\n\n  describe('Request properties', () => {\n    it('should attach user to request object', async () => {\n      const token = jwt.sign({ id: 'attachTest' }, process.env.JWT_SECRET || 'test-secret');\n      mockReq.headers.authorization = `Bearer ${token}`;\n      const mockUser = { _id: 'attachTest', nickname: 'attachUser', role: 'admin' };\n\n      User.findById.mockResolvedValue(mockUser);\n\n      await authenticateToken(mockReq, mockRes, mockNext);\n\n      expect(mockReq.user).toEqual(mockUser);\n      expect(mockReq.user._id).toBe('attachTest');\n      expect(mockReq.user.nickname).toBe('attachUser');\n      expect(mockReq.user.role).toBe('admin');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}