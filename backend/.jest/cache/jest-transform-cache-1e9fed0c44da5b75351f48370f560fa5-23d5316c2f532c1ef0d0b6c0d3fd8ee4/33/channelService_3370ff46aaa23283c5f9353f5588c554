affed36ed577e85e550dcc60a490ee1d
/* istanbul ignore next */
function cov_2p4831m7el() {
  var path = "/home/raerlim/Chat-JS/backend/src/services/channelService.js";
  var hash = "0d8d307895b66441ac230b132856b3920cb845f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/raerlim/Chat-JS/backend/src/services/channelService.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 44
        }
      },
      "1": {
        start: {
          line: 2,
          column: 19
        },
        end: {
          line: 2,
          column: 48
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 25
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "4": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 15,
          column: 22
        }
      },
      "6": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "7": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 18
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "9": {
        start: {
          line: 24,
          column: 22
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 21
        }
      },
      "11": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "12": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 18
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "14": {
        start: {
          line: 34,
          column: 53
        },
        end: {
          line: 34,
          column: 64
        }
      },
      "15": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 42,
          column: 8
        }
      },
      "16": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 27
        }
      },
      "17": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "19": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "20": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 55
        }
      },
      "21": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 57,
          column: 58
        }
      },
      "22": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "23": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "24": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "25": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 72,
          column: 7
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "27": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "28": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 21
        }
      },
      "29": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 77,
          column: 58
        }
      },
      "30": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 78,
          column: 18
        }
      },
      "31": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "32": {
        start: {
          line: 84,
          column: 21
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "33": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "34": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 45
        }
      },
      "35": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 57
        }
      },
      "36": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 20
        }
      },
      "37": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 58
        }
      },
      "38": {
        start: {
          line: 93,
          column: 6
        },
        end: {
          line: 93,
          column: 18
        }
      },
      "39": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "40": {
        start: {
          line: 99,
          column: 22
        },
        end: {
          line: 99,
          column: 58
        }
      },
      "41": {
        start: {
          line: 100,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 45
        }
      },
      "43": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 21
        }
      },
      "44": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 68
        }
      },
      "45": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 18
        }
      },
      "46": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "47": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "48": {
        start: {
          line: 117,
          column: 6
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "49": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      },
      "50": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 55
        }
      },
      "51": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "52": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "53": {
        start: {
          line: 133,
          column: 0
        },
        end: {
          line: 133,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 7,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        loc: {
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 80,
            column: 3
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 82,
            column: 3
          }
        },
        loc: {
          start: {
            line: 82,
            column: 33
          },
          end: {
            line: 95,
            column: 3
          }
        },
        line: 82
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 97,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        loc: {
          start: {
            line: 97,
            column: 41
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 97
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 110,
            column: 2
          },
          end: {
            line: 110,
            column: 3
          }
        },
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 110
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 72,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 72,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0d8d307895b66441ac230b132856b3920cb845f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p4831m7el = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p4831m7el();
const Channel =
/* istanbul ignore next */
(cov_2p4831m7el().s[0]++, require('../models/Channel'));
const {
  logger
} =
/* istanbul ignore next */
(cov_2p4831m7el().s[1]++, require('../middleware/auth'));
class ChannelService {
  constructor() {
    /* istanbul ignore next */
    cov_2p4831m7el().f[0]++;
    cov_2p4831m7el().s[2]++;
    this.logger = logger;
  }
  async getAllChannels() {
    /* istanbul ignore next */
    cov_2p4831m7el().f[1]++;
    cov_2p4831m7el().s[3]++;
    try {
      const channels =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[4]++, await Channel.find({}).select('-_id id name type description createdBy position').sort({
        position: 1
      }));
      /* istanbul ignore next */
      cov_2p4831m7el().s[5]++;
      return channels;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[6]++;
      this.logger.error('Error fetching channels:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[7]++;
      throw error;
    }
  }
  async getChannelById(id) {
    /* istanbul ignore next */
    cov_2p4831m7el().f[2]++;
    cov_2p4831m7el().s[8]++;
    try {
      const channel =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[9]++, await Channel.findOne({
        id
      }));
      /* istanbul ignore next */
      cov_2p4831m7el().s[10]++;
      return channel;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[11]++;
      this.logger.error('Error fetching channel by ID:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[12]++;
      throw error;
    }
  }
  async createChannel(channelData) {
    /* istanbul ignore next */
    cov_2p4831m7el().f[3]++;
    cov_2p4831m7el().s[13]++;
    try {
      const {
        name,
        type,
        description,
        createdBy
      } =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[14]++, channelData);

      // Create new channel (ID will be auto-generated in pre-save middleware)
      const channel =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[15]++, new Channel({
        name,
        type,
        description,
        createdBy
      }));
      /* istanbul ignore next */
      cov_2p4831m7el().s[16]++;
      await channel.save();
      /* istanbul ignore next */
      cov_2p4831m7el().s[17]++;
      this.logger.info(`Channel '${name}' created by ${createdBy}`, {
        channelId: channel.id,
        type,
        createdBy
      });
      /* istanbul ignore next */
      cov_2p4831m7el().s[18]++;
      return channel;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[19]++;
      if (error.code === 11000) {
        /* istanbul ignore next */
        cov_2p4831m7el().b[0][0]++;
        cov_2p4831m7el().s[20]++;
        throw new Error('Channel name already exists');
      } else
      /* istanbul ignore next */
      {
        cov_2p4831m7el().b[0][1]++;
      }
      cov_2p4831m7el().s[21]++;
      this.logger.error('Error creating channel:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[22]++;
      throw error;
    }
  }
  async updateChannel(channelId, updateData) {
    /* istanbul ignore next */
    cov_2p4831m7el().f[4]++;
    cov_2p4831m7el().s[23]++;
    try {
      const channel =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[24]++, await Channel.findOneAndUpdate({
        id: channelId
      }, updateData, {
        new: true
      }));
      /* istanbul ignore next */
      cov_2p4831m7el().s[25]++;
      if (!channel) {
        /* istanbul ignore next */
        cov_2p4831m7el().b[1][0]++;
        cov_2p4831m7el().s[26]++;
        throw new Error('Channel not found');
      } else
      /* istanbul ignore next */
      {
        cov_2p4831m7el().b[1][1]++;
      }
      cov_2p4831m7el().s[27]++;
      this.logger.info(`Channel '${channelId}' updated`);
      /* istanbul ignore next */
      cov_2p4831m7el().s[28]++;
      return channel;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[29]++;
      this.logger.error('Error updating channel:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[30]++;
      throw error;
    }
  }
  async deleteChannel(channelId) {
    /* istanbul ignore next */
    cov_2p4831m7el().f[5]++;
    cov_2p4831m7el().s[31]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[32]++, await Channel.findOneAndDelete({
        id: channelId
      }));
      /* istanbul ignore next */
      cov_2p4831m7el().s[33]++;
      if (!result) {
        /* istanbul ignore next */
        cov_2p4831m7el().b[2][0]++;
        cov_2p4831m7el().s[34]++;
        throw new Error('Channel not found');
      } else
      /* istanbul ignore next */
      {
        cov_2p4831m7el().b[2][1]++;
      }
      cov_2p4831m7el().s[35]++;
      this.logger.info(`Channel '${channelId}' deleted`);
      /* istanbul ignore next */
      cov_2p4831m7el().s[36]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[37]++;
      this.logger.error('Error deleting channel:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[38]++;
      throw error;
    }
  }
  async validateChannelExists(channelId) {
    /* istanbul ignore next */
    cov_2p4831m7el().f[6]++;
    cov_2p4831m7el().s[39]++;
    try {
      const channel =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[40]++, await this.getChannelById(channelId));
      /* istanbul ignore next */
      cov_2p4831m7el().s[41]++;
      if (!channel) {
        /* istanbul ignore next */
        cov_2p4831m7el().b[3][0]++;
        cov_2p4831m7el().s[42]++;
        throw new Error('Channel not found');
      } else
      /* istanbul ignore next */
      {
        cov_2p4831m7el().b[3][1]++;
      }
      cov_2p4831m7el().s[43]++;
      return channel;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[44]++;
      this.logger.warn('Channel validation failed:', error.message);
      /* istanbul ignore next */
      cov_2p4831m7el().s[45]++;
      throw error;
    }
  }
  async createDefaultChannels() {
    /* istanbul ignore next */
    cov_2p4831m7el().f[7]++;
    cov_2p4831m7el().s[46]++;
    try {
      const defaultChannels =
      /* istanbul ignore next */
      (cov_2p4831m7el().s[47]++, [{
        id: 'general',
        name: 'General',
        type: 'text',
        createdBy: 'system'
      }, {
        id: 'voice-chat',
        name: 'Voice Chat',
        type: 'voice',
        createdBy: 'system'
      }]);
      /* istanbul ignore next */
      cov_2p4831m7el().s[48]++;
      for (const channelData of defaultChannels) {
        /* istanbul ignore next */
        cov_2p4831m7el().s[49]++;
        await Channel.findOneAndUpdate({
          id: channelData.id
        }, channelData, {
          upsert: true,
          new: true
        });
      }
      /* istanbul ignore next */
      cov_2p4831m7el().s[50]++;
      this.logger.info('Default channels initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_2p4831m7el().s[51]++;
      this.logger.error('Error creating default channels:', error);
      /* istanbul ignore next */
      cov_2p4831m7el().s[52]++;
      throw error;
    }
  }
}
/* istanbul ignore next */
cov_2p4831m7el().s[53]++;
module.exports = new ChannelService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,