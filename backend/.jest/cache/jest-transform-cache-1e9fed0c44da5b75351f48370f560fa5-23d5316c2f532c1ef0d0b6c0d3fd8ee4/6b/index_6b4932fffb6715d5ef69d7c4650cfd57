fe083b54e9348b3ed95496b0f2434e12
/* istanbul ignore next */
function cov_15lus477ee() {
  var path = "/home/raerlim/Chat-JS/backend/src/server/index.js";
  var hash = "f37c753a47ef727c1d84b8efb513ccd46bd5ae59";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/raerlim/Chat-JS/backend/src/server/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 15
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 20
        },
        end: {
          line: 2,
          column: 50
        }
      },
      "2": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 23
        }
      },
      "3": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "4": {
        start: {
          line: 11,
          column: 6
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "8": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 37
        }
      },
      "11": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "12": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 54
        }
      },
      "13": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 18
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "15": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "16": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "17": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "19": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 24
        }
      },
      "20": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 22
        }
      },
      "21": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 54
        }
      },
      "22": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "23": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "24": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 22
        }
      },
      "25": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 62
        }
      },
      "26": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "27": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 7,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 29
          },
          end: {
            line: 16,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 25
          },
          end: {
            line: 9,
            column: 27
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f37c753a47ef727c1d84b8efb513ccd46bd5ae59"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15lus477ee = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15lus477ee();
const Server =
/* istanbul ignore next */
(cov_15lus477ee().s[0]++, require('./server'));
const {
  closeDB
} =
/* istanbul ignore next */
(cov_15lus477ee().s[1]++, require('../../db/connection'));
class ServerFactory {
  constructor() {
    /* istanbul ignore next */
    cov_15lus477ee().f[0]++;
    cov_15lus477ee().s[2]++;
    this.server = null;
  }
  createServer(options =
  /* istanbul ignore next */
  (cov_15lus477ee().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_15lus477ee().f[1]++;
    cov_15lus477ee().s[3]++;
    if (this.server) {
      /* istanbul ignore next */
      cov_15lus477ee().b[1][0]++;
      cov_15lus477ee().s[4]++;
      throw new Error('Server already created');
    } else
    /* istanbul ignore next */
    {
      cov_15lus477ee().b[1][1]++;
    }
    cov_15lus477ee().s[5]++;
    this.server = new Server(options);
    /* istanbul ignore next */
    cov_15lus477ee().s[6]++;
    return this.server;
  }
  async start() {
    /* istanbul ignore next */
    cov_15lus477ee().f[2]++;
    cov_15lus477ee().s[7]++;
    if (!this.server) {
      /* istanbul ignore next */
      cov_15lus477ee().b[2][0]++;
      cov_15lus477ee().s[8]++;
      this.server = new Server();
    } else
    /* istanbul ignore next */
    {
      cov_15lus477ee().b[2][1]++;
    }
    cov_15lus477ee().s[9]++;
    try {
      /* istanbul ignore next */
      cov_15lus477ee().s[10]++;
      await this.server.initialize();
      /* istanbul ignore next */
      cov_15lus477ee().s[11]++;
      return this.server;
    } catch (error) {
      /* istanbul ignore next */
      cov_15lus477ee().s[12]++;
      console.error('Failed to start server:', error);
      /* istanbul ignore next */
      cov_15lus477ee().s[13]++;
      throw error;
    }
  }
  async stop() {
    /* istanbul ignore next */
    cov_15lus477ee().f[3]++;
    cov_15lus477ee().s[14]++;
    if (this.server) {
      /* istanbul ignore next */
      cov_15lus477ee().b[3][0]++;
      cov_15lus477ee().s[15]++;
      await this.server.shutdown();
      /* istanbul ignore next */
      cov_15lus477ee().s[16]++;
      this.server = null;
    } else
    /* istanbul ignore next */
    {
      cov_15lus477ee().b[3][1]++;
    }
  }
  async gracefulShutdown() {
    /* istanbul ignore next */
    cov_15lus477ee().f[4]++;
    cov_15lus477ee().s[17]++;
    console.log('Received shutdown signal, shutting down gracefully...');
    /* istanbul ignore next */
    cov_15lus477ee().s[18]++;
    try {
      /* istanbul ignore next */
      cov_15lus477ee().s[19]++;
      await this.stop();
      /* istanbul ignore next */
      cov_15lus477ee().s[20]++;
      await closeDB();

      // Close Redis connection
      const {
        disconnect
      } =
      /* istanbul ignore next */
      (cov_15lus477ee().s[21]++, require('./config/redis'));
      /* istanbul ignore next */
      cov_15lus477ee().s[22]++;
      await disconnect();
      /* istanbul ignore next */
      cov_15lus477ee().s[23]++;
      console.log('Server and Redis shut down gracefully');
      /* istanbul ignore next */
      cov_15lus477ee().s[24]++;
      process.exit(0);
    } catch (error) {
      /* istanbul ignore next */
      cov_15lus477ee().s[25]++;
      console.error('Error during graceful shutdown:', error);
      /* istanbul ignore next */
      cov_15lus477ee().s[26]++;
      process.exit(1);
    }
  }
}
/* istanbul ignore next */
cov_15lus477ee().s[27]++;
module.exports = new ServerFactory();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTVsdXM0NzdlZSIsImFjdHVhbENvdmVyYWdlIiwiU2VydmVyIiwicyIsInJlcXVpcmUiLCJjbG9zZURCIiwiU2VydmVyRmFjdG9yeSIsImNvbnN0cnVjdG9yIiwiZiIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsIm9wdGlvbnMiLCJiIiwiRXJyb3IiLCJzdGFydCIsImluaXRpYWxpemUiLCJlcnJvciIsImNvbnNvbGUiLCJzdG9wIiwic2h1dGRvd24iLCJncmFjZWZ1bFNodXRkb3duIiwibG9nIiwiZGlzY29ubmVjdCIsInByb2Nlc3MiLCJleGl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcnZlciA9IHJlcXVpcmUoJy4vc2VydmVyJyk7XG5jb25zdCB7IGNsb3NlREIgfSA9IHJlcXVpcmUoJy4uLy4uL2RiL2Nvbm5lY3Rpb24nKTtcblxuY2xhc3MgU2VydmVyRmFjdG9yeSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc2VydmVyID0gbnVsbDtcbiAgfVxuXG4gIGNyZWF0ZVNlcnZlcihvcHRpb25zID0ge30pIHtcbiAgICBpZiAodGhpcy5zZXJ2ZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU2VydmVyIGFscmVhZHkgY3JlYXRlZCcpO1xuICAgIH1cblxuICAgIHRoaXMuc2VydmVyID0gbmV3IFNlcnZlcihvcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5zZXJ2ZXI7XG4gIH1cblxuICBhc3luYyBzdGFydCgpIHtcbiAgICBpZiAoIXRoaXMuc2VydmVyKSB7XG4gICAgICB0aGlzLnNlcnZlciA9IG5ldyBTZXJ2ZXIoKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5zZXJ2ZXIuaW5pdGlhbGl6ZSgpO1xuICAgICAgcmV0dXJuIHRoaXMuc2VydmVyO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc3RhcnQgc2VydmVyOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHN0b3AoKSB7XG4gICAgaWYgKHRoaXMuc2VydmVyKSB7XG4gICAgICBhd2FpdCB0aGlzLnNlcnZlci5zaHV0ZG93bigpO1xuICAgICAgdGhpcy5zZXJ2ZXIgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGdyYWNlZnVsU2h1dGRvd24oKSB7XG4gICAgY29uc29sZS5sb2coJ1JlY2VpdmVkIHNodXRkb3duIHNpZ25hbCwgc2h1dHRpbmcgZG93biBncmFjZWZ1bGx5Li4uJyk7XG5cbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5zdG9wKCk7XG4gICAgICBhd2FpdCBjbG9zZURCKCk7XG5cbiAgICAgIC8vIENsb3NlIFJlZGlzIGNvbm5lY3Rpb25cbiAgICAgIGNvbnN0IHsgZGlzY29ubmVjdCB9ID0gcmVxdWlyZSgnLi9jb25maWcvcmVkaXMnKTtcbiAgICAgIGF3YWl0IGRpc2Nvbm5lY3QoKTtcblxuICAgICAgY29uc29sZS5sb2coJ1NlcnZlciBhbmQgUmVkaXMgc2h1dCBkb3duIGdyYWNlZnVsbHknKTtcbiAgICAgIHByb2Nlc3MuZXhpdCgwKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZHVyaW5nIGdyYWNlZnVsIHNodXRkb3duOicsIGVycm9yKTtcbiAgICAgIHByb2Nlc3MuZXhpdCgxKTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VydmVyRmFjdG9yeSgpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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