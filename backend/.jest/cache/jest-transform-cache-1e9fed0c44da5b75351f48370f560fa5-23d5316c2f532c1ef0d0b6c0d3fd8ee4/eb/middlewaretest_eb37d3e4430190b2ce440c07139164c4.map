{"version":3,"names":["request","require","jwt","mongoose","MongoMemoryServer","express","cors","helmet","body","validationResult","User","mongoServer","app","describe","beforeAll","create","mongoUri","getUri","connect","use","json","limit","contentSecurityPolicy","directives","defaultSrc","styleSrc","fontSrc","imgSrc","scriptSrc","connectSrc","crossOriginEmbedderPolicy","errorHandler","err","req","res","next","console","error","message","name","errors","Object","values","map","e","field","path","value","status","details","code","keys","keyValue","authenticateToken","authHeader","headers","token","split","decoded","verify","process","env","JWT_SECRET","user","findById","userId","start","Date","now","on","duration","log","method","url","statusCode","get","_id","nickname","post","isLength","min","max","trim","escape","isEmail","normalizeEmail","isEmpty","array","success","data","email","password","save","afterAll","disconnect","stop","beforeEach","deleteMany","testUser","validToken","sign","expiresIn","it","response","set","expect","toBe","toString","expiredToken","findByIdAndDelete","options","toBeDefined","cspHeader","toContain","send","Array","isArray","Error","startTime","endTime","toBeGreaterThanOrEqual"],"sources":["middleware.test.js"],"sourcesContent":["const request = require('supertest');\nconst jwt = require('jsonwebtoken');\nconst mongoose = require('mongoose');\nconst { MongoMemoryServer } = require('mongodb-memory-server');\n\n// Create minimal app for middleware testing\nconst express = require('express');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst { body, validationResult } = require('express-validator');\nconst User = require('../../models/User');\n\nlet mongoServer;\nlet app;\n\ndescribe('Middleware Tests', () => {\n  beforeAll(async () => {\n    // Start in-memory MongoDB\n    mongoServer = await MongoMemoryServer.create();\n    const mongoUri = mongoServer.getUri();\n    await mongoose.connect(mongoUri);\n\n    // Create minimal app with middleware\n    app = express();\n\n    // Middleware setup\n    app.use(cors());\n    app.use(express.json({ limit: '10mb' }));\n    app.use(helmet({\n      contentSecurityPolicy: {\n        directives: {\n          defaultSrc: [\"'self'\"],\n          styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n          fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n          imgSrc: [\"'self'\", \"data:\"],\n          scriptSrc: [\"'self'\", \"'unsafe-inline'\"],\n          connectSrc: [\"'self'\"]\n        }\n      },\n      crossOriginEmbedderPolicy: false\n    }));\n\n    // Error handler middleware (copied from server.js)\n    const errorHandler = (err, req, res, next) => {\n      console.error('Unhandled error:', err.message);\n      if (err.name === 'ValidationError') {\n        const errors = Object.values(err.errors).map(e => ({\n          field: e.path,\n          message: e.message,\n          value: e.value\n        }));\n        return res.status(422).json({\n          error: 'Validation failed',\n          details: errors,\n          code: 'VALIDATION_ERROR'\n        });\n      }\n      if (err.code === 11000) {\n        const field = Object.keys(err.keyValue)[0];\n        const value = err.keyValue[field];\n        return res.status(409).json({\n          error: `${field} '${value}' already exists`,\n          code: 'DUPLICATE_ERROR'\n        });\n      }\n      res.status(500).json({\n        error: 'Internal server error',\n        code: 'INTERNAL_ERROR'\n      });\n    };\n\n    // Authenticate token middleware (copied from server.js)\n    const authenticateToken = async (req, res, next) => {\n      try {\n        const authHeader = req.headers['authorization'];\n        const token = authHeader && authHeader.split(' ')[1];\n        if (!token) {\n          return res.status(401).json({\n            error: 'Access token required',\n            code: 'NO_TOKEN'\n          });\n        }\n        const decoded = jwt.verify(token, process.env.JWT_SECRET || 'test-secret');\n        const user = await User.findById(decoded.userId);\n        if (!user) {\n          return res.status(401).json({\n            error: 'User not found',\n            code: 'USER_NOT_FOUND'\n          });\n        }\n        req.user = user;\n        next();\n      } catch (error) {\n        if (error.name === 'JsonWebTokenError') {\n          return res.status(401).json({\n            error: 'Invalid token format',\n            code: 'INVALID_TOKEN_FORMAT'\n          });\n        }\n        if (error.name === 'TokenExpiredError') {\n          return res.status(401).json({\n            error: 'Token has expired',\n            code: 'TOKEN_EXPIRED'\n          });\n        }\n        return res.status(401).json({\n          error: 'Token verification failed',\n          code: 'TOKEN_VERIFICATION_FAILED'\n        });\n      }\n    };\n\n    // Request logging middleware (simplified version)\n    app.use((req, res, next) => {\n      const start = Date.now();\n      res.on('finish', () => {\n        const duration = Date.now() - start;\n        console.log(`${req.method} ${req.url} - ${res.statusCode} (${duration}ms)`);\n      });\n      next();\n    });\n\n    // Test routes\n    app.get('/protected', authenticateToken, (req, res) => {\n      res.json({ userId: req.user._id, nickname: req.user.nickname });\n    });\n\n    app.post('/validation-test', [\n      body('nickname').isLength({ min: 3, max: 50 }).trim().escape(),\n      body('email').isEmail().normalizeEmail()\n    ], (req, res) => {\n      const errors = validationResult(req);\n      if (!errors.isEmpty()) {\n        return res.status(400).json({ errors: errors.array() });\n      }\n      res.json({ success: true, data: req.body });\n    });\n\n    app.post('/duplicate-test', async (req, res) => {\n      try {\n        const user = new User({\n          nickname: req.body.nickname,\n          email: req.body.email,\n          password: 'password123'\n        });\n        await user.save();\n        res.status(201).json({ user });\n      } catch (error) {\n        // Let error handler middleware handle it\n        throw error;\n      }\n    });\n\n    app.get('/test-cors', (req, res) => {\n      res.json({ cors: 'enabled' });\n    });\n\n    app.get('/test-helmet', (req, res) => {\n      res.json({ helmet: 'enabled' });\n    });\n\n    // Error handler middleware must be last\n    app.use(errorHandler);\n\n    // 404 handler\n    app.use((req, res) => {\n      res.status(404).json({\n        error: 'Endpoint not found',\n        path: req.url,\n        method: req.method,\n        code: 'NOT_FOUND'\n      });\n    });\n  });\n\n  afterAll(async () => {\n    await mongoose.disconnect();\n    if (mongoServer) {\n      await mongoServer.stop();\n    }\n  });\n\n  beforeEach(async () => {\n    await User.deleteMany({});\n  });\n\n  describe('authenticateToken Middleware', () => {\n    let testUser;\n    let validToken;\n\n    beforeEach(async () => {\n      testUser = await new User({\n        nickname: 'authtest',\n        email: 'auth@example.com',\n        password: 'password123'\n      }).save();\n\n      validToken = jwt.sign(\n        { userId: testUser._id, nickname: testUser.nickname },\n        process.env.JWT_SECRET || 'test-secret',\n        { expiresIn: '1h' }\n      );\n    });\n\n    it('should pass with valid token', async () => {\n      const response = await request(app)\n        .get('/protected')\n        .set('Authorization', `Bearer ${validToken}`)\n        .expect(200);\n\n      expect(response.body.userId).toBe(testUser._id.toString());\n      expect(response.body.nickname).toBe('authtest');\n    });\n\n    it('should reject without token', async () => {\n      const response = await request(app)\n        .get('/protected')\n        .expect(401);\n\n      expect(response.body.code).toBe('NO_TOKEN');\n      expect(response.body.error).toBe('Access token required');\n    });\n\n    it('should reject with invalid token format', async () => {\n      const response = await request(app)\n        .get('/protected')\n        .set('Authorization', 'InvalidToken')\n        .expect(401);\n\n      expect(response.body.code).toBe('INVALID_TOKEN_FORMAT');\n    });\n\n    it('should reject with expired token', async () => {\n      const expiredToken = jwt.sign(\n        { userId: testUser._id, nickname: testUser.nickname },\n        process.env.JWT_SECRET || 'test-secret',\n        { expiresIn: '-1h' }\n      );\n\n      const response = await request(app)\n        .get('/protected')\n        .set('Authorization', `Bearer ${expiredToken}`)\n        .expect(401);\n\n      expect(response.body.code).toBe('TOKEN_EXPIRED');\n    });\n\n    it('should reject with valid token but non-existent user', async () => {\n      // Delete the user after creating token\n      await User.findByIdAndDelete(testUser._id);\n\n      const response = await request(app)\n        .get('/protected')\n        .set('Authorization', `Bearer ${validToken}`)\n        .expect(401);\n\n      expect(response.body.code).toBe('USER_NOT_FOUND');\n    });\n  });\n\n\n  describe('CORS Middleware', () => {\n    it('should handle CORS preflight requests', async () => {\n      const response = await request(app)\n        .options('/test-cors')\n        .set('Origin', 'http://localhost:3000')\n        .set('Access-Control-Request-Method', 'GET')\n        .expect(204);\n\n      expect(response.headers['access-control-allow-origin']).toBeDefined();\n    });\n\n    it('should include CORS headers in response', async () => {\n      const response = await request(app)\n        .get('/test-cors')\n        .set('Origin', 'http://localhost:3000')\n        .expect(200);\n\n      expect(response.headers['access-control-allow-origin']).toBeDefined();\n    });\n  });\n\n  describe('Helmet Security Headers', () => {\n    it('should set security headers', async () => {\n      const response = await request(app)\n        .get('/test-helmet')\n        .expect(200);\n\n      expect(response.headers['x-frame-options']).toBeDefined();\n      expect(response.headers['x-content-type-options']).toBeDefined();\n      expect(response.headers['content-security-policy']).toBeDefined();\n    });\n\n    it('should have CSP header configured', async () => {\n      const response = await request(app)\n        .get('/test-helmet')\n        .expect(200);\n\n      const cspHeader = response.headers['content-security-policy'];\n      expect(cspHeader).toContain(\"default-src 'self'\");\n      expect(cspHeader).toContain(\"script-src 'self' 'unsafe-inline'\");\n    });\n  });\n\n  describe('Error Handler Middleware', () => {\n    it('should handle validation errors', async () => {\n      const response = await request(app)\n        .post('/validation-test')\n        .send({ nickname: 'ab', email: 'invalid-email' })\n        .expect(400);\n\n      expect(response.body.errors).toBeDefined();\n      expect(Array.isArray(response.body.errors)).toBe(true);\n    });\n\n    it('should handle duplicate key errors', async () => {\n      // Create user first\n      await new User({\n        nickname: 'duplicateuser',\n        email: 'duplicate@example.com',\n        password: 'password123'\n      }).save();\n\n      // Try to create another with same data\n      const response = await request(app)\n        .post('/duplicate-test')\n        .send({\n          nickname: 'duplicateuser',\n          email: 'duplicate@example.com'\n        })\n        .expect(409);\n\n      expect(response.body.code).toBe('DUPLICATE_ERROR');\n      expect(response.body.error).toContain('already exists');\n    });\n\n    it('should handle 404 errors', async () => {\n      const response = await request(app)\n        .get('/nonexistent-route')\n        .expect(404);\n\n      expect(response.body.code).toBe('NOT_FOUND');\n      expect(response.body.path).toBe('/nonexistent-route');\n    });\n\n    it('should handle general server errors', async () => {\n      // Create a route that will throw an error\n      app.get('/error-test', (req, res) => {\n        throw new Error('Test error');\n      });\n\n      const response = await request(app)\n        .get('/error-test')\n        .expect(500);\n\n      expect(response.body.code).toBe('INTERNAL_ERROR');\n      expect(response.body.error).toBe('Internal server error');\n    });\n  });\n\n  describe('Request Logging Middleware', () => {\n    it('should log request timing', async () => {\n      const startTime = Date.now();\n\n      await request(app)\n        .get('/test-helmet')\n        .expect(200);\n\n      const endTime = Date.now();\n      expect(endTime - startTime).toBeGreaterThanOrEqual(0);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}