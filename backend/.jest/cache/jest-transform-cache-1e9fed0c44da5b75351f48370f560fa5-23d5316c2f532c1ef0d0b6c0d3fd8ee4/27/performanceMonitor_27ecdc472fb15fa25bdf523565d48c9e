af0c5f492c59b3ef8ff299876beead63
/* istanbul ignore next */
function cov_24sbid70js() {
  var path = "/home/raerlim/Chat-JS/backend/src/middleware/performanceMonitor.js";
  var hash = "1ff1c57bdc040db76391e1d2ccbdeb89a0f5fa80";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/raerlim/Chat-JS/backend/src/middleware/performanceMonitor.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 45
        },
        end: {
          line: 1,
          column: 66
        }
      },
      "1": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 23,
          column: 7
        }
      },
      "3": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "4": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "5": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 58
        }
      },
      "8": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "9": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "10": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 117,
          column: 6
        }
      },
      "11": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "12": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 56
        }
      },
      "13": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 68
        }
      },
      "14": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "15": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "16": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 41
        }
      },
      "17": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "18": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 48
        }
      },
      "19": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "20": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 87
        }
      },
      "21": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "22": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "23": {
        start: {
          line: 92,
          column: 10
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "24": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "25": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "26": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "27": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "28": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 30
        }
      },
      "29": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "30": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "31": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 38
        }
      },
      "32": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "33": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "34": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "35": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 74
        }
      },
      "36": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 70
        }
      },
      "37": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "38": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 46
        }
      },
      "39": {
        start: {
          line: 133,
          column: 10
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "40": {
        start: {
          line: 142,
          column: 10
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "41": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "42": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "43": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 46
        }
      },
      "44": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 44
        }
      },
      "45": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 52
        }
      },
      "46": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 50
        }
      },
      "47": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "48": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "49": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "50": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "51": {
        start: {
          line: 185,
          column: 18
        },
        end: {
          line: 185,
          column: 58
        }
      },
      "52": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "53": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 187,
          column: 36
        }
      },
      "54": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 50
        }
      },
      "55": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "56": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 58
        }
      },
      "57": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 193,
          column: 84
        }
      },
      "58": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 40
        }
      },
      "59": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "60": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 32
        }
      },
      "61": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 77
        }
      },
      "62": {
        start: {
          line: 202,
          column: 71
        },
        end: {
          line: 202,
          column: 76
        }
      },
      "63": {
        start: {
          line: 203,
          column: 21
        },
        end: {
          line: 203,
          column: 58
        }
      },
      "64": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "65": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 44
        }
      },
      "66": {
        start: {
          line: 211,
          column: 19
        },
        end: {
          line: 211,
          column: 35
        }
      },
      "67": {
        start: {
          line: 212,
          column: 19
        },
        end: {
          line: 212,
          column: 40
        }
      },
      "68": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "69": {
        start: {
          line: 227,
          column: 94
        },
        end: {
          line: 235,
          column: 7
        }
      },
      "70": {
        start: {
          line: 234,
          column: 61
        },
        end: {
          line: 234,
          column: 66
        }
      },
      "71": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "72": {
        start: {
          line: 241,
          column: 49
        },
        end: {
          line: 241,
          column: 58
        }
      },
      "73": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 101
        }
      },
      "74": {
        start: {
          line: 242,
          column: 55
        },
        end: {
          line: 242,
          column: 60
        }
      },
      "75": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 58
        }
      },
      "76": {
        start: {
          line: 246,
          column: 49
        },
        end: {
          line: 246,
          column: 58
        }
      },
      "77": {
        start: {
          line: 247,
          column: 19
        },
        end: {
          line: 247,
          column: 72
        }
      },
      "78": {
        start: {
          line: 247,
          column: 66
        },
        end: {
          line: 247,
          column: 71
        }
      },
      "79": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "80": {
        start: {
          line: 253,
          column: 28
        },
        end: {
          line: 253,
          column: 63
        }
      },
      "81": {
        start: {
          line: 254,
          column: 22
        },
        end: {
          line: 254,
          column: 90
        }
      },
      "82": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "83": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "84": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "85": {
        start: {
          line: 264,
          column: 6
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "86": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 88
        }
      },
      "87": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "88": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "89": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 285,
          column: 7
        }
      },
      "90": {
        start: {
          line: 291,
          column: 16
        },
        end: {
          line: 291,
          column: 26
        }
      },
      "91": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "92": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 26
        }
      },
      "93": {
        start: {
          line: 296,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "94": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "95": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 36
        }
      },
      "96": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 39
        }
      },
      "97": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 313,
          column: 34
        }
      },
      "98": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 314,
          column: 28
        }
      },
      "99": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 316,
          column: 50
        }
      },
      "100": {
        start: {
          line: 321,
          column: 27
        },
        end: {
          line: 321,
          column: 51
        }
      },
      "101": {
        start: {
          line: 324,
          column: 23
        },
        end: {
          line: 340,
          column: 1
        }
      },
      "102": {
        start: {
          line: 325,
          column: 2
        },
        end: {
          line: 339,
          column: 3
        }
      },
      "103": {
        start: {
          line: 326,
          column: 23
        },
        end: {
          line: 326,
          column: 57
        }
      },
      "104": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "105": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 66
        }
      },
      "106": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 338,
          column: 7
        }
      },
      "107": {
        start: {
          line: 343,
          column: 32
        },
        end: {
          line: 360,
          column: 1
        }
      },
      "108": {
        start: {
          line: 344,
          column: 2
        },
        end: {
          line: 359,
          column: 3
        }
      },
      "109": {
        start: {
          line: 345,
          column: 26
        },
        end: {
          line: 345,
          column: 63
        }
      },
      "110": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 351,
          column: 7
        }
      },
      "111": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 353,
          column: 75
        }
      },
      "112": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 358,
          column: 7
        }
      },
      "113": {
        start: {
          line: 364,
          column: 26
        },
        end: {
          line: 364,
          column: 28
        }
      },
      "114": {
        start: {
          line: 366,
          column: 26
        },
        end: {
          line: 366,
          column: 105
        }
      },
      "115": {
        start: {
          line: 366,
          column: 65
        },
        end: {
          line: 366,
          column: 70
        }
      },
      "116": {
        start: {
          line: 367,
          column: 2
        },
        end: {
          line: 369,
          column: 3
        }
      },
      "117": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 368,
          column: 77
        }
      },
      "118": {
        start: {
          line: 371,
          column: 22
        },
        end: {
          line: 371,
          column: 86
        }
      },
      "119": {
        start: {
          line: 372,
          column: 2
        },
        end: {
          line: 374,
          column: 3
        }
      },
      "120": {
        start: {
          line: 373,
          column: 4
        },
        end: {
          line: 373,
          column: 86
        }
      },
      "121": {
        start: {
          line: 376,
          column: 2
        },
        end: {
          line: 378,
          column: 3
        }
      },
      "122": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 377,
          column: 71
        }
      },
      "123": {
        start: {
          line: 380,
          column: 2
        },
        end: {
          line: 382,
          column: 3
        }
      },
      "124": {
        start: {
          line: 381,
          column: 4
        },
        end: {
          line: 381,
          column: 55
        }
      },
      "125": {
        start: {
          line: 384,
          column: 2
        },
        end: {
          line: 384,
          column: 25
        }
      },
      "126": {
        start: {
          line: 387,
          column: 0
        },
        end: {
          line: 394,
          column: 2
        }
      },
      "127": {
        start: {
          line: 389,
          column: 34
        },
        end: {
          line: 389,
          column: 79
        }
      },
      "128": {
        start: {
          line: 390,
          column: 38
        },
        end: {
          line: 390,
          column: 87
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 2
          },
          end: {
            line: 6,
            column: 3
          }
        },
        loc: {
          start: {
            line: 6,
            column: 16
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 56
          }
        },
        loc: {
          start: {
            line: 25,
            column: 65
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 23
          }
        },
        loc: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 29,
            column: 7
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        loc: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 118,
            column: 3
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 11
          },
          end: {
            line: 54,
            column: 12
          }
        },
        loc: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 24
          }
        },
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 99,
            column: 7
          }
        },
        line: 69
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 23
          }
        },
        loc: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 114,
            column: 7
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 121,
            column: 2
          },
          end: {
            line: 121,
            column: 3
          }
        },
        loc: {
          start: {
            line: 121,
            column: 33
          },
          end: {
            line: 161,
            column: 3
          }
        },
        line: 121
      },
      "8": {
        name: "dbQueryObserver",
        decl: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 41
          }
        },
        loc: {
          start: {
            line: 122,
            column: 58
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 122
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 164,
            column: 2
          },
          end: {
            line: 164,
            column: 3
          }
        },
        loc: {
          start: {
            line: 164,
            column: 72
          },
          end: {
            line: 207,
            column: 3
          }
        },
        line: 164
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 202,
            column: 61
          },
          end: {
            line: 202,
            column: 62
          }
        },
        loc: {
          start: {
            line: 202,
            column: 71
          },
          end: {
            line: 202,
            column: 76
          }
        },
        line: 202
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 210,
            column: 2
          },
          end: {
            line: 210,
            column: 3
          }
        },
        loc: {
          start: {
            line: 210,
            column: 18
          },
          end: {
            line: 237,
            column: 3
          }
        },
        line: 210
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 227,
            column: 70
          },
          end: {
            line: 227,
            column: 71
          }
        },
        loc: {
          start: {
            line: 227,
            column: 94
          },
          end: {
            line: 235,
            column: 7
          }
        },
        line: 227
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 234,
            column: 51
          },
          end: {
            line: 234,
            column: 52
          }
        },
        loc: {
          start: {
            line: 234,
            column: 61
          },
          end: {
            line: 234,
            column: 66
          }
        },
        line: 234
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 240,
            column: 3
          }
        },
        loc: {
          start: {
            line: 240,
            column: 33
          },
          end: {
            line: 243,
            column: 3
          }
        },
        line: 240
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 242,
            column: 45
          },
          end: {
            line: 242,
            column: 46
          }
        },
        loc: {
          start: {
            line: 242,
            column: 55
          },
          end: {
            line: 242,
            column: 60
          }
        },
        line: 242
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 245,
            column: 2
          },
          end: {
            line: 245,
            column: 3
          }
        },
        loc: {
          start: {
            line: 245,
            column: 29
          },
          end: {
            line: 249,
            column: 3
          }
        },
        line: 245
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 247,
            column: 56
          },
          end: {
            line: 247,
            column: 57
          }
        },
        loc: {
          start: {
            line: 247,
            column: 66
          },
          end: {
            line: 247,
            column: 71
          }
        },
        line: 247
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 252,
            column: 2
          },
          end: {
            line: 252,
            column: 3
          }
        },
        loc: {
          start: {
            line: 252,
            column: 16
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 252
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 279,
            column: 2
          },
          end: {
            line: 279,
            column: 3
          }
        },
        loc: {
          start: {
            line: 279,
            column: 30
          },
          end: {
            line: 286,
            column: 3
          }
        },
        line: 279
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 289,
            column: 2
          },
          end: {
            line: 289,
            column: 3
          }
        },
        loc: {
          start: {
            line: 289,
            column: 21
          },
          end: {
            line: 306,
            column: 3
          }
        },
        line: 289
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 309,
            column: 2
          },
          end: {
            line: 309,
            column: 3
          }
        },
        loc: {
          start: {
            line: 309,
            column: 17
          },
          end: {
            line: 317,
            column: 3
          }
        },
        line: 309
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 324,
            column: 23
          },
          end: {
            line: 324,
            column: 24
          }
        },
        loc: {
          start: {
            line: 324,
            column: 37
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 324
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 343,
            column: 32
          },
          end: {
            line: 343,
            column: 33
          }
        },
        loc: {
          start: {
            line: 343,
            column: 46
          },
          end: {
            line: 360,
            column: 1
          }
        },
        line: 343
      },
      "24": {
        name: "generatePerformanceRecommendations",
        decl: {
          start: {
            line: 363,
            column: 9
          },
          end: {
            line: 363,
            column: 43
          }
        },
        loc: {
          start: {
            line: 363,
            column: 53
          },
          end: {
            line: 385,
            column: 1
          }
        },
        line: 363
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 366,
            column: 55
          },
          end: {
            line: 366,
            column: 56
          }
        },
        loc: {
          start: {
            line: 366,
            column: 65
          },
          end: {
            line: 366,
            column: 70
          }
        },
        line: 366
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 389,
            column: 28
          },
          end: {
            line: 389,
            column: 29
          }
        },
        loc: {
          start: {
            line: 389,
            column: 34
          },
          end: {
            line: 389,
            column: 79
          }
        },
        line: 389
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 390,
            column: 32
          },
          end: {
            line: 390,
            column: 33
          }
        },
        loc: {
          start: {
            line: 390,
            column: 38
          },
          end: {
            line: 390,
            column: 87
          }
        },
        line: 390
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 57,
            column: 55
          }
        }, {
          start: {
            line: 57,
            column: 59
          },
          end: {
            line: 57,
            column: 66
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 50
          }
        }, {
          start: {
            line: 84,
            column: 54
          },
          end: {
            line: 84,
            column: 55
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "3": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "4": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 49
          }
        }, {
          start: {
            line: 135,
            column: 53
          },
          end: {
            line: 135,
            column: 62
          }
        }],
        line: 135
      },
      "5": {
        loc: {
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 136,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 136,
            column: 48
          }
        }, {
          start: {
            line: 136,
            column: 52
          },
          end: {
            line: 136,
            column: 54
          }
        }],
        line: 136
      },
      "6": {
        loc: {
          start: {
            line: 142,
            column: 10
          },
          end: {
            line: 151,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 10
          },
          end: {
            line: 151,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 51
          }
        }, {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 64
          }
        }],
        line: 145
      },
      "8": {
        loc: {
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 147,
            column: 50
          }
        }, {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 56
          }
        }],
        line: 147
      },
      "9": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "10": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "11": {
        loc: {
          start: {
            line: 193,
            column: 39
          },
          end: {
            line: 193,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 39
          },
          end: {
            line: 193,
            column: 72
          }
        }, {
          start: {
            line: 193,
            column: 76
          },
          end: {
            line: 193,
            column: 77
          }
        }],
        line: 193
      },
      "12": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "13": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "14": {
        loc: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "15": {
        loc: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 58
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "16": {
        loc: {
          start: {
            line: 248,
            column: 11
          },
          end: {
            line: 248,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 11
          },
          end: {
            line: 248,
            column: 51
          }
        }, {
          start: {
            line: 248,
            column: 55
          },
          end: {
            line: 248,
            column: 56
          }
        }],
        line: 248
      },
      "17": {
        loc: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "18": {
        loc: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "19": {
        loc: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 276,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "20": {
        loc: {
          start: {
            line: 284,
            column: 14
          },
          end: {
            line: 284,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 14
          },
          end: {
            line: 284,
            column: 26
          }
        }, {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 32
          }
        }],
        line: 284
      },
      "21": {
        loc: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "22": {
        loc: {
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 369,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 2
          },
          end: {
            line: 369,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "23": {
        loc: {
          start: {
            line: 372,
            column: 2
          },
          end: {
            line: 374,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 2
          },
          end: {
            line: 374,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "24": {
        loc: {
          start: {
            line: 376,
            column: 2
          },
          end: {
            line: 378,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 2
          },
          end: {
            line: 378,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "25": {
        loc: {
          start: {
            line: 380,
            column: 2
          },
          end: {
            line: 382,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 2
          },
          end: {
            line: 382,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ff1c57bdc040db76391e1d2ccbdeb89a0f5fa80"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24sbid70js = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24sbid70js();
const {
  performance,
  PerformanceObserver
} =
/* istanbul ignore next */
(cov_24sbid70js().s[0]++, require('perf_hooks'));
const winston =
/* istanbul ignore next */
(cov_24sbid70js().s[1]++, require('winston'));

// Performance monitoring middleware
class PerformanceMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_24sbid70js().f[0]++;
    cov_24sbid70js().s[2]++;
    this.logger = winston.createLogger({
      level: 'info',
      format: winston.format.combine(winston.format.timestamp(), winston.format.errors({
        stack: true
      }), winston.format.json()),
      transports: [new winston.transports.File({
        filename: 'logs/performance.log'
      }), new winston.transports.Console({
        format: winston.format.combine(winston.format.colorize(), winston.format.simple())
      })]
    });
    /* istanbul ignore next */
    cov_24sbid70js().s[3]++;
    this.performanceObserver = new PerformanceObserver(list => {
      /* istanbul ignore next */
      cov_24sbid70js().f[1]++;
      const entries =
      /* istanbul ignore next */
      (cov_24sbid70js().s[4]++, list.getEntries());
      /* istanbul ignore next */
      cov_24sbid70js().s[5]++;
      entries.forEach(entry => {
        /* istanbul ignore next */
        cov_24sbid70js().f[2]++;
        cov_24sbid70js().s[6]++;
        this.logPerformanceMetric(entry);
      });
    });
    /* istanbul ignore next */
    cov_24sbid70js().s[7]++;
    this.performanceObserver.observe({
      type: 'measure'
    });

    // Metrics storage (simple in-memory for performance)
    /* istanbul ignore next */
    cov_24sbid70js().s[8]++;
    this.metrics = {
      responseTimes: [],
      endpointStats: new Map(),
      slowQueries: [],
      memoryUsage: [],
      throughput: 0,
      errors: 0,
      lastResetTime: Date.now()
    };
    /* istanbul ignore next */
    cov_24sbid70js().s[9]++;
    this.alerts = {
      slowResponseThreshold: 5000,
      // 5 seconds
      highErrorRateThreshold: 0.1,
      // 10%
      highMemoryThreshold: 0.8 // 80%
    };
  }

  // Middleware for API endpoints
  apiPerformanceMiddleware() {
    /* istanbul ignore next */
    cov_24sbid70js().f[3]++;
    cov_24sbid70js().s[10]++;
    return (req, res, next) => {
      /* istanbul ignore next */
      cov_24sbid70js().f[4]++;
      const startTime =
      /* istanbul ignore next */
      (cov_24sbid70js().s[11]++, performance.now());
      const startMemory =
      /* istanbul ignore next */
      (cov_24sbid70js().s[12]++, process.memoryUsage().heapUsed);
      const endpoint =
      /* istanbul ignore next */
      (cov_24sbid70js().s[13]++, `${req.method} ${
      /* istanbul ignore next */
      (cov_24sbid70js().b[0][0]++, req.route?.path) ||
      /* istanbul ignore next */
      (cov_24sbid70js().b[0][1]++, req.url)}`);

      // Log incoming request
      /* istanbul ignore next */
      cov_24sbid70js().s[14]++;
      this.logger.debug('API Request Started', {
        method: req.method,
        url: req.url,
        endpoint,
        userAgent: req.get('User-Agent'),
        ip: req.ip,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_24sbid70js().s[15]++;
      res.on('finish', () => {
        /* istanbul ignore next */
        cov_24sbid70js().f[5]++;
        const endTime =
        /* istanbul ignore next */
        (cov_24sbid70js().s[16]++, performance.now());
        const endMemory =
        /* istanbul ignore next */
        (cov_24sbid70js().s[17]++, process.memoryUsage().heapUsed);
        const responseTime =
        /* istanbul ignore next */
        (cov_24sbid70js().s[18]++, endTime - startTime);
        const memoryDelta =
        /* istanbul ignore next */
        (cov_24sbid70js().s[19]++, endMemory - startMemory);

        // Store metrics
        /* istanbul ignore next */
        cov_24sbid70js().s[20]++;
        this.storeEndpointMetrics(endpoint, responseTime, memoryDelta, res.statusCode);

        // Log detailed performance data
        /* istanbul ignore next */
        cov_24sbid70js().s[21]++;
        this.logger.info('API Response Performance', {
          endpoint,
          responseTime: `${responseTime.toFixed(2)}ms`,
          memoryDelta: `${(memoryDelta / 1024 / 1024).toFixed(2)}MB`,
          statusCode: res.statusCode,
          contentLength:
          /* istanbul ignore next */
          (cov_24sbid70js().b[1][0]++, res.get('Content-Length')) ||
          /* istanbul ignore next */
          (cov_24sbid70js().b[1][1]++, 0),
          userAgent: req.get('User-Agent'),
          ip: req.ip,
          timestamp: new Date().toISOString()
        });

        // Alert on slow responses
        /* istanbul ignore next */
        cov_24sbid70js().s[22]++;
        if (responseTime > this.alerts.slowResponseThreshold) {
          /* istanbul ignore next */
          cov_24sbid70js().b[2][0]++;
          cov_24sbid70js().s[23]++;
          this.logger.warn('⚠️ SLOW RESPONSE ALERT', {
            endpoint,
            responseTime: `${responseTime.toFixed(2)}ms`,
            threshold: `${this.alerts.slowResponseThreshold}ms`,
            recommendation: 'Consider optimization or caching'
          });
        } else
        /* istanbul ignore next */
        {
          cov_24sbid70js().b[2][1]++;
        }
      });
      /* istanbul ignore next */
      cov_24sbid70js().s[24]++;
      res.on('error', error => {
        /* istanbul ignore next */
        cov_24sbid70js().f[6]++;
        const endTime =
        /* istanbul ignore next */
        (cov_24sbid70js().s[25]++, performance.now());
        const responseTime =
        /* istanbul ignore next */
        (cov_24sbid70js().s[26]++, endTime - startTime);
        /* istanbul ignore next */
        cov_24sbid70js().s[27]++;
        this.logger.error('API Request Error', {
          endpoint,
          responseTime: `${responseTime.toFixed(2)}ms`,
          error: error.message,
          stack: error.stack,
          ip: req.ip
        });
        /* istanbul ignore next */
        cov_24sbid70js().s[28]++;
        this.metrics.errors++;
      });
      /* istanbul ignore next */
      cov_24sbid70js().s[29]++;
      next();
    };
  }

  // Database query performance monitoring middleware
  dbQueryPerformanceMiddleware() {
    /* istanbul ignore next */
    cov_24sbid70js().f[7]++;
    cov_24sbid70js().s[30]++;
    return async function dbQueryObserver(query, options) {
      /* istanbul ignore next */
      cov_24sbid70js().f[8]++;
      cov_24sbid70js().s[31]++;
      performance.mark('query-start');
      /* istanbul ignore next */
      cov_24sbid70js().s[32]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_24sbid70js().s[33]++, await query());
        /* istanbul ignore next */
        cov_24sbid70js().s[34]++;
        performance.mark('query-end');
        /* istanbul ignore next */
        cov_24sbid70js().s[35]++;
        performance.measure('query-duration', 'query-start', 'query-end');
        const entries =
        /* istanbul ignore next */
        (cov_24sbid70js().s[36]++, performance.getEntriesByName('query-duration'));
        /* istanbul ignore next */
        cov_24sbid70js().s[37]++;
        if (entries.length > 0) {
          /* istanbul ignore next */
          cov_24sbid70js().b[3][0]++;
          const duration =
          /* istanbul ignore next */
          (cov_24sbid70js().s[38]++, entries[0].duration);
          /* istanbul ignore next */
          cov_24sbid70js().s[39]++;
          winston.log('info', 'Database Query Performance', {
            operation: query.constructor.name,
            collection:
            /* istanbul ignore next */
            (cov_24sbid70js().b[4][0]++, options?.collection?.name) ||
            /* istanbul ignore next */
            (cov_24sbid70js().b[4][1]++, 'unknown'),
            query: JSON.stringify(
            /* istanbul ignore next */
            (cov_24sbid70js().b[5][0]++, options?.query) ||
            /* istanbul ignore next */
            (cov_24sbid70js().b[5][1]++, {})),
            duration: `${duration.toFixed(2)}ms`,
            timestamp: new Date().toISOString()
          });

          // Log slow queries
          /* istanbul ignore next */
          cov_24sbid70js().s[40]++;
          if (duration > 1000) {
            /* istanbul ignore next */
            cov_24sbid70js().b[6][0]++;
            cov_24sbid70js().s[41]++;
            winston.log('warn', 'SLOW QUERY ALERT', {
              operation: query.constructor.name,
              collection:
              /* istanbul ignore next */
              (cov_24sbid70js().b[7][0]++, options?.collection?.name) ||
              /* istanbul ignore next */
              (cov_24sbid70js().b[7][1]++, 'unknown'),
              duration: `${duration.toFixed(2)}ms`,
              query: JSON.stringify(
              /* istanbul ignore next */
              (cov_24sbid70js().b[8][0]++, options?.query) ||
              /* istanbul ignore next */
              (cov_24sbid70js().b[8][1]++, {})),
              timestamp: new Date().toISOString(),
              recommendation: 'Consider adding indexes or optimizing query'
            });
          } else
          /* istanbul ignore next */
          {
            cov_24sbid70js().b[6][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_24sbid70js().b[3][1]++;
        }
        cov_24sbid70js().s[42]++;
        return result;
      } finally {
        /* istanbul ignore next */
        cov_24sbid70js().s[43]++;
        performance.clearMarks('query-start');
        /* istanbul ignore next */
        cov_24sbid70js().s[44]++;
        performance.clearMarks('query-end');
        /* istanbul ignore next */
        cov_24sbid70js().s[45]++;
        performance.clearMeasures('query-duration');
      }
    };
  }

  // Store endpoint metrics for analytics
  storeEndpointMetrics(endpoint, responseTime, memoryDelta, statusCode) {
    /* istanbul ignore next */
    cov_24sbid70js().f[9]++;
    cov_24sbid70js().s[46]++;
    // Update response times array (keep last 1000 entries)
    this.metrics.responseTimes.push(responseTime);
    /* istanbul ignore next */
    cov_24sbid70js().s[47]++;
    if (this.metrics.responseTimes.length > 1000) {
      /* istanbul ignore next */
      cov_24sbid70js().b[9][0]++;
      cov_24sbid70js().s[48]++;
      this.metrics.responseTimes.shift();
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[9][1]++;
    }

    // Update endpoint statistics
    cov_24sbid70js().s[49]++;
    if (!this.metrics.endpointStats.has(endpoint)) {
      /* istanbul ignore next */
      cov_24sbid70js().b[10][0]++;
      cov_24sbid70js().s[50]++;
      this.metrics.endpointStats.set(endpoint, {
        count: 0,
        totalTime: 0,
        avgTime: 0,
        minTime: responseTime,
        maxTime: responseTime,
        p95Time: 0,
        statusCodes: new Map(),
        memoryUsage: []
      });
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[10][1]++;
    }
    const stats =
    /* istanbul ignore next */
    (cov_24sbid70js().s[51]++, this.metrics.endpointStats.get(endpoint));
    /* istanbul ignore next */
    cov_24sbid70js().s[52]++;
    stats.count++;
    /* istanbul ignore next */
    cov_24sbid70js().s[53]++;
    stats.totalTime += responseTime;
    /* istanbul ignore next */
    cov_24sbid70js().s[54]++;
    stats.avgTime = stats.totalTime / stats.count;
    /* istanbul ignore next */
    cov_24sbid70js().s[55]++;
    stats.minTime = Math.min(stats.minTime, responseTime);
    /* istanbul ignore next */
    cov_24sbid70js().s[56]++;
    stats.maxTime = Math.max(stats.maxTime, responseTime);

    // Update status codes
    /* istanbul ignore next */
    cov_24sbid70js().s[57]++;
    stats.statusCodes.set(statusCode, (
    /* istanbul ignore next */
    (cov_24sbid70js().b[11][0]++, stats.statusCodes.get(statusCode)) ||
    /* istanbul ignore next */
    (cov_24sbid70js().b[11][1]++, 0)) + 1);

    // Store memory usage (keep last 100)
    /* istanbul ignore next */
    cov_24sbid70js().s[58]++;
    stats.memoryUsage.push(memoryDelta);
    /* istanbul ignore next */
    cov_24sbid70js().s[59]++;
    if (stats.memoryUsage.length > 100) {
      /* istanbul ignore next */
      cov_24sbid70js().b[12][0]++;
      cov_24sbid70js().s[60]++;
      stats.memoryUsage.shift();
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[12][1]++;
    }

    // Calculate P95 response time
    const sortedTimes =
    /* istanbul ignore next */
    (cov_24sbid70js().s[61]++, [...this.metrics.responseTimes].sort((a, b) => {
      /* istanbul ignore next */
      cov_24sbid70js().f[10]++;
      cov_24sbid70js().s[62]++;
      return a - b;
    }));
    const p95Index =
    /* istanbul ignore next */
    (cov_24sbid70js().s[63]++, Math.floor(sortedTimes.length * 0.95));
    /* istanbul ignore next */
    cov_24sbid70js().s[64]++;
    if (sortedTimes[p95Index]) {
      /* istanbul ignore next */
      cov_24sbid70js().b[13][0]++;
      cov_24sbid70js().s[65]++;
      stats.p95Time = sortedTimes[p95Index];
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[13][1]++;
    }
  }

  // Health check endpoint
  getHealthData() {
    /* istanbul ignore next */
    cov_24sbid70js().f[11]++;
    const uptime =
    /* istanbul ignore next */
    (cov_24sbid70js().s[66]++, process.uptime());
    const memory =
    /* istanbul ignore next */
    (cov_24sbid70js().s[67]++, process.memoryUsage());
    /* istanbul ignore next */
    cov_24sbid70js().s[68]++;
    return {
      uptime: `${Math.floor(uptime / 3600)}h ${Math.floor(uptime % 3600 / 60)}m ${Math.floor(uptime % 60)}s`,
      memory: {
        used: `${(memory.heapUsed / 1024 / 1024).toFixed(2)}MB`,
        total: `${(memory.heapTotal / 1024 / 1024).toFixed(2)}MB`,
        percentage: `${(memory.heapUsed / memory.heapTotal * 100).toFixed(2)}%`
      },
      requests: {
        total: this.metrics.responseTimes.length,
        averageResponseTime: this.calculateAverageResponseTime(),
        p95ResponseTime: this.calculateP95ResponseTime(),
        errors: this.metrics.errors
      },
      endpoints: Array.from(this.metrics.endpointStats.entries()).map(([endpoint, stats]) => {
        /* istanbul ignore next */
        cov_24sbid70js().f[12]++;
        cov_24sbid70js().s[69]++;
        return {
          endpoint,
          count: stats.count,
          avgTime: `${stats.avgTime.toFixed(2)}ms`,
          p95Time: `${stats.p95Time.toFixed(2)}ms`,
          minTime: `${stats.minTime.toFixed(2)}ms`,
          maxTime: `${stats.maxTime.toFixed(2)}ms`,
          memoryImpact: `${(stats.memoryUsage.reduce((a, b) => {
            /* istanbul ignore next */
            cov_24sbid70js().f[13]++;
            cov_24sbid70js().s[70]++;
            return a + b;
          }, 0) / stats.memoryUsage.length / 1024 / 1024).toFixed(2)}MB avg`
        };
      })
    };
  }

  // Performance metrics calculation
  calculateAverageResponseTime() {
    /* istanbul ignore next */
    cov_24sbid70js().f[14]++;
    cov_24sbid70js().s[71]++;
    if (this.metrics.responseTimes.length === 0) {
      /* istanbul ignore next */
      cov_24sbid70js().b[14][0]++;
      cov_24sbid70js().s[72]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[14][1]++;
    }
    cov_24sbid70js().s[73]++;
    return this.metrics.responseTimes.reduce((a, b) => {
      /* istanbul ignore next */
      cov_24sbid70js().f[15]++;
      cov_24sbid70js().s[74]++;
      return a + b;
    }, 0) / this.metrics.responseTimes.length;
  }
  calculateP95ResponseTime() {
    /* istanbul ignore next */
    cov_24sbid70js().f[16]++;
    cov_24sbid70js().s[75]++;
    if (this.metrics.responseTimes.length === 0) {
      /* istanbul ignore next */
      cov_24sbid70js().b[15][0]++;
      cov_24sbid70js().s[76]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[15][1]++;
    }
    const sorted =
    /* istanbul ignore next */
    (cov_24sbid70js().s[77]++, [...this.metrics.responseTimes].sort((a, b) => {
      /* istanbul ignore next */
      cov_24sbid70js().f[17]++;
      cov_24sbid70js().s[78]++;
      return a - b;
    }));
    /* istanbul ignore next */
    cov_24sbid70js().s[79]++;
    return /* istanbul ignore next */(cov_24sbid70js().b[16][0]++, sorted[Math.floor(sorted.length * 0.95)]) ||
    /* istanbul ignore next */
    (cov_24sbid70js().b[16][1]++, 0);
  }

  // Alert checking
  checkAlerts() {
    /* istanbul ignore next */
    cov_24sbid70js().f[18]++;
    const avgResponseTime =
    /* istanbul ignore next */
    (cov_24sbid70js().s[80]++, this.calculateAverageResponseTime());
    const errorRate =
    /* istanbul ignore next */
    (cov_24sbid70js().s[81]++, this.metrics.errors / Math.max(this.metrics.responseTimes.length, 1));
    /* istanbul ignore next */
    cov_24sbid70js().s[82]++;
    if (avgResponseTime > this.alerts.slowResponseThreshold) {
      /* istanbul ignore next */
      cov_24sbid70js().b[17][0]++;
      cov_24sbid70js().s[83]++;
      this.logger.warn('🚨 PERFORMANCE ALERT: High average response time', {
        avgTime: `${avgResponseTime.toFixed(2)}ms`,
        threshold: `${this.alerts.slowResponseThreshold}ms`
      });
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[17][1]++;
    }
    cov_24sbid70js().s[84]++;
    if (errorRate > this.alerts.highErrorRateThreshold) {
      /* istanbul ignore next */
      cov_24sbid70js().b[18][0]++;
      cov_24sbid70js().s[85]++;
      this.logger.warn('🚨 ERROR RATE ALERT: High error rate', {
        errorRate: `${(errorRate * 100).toFixed(2)}%`,
        threshold: `${(this.alerts.highErrorRateThreshold * 100).toFixed(2)}%`
      });
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[18][1]++;
    }
    const memoryUsage =
    /* istanbul ignore next */
    (cov_24sbid70js().s[86]++, process.memoryUsage().heapUsed / process.memoryUsage().heapTotal);
    /* istanbul ignore next */
    cov_24sbid70js().s[87]++;
    if (memoryUsage > this.alerts.highMemoryThreshold) {
      /* istanbul ignore next */
      cov_24sbid70js().b[19][0]++;
      cov_24sbid70js().s[88]++;
      this.logger.warn('🚨 MEMORY ALERT: High memory usage', {
        usage: `${(memoryUsage * 100).toFixed(2)}%`,
        threshold: `${(this.alerts.highMemoryThreshold * 100).toFixed(2)}%`
      });
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[19][1]++;
    }
  }
  logPerformanceMetric(entry) {
    /* istanbul ignore next */
    cov_24sbid70js().f[19]++;
    cov_24sbid70js().s[89]++;
    this.logger.debug('Performance Metric', {
      name: entry.name,
      duration: entry.duration,
      startTime: entry.startTime,
      detail:
      /* istanbul ignore next */
      (cov_24sbid70js().b[20][0]++, entry.detail) ||
      /* istanbul ignore next */
      (cov_24sbid70js().b[20][1]++, {})
    });
  }

  // Get detailed stats for monitoring dashboard
  getDetailedStats() {
    /* istanbul ignore next */
    cov_24sbid70js().f[20]++;
    // Reset metrics periodically (every hour)
    const now =
    /* istanbul ignore next */
    (cov_24sbid70js().s[90]++, Date.now());
    /* istanbul ignore next */
    cov_24sbid70js().s[91]++;
    if (now - this.metrics.lastResetTime > 3600000) {
      /* istanbul ignore next */
      cov_24sbid70js().b[21][0]++;
      cov_24sbid70js().s[92]++;
      this.resetMetrics();
    } else
    /* istanbul ignore next */
    {
      cov_24sbid70js().b[21][1]++;
    }
    cov_24sbid70js().s[93]++;
    return {
      ...this.metrics,
      uptime: process.uptime(),
      cpu: process.cpuUsage(),
      memory: process.memoryUsage(),
      platform: process.platform,
      nodeVersion: process.version,
      pid: process.pid,
      environment: process.env.NODE_ENV
    };
  }

  // Reset metrics (for periodic cleanup)
  resetMetrics() {
    /* istanbul ignore next */
    cov_24sbid70js().f[21]++;
    cov_24sbid70js().s[94]++;
    this.metrics.lastResetTime = Date.now();
    /* istanbul ignore next */
    cov_24sbid70js().s[95]++;
    this.metrics.responseTimes = [];
    /* istanbul ignore next */
    cov_24sbid70js().s[96]++;
    this.metrics.endpointStats.clear();
    /* istanbul ignore next */
    cov_24sbid70js().s[97]++;
    this.metrics.slowQueries = [];
    /* istanbul ignore next */
    cov_24sbid70js().s[98]++;
    this.metrics.errors = 0;
    /* istanbul ignore next */
    cov_24sbid70js().s[99]++;
    this.logger.info('Performance metrics reset');
  }
}

// Export singleton instance
const performanceMonitor =
/* istanbul ignore next */
(cov_24sbid70js().s[100]++, new PerformanceMonitor());

// Health check route handler
/* istanbul ignore next */
cov_24sbid70js().s[101]++;
const getHealthCheck = (req, res) => {
  /* istanbul ignore next */
  cov_24sbid70js().f[22]++;
  cov_24sbid70js().s[102]++;
  try {
    const healthData =
    /* istanbul ignore next */
    (cov_24sbid70js().s[103]++, performanceMonitor.getHealthData());
    /* istanbul ignore next */
    cov_24sbid70js().s[104]++;
    res.json({
      status: 'healthy',
      timestamp: new Date().toISOString(),
      ...healthData
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24sbid70js().s[105]++;
    performanceMonitor.logger.error('Health check error:', error);
    /* istanbul ignore next */
    cov_24sbid70js().s[106]++;
    res.status(500).json({
      status: 'unhealthy',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
};

// Performance dashboard endpoint
/* istanbul ignore next */
cov_24sbid70js().s[107]++;
const getPerformanceDashboard = (req, res) => {
  /* istanbul ignore next */
  cov_24sbid70js().f[23]++;
  cov_24sbid70js().s[108]++;
  try {
    const detailedStats =
    /* istanbul ignore next */
    (cov_24sbid70js().s[109]++, performanceMonitor.getDetailedStats());
    /* istanbul ignore next */
    cov_24sbid70js().s[110]++;
    res.json({
      status: 'ok',
      timestamp: new Date().toISOString(),
      metrics: detailedStats,
      recommendations: generatePerformanceRecommendations(detailedStats)
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24sbid70js().s[111]++;
    performanceMonitor.logger.error('Performance dashboard error:', error);
    /* istanbul ignore next */
    cov_24sbid70js().s[112]++;
    res.status(500).json({
      status: 'error',
      error: error.message,
      timestamp: new Date().toISOString()
    });
  }
};

// Generate performance recommendations
function generatePerformanceRecommendations(metrics) {
  /* istanbul ignore next */
  cov_24sbid70js().f[24]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_24sbid70js().s[113]++, []);
  const avgResponseTime =
  /* istanbul ignore next */
  (cov_24sbid70js().s[114]++, metrics.responseTimes.reduce((a, b) => {
    /* istanbul ignore next */
    cov_24sbid70js().f[25]++;
    cov_24sbid70js().s[115]++;
    return a + b;
  }, 0) / metrics.responseTimes.length);
  /* istanbul ignore next */
  cov_24sbid70js().s[116]++;
  if (avgResponseTime > 2000) {
    /* istanbul ignore next */
    cov_24sbid70js().b[22][0]++;
    cov_24sbid70js().s[117]++;
    recommendations.push('Consider optimizing slow API endpoints (>2s avg)');
  } else
  /* istanbul ignore next */
  {
    cov_24sbid70js().b[22][1]++;
  }
  const memoryUsage =
  /* istanbul ignore next */
  (cov_24sbid70js().s[118]++, process.memoryUsage().heapUsed / process.memoryUsage().heapTotal);
  /* istanbul ignore next */
  cov_24sbid70js().s[119]++;
  if (memoryUsage > 0.8) {
    /* istanbul ignore next */
    cov_24sbid70js().b[23][0]++;
    cov_24sbid70js().s[120]++;
    recommendations.push('High memory usage detected - consider memory optimization');
  } else
  /* istanbul ignore next */
  {
    cov_24sbid70js().b[23][1]++;
  }
  cov_24sbid70js().s[121]++;
  if (metrics.errors / Math.max(metrics.responseTimes.length, 1) > 0.1) {
    /* istanbul ignore next */
    cov_24sbid70js().b[24][0]++;
    cov_24sbid70js().s[122]++;
    recommendations.push('High error rate - investigate error causes');
  } else
  /* istanbul ignore next */
  {
    cov_24sbid70js().b[24][1]++;
  }
  cov_24sbid70js().s[123]++;
  if (recommendations.length === 0) {
    /* istanbul ignore next */
    cov_24sbid70js().b[25][0]++;
    cov_24sbid70js().s[124]++;
    recommendations.push('Performance looks good! 👍');
  } else
  /* istanbul ignore next */
  {
    cov_24sbid70js().b[25][1]++;
  }
  cov_24sbid70js().s[125]++;
  return recommendations;
}
/* istanbul ignore next */
cov_24sbid70js().s[126]++;
module.exports = {
  performanceMonitor,
  apiPerformanceMiddleware: () => {
    /* istanbul ignore next */
    cov_24sbid70js().f[26]++;
    cov_24sbid70js().s[127]++;
    return performanceMonitor.apiPerformanceMiddleware();
  },
  dbQueryPerformanceMiddleware: () => {
    /* istanbul ignore next */
    cov_24sbid70js().f[27]++;
    cov_24sbid70js().s[128]++;
    return performanceMonitor.dbQueryPerformanceMiddleware();
  },
  getHealthCheck,
  getPerformanceDashboard,
  generatePerformanceRecommendations
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,