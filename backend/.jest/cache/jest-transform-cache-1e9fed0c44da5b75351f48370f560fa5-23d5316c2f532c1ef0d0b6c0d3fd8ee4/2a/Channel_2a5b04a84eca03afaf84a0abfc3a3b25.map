{"version":3,"names":["mongoose","require","channelSchema","Schema","id","type","String","required","unique","trim","name","maxlength","parent","default","enum","description","position","Number","createdBy","createdAt","Date","now","updatedAt","permissions","read","write","locked","Boolean","index","pre","next","isNew","baseId","toLowerCase","replace","Math","random","toString","substr","uniqueId","counter","existing","constructor","findOne","methods","safeDelete","MessageModel","messageCount","countDocuments","channel","Error","deleteOne","module","exports","model"],"sources":["Channel.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst channelSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true\n  },\n  name: {\n    type: String,\n    required: true,\n    trim: true,\n    maxlength: 100\n  },\n  parent: {\n    type: String,\n    default: null\n  },\n  type: {\n    type: String,\n    enum: ['text', 'voice'],\n    required: true\n  },\n  description: {\n    type: String,\n    maxlength: 500\n  },\n  position: {\n    type: Number,\n    default: 0\n  },\n  createdBy: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  updatedAt: {\n    type: Date,\n    default: Date.now\n  },\n  permissions: {\n    read: {\n      type: String,\n      enum: ['everyone', 'admin'],\n      default: 'everyone'\n    },\n    write: {\n      type: String,\n      enum: ['everyone', 'admin'],\n      default: 'everyone'\n    }\n  },\n  locked: {\n    type: Boolean,\n    default: false\n  }\n});\n\n// Indexes\nchannelSchema.index({ id: 1, type: 1 }); // For channel queries by type\nchannelSchema.index({ parent: 1 }); // For nested channels\nchannelSchema.index({ position: 1 }); // For ordering\n\n// Generate unique ID from name and handle slug\nchannelSchema.pre('save', async function(next) {\n  this.updatedAt = new Date();\n\n  if (this.isNew && this.name && !this.id) {\n    // Generate base ID from name\n    let baseId = this.name.toLowerCase()\n      .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\n      .replace(/-+/g, '-') // Replace multiple hyphens with single\n      .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens\n\n    // Ensure ID is not empty\n    if (!baseId) {\n      baseId = 'channel-' + Date.now() + '-' + Math.random().toString(36).substr(2, 9);\n    }\n\n    // Ensure uniqueness\n    let uniqueId = baseId;\n    let counter = 1;\n    let existing = await this.constructor.findOne({ id: uniqueId });\n\n    while (existing) {\n      uniqueId = `${baseId}-${counter}`;\n      counter++;\n      existing = await this.constructor.findOne({ id: uniqueId });\n    }\n\n    this.id = uniqueId;\n  }\n\n  next();\n});\n\n// Remove channel method (used for deleting with checks)\nchannelSchema.methods.safeDelete = async function() {\n   const MessageModel = require('./Message'); // Ensure model is loaded\n   // Count messages in this channel\n   const messageCount = await MessageModel.countDocuments({ channel: this.id });\n\n   if (messageCount > 0) {\n     throw new Error(`Cannot delete channel with ${messageCount} messages. Channel must be empty or archived.`);\n   }\n\n   return this.deleteOne();\n};\n\nmodule.exports = mongoose.model('Channel', channelSchema);"],"mappings":"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","ignoreList":[]}