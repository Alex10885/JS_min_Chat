{"version":3,"names":["mongoose","require","bcrypt","crypto","userSchema","Schema","nickname","type","String","required","unique","trim","minlength","maxlength","email","lowercase","password","role","enum","default","createdAt","Date","now","lastActive","status","resetPasswordToken","resetPasswordExpires","index","pre","next","isModified","console","log","salt","genSalt","hash","error","message","methods","comparePassword","candidatePassword","compare","generateResetToken","resetToken","randomBytes","toString","createHash","update","digest","resetPassword","token","newPassword","hashedToken","Error","save","toJSON","userObject","toObject","module","exports","model"],"sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst crypto = require('crypto');\n\nconst userSchema = new mongoose.Schema({\n  nickname: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    minlength: 3,\n    maxlength: 50\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'member'],\n    default: 'member'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  lastActive: {\n    type: Date,\n    default: Date.now\n  },\n  status: {\n    type: String,\n    enum: ['online', 'offline'],\n    default: 'offline'\n  },\n  resetPasswordToken: {\n    type: String,\n    default: null\n  },\n  resetPasswordExpires: {\n    type: Date,\n    default: null\n  }\n});\n\n// Index for performance\nuserSchema.index({ nickname: 1 });\nuserSchema.index({ email: 1 });\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n   if (!this.isModified('password')) return next();\n\n   console.log('Hashing password for user:', this.nickname);\n   try {\n     const salt = await bcrypt.genSalt(12);\n     console.log('Salt generated:', salt);\n     this.password = await bcrypt.hash(this.password, salt);\n     console.log('Password hashed successfully');\n     next();\n   } catch (error) {\n     console.error('Error hashing password:', error.message);\n     next(error);\n   }\n });\n\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\n// Generate reset password token\nuserSchema.methods.generateResetToken = function() {\n  // Generate random token\n  const resetToken = crypto.randomBytes(32).toString('hex');\n\n  // Hash token before storing\n  this.resetPasswordToken = crypto\n    .createHash('sha256')\n    .update(resetToken)\n    .digest('hex');\n\n  // Set expiration (1 hour from now)\n  this.resetPasswordExpires = Date.now() + 60 * 60 * 1000; // 1 hour\n\n  return resetToken;\n};\n\n// Reset password using token\nuserSchema.methods.resetPassword = function(token, newPassword) {\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(token)\n    .digest('hex');\n\n  if (hashedToken !== this.resetPasswordToken) {\n    throw new Error('Invalid or expired password reset token');\n  }\n\n  if (Date.now() > this.resetPasswordExpires) {\n    throw new Error('Password reset token has expired');\n  }\n\n  this.password = newPassword;\n  this.resetPasswordToken = null;\n  this.resetPasswordExpires = null;\n\n  return this.save();\n};\n\n// Remove password from JSON output\nuserSchema.methods.toJSON = function() {\n  const userObject = this.toObject();\n  delete userObject.password;\n  return userObject;\n};\n\nmodule.exports = mongoose.model('User', userSchema);"],"mappings":"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","ignoreList":[]}