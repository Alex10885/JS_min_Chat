{"version":3,"names":["cov_24b6m5euke","actualCoverage","jwt","s","require","winston","config","User","logger","createLogger","level","format","combine","timestamp","errors","stack","json","defaultMeta","service","transports","File","filename","Console","colorize","simple","authenticateSession","req","res","next","f","console","log","url","method","sessionId","sessionID","sessionExists","session","sessionData","b","authenticated","userId","nickname","role","loginTime","csrfToken","substring","sid","userAgent","user","findById","id","_id","status","sessionValid","sessionUser","lastSessionCheck","Date","toISOString","error","warn","message","ip","authenticateToken","authHeader","headers","token","split","hasAuthHeader","hasToken","code","decoded","verify","security","jwtSecret","name","requireModerator","hasModeratorPrivileges","requireAdmin","hasAdminPrivileges","module","exports"],"sources":["auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst winston = require('winston');\nconst config = require('../config');\nconst User = require('../models/User');\n\nconst logger = winston.createLogger({\n  level: config.logger.level,\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'chat-server-auth' },\n  transports: [\n    new winston.transports.File({ filename: 'logs/server.log' }),\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.simple()\n      )\n    })\n  ]\n});\n\n// Session authentication middleware (works parallel to JWT)\nconst authenticateSession = async (req, res, next) => {\n  try {\n    console.log('🔐 Session authentication middleware called:', {\n      url: req.url,\n      method: req.method,\n      sessionId: req.sessionID,\n      sessionExists: !!req.session,\n      sessionData: req.session ? {\n        authenticated: req.session.authenticated,\n        userId: req.session.userId,\n        nickname: req.session.nickname,\n        role: req.session.role,\n        loginTime: req.session.loginTime,\n        csrfToken: req.session.csrfToken?.substring(0, 8) + '...'\n      } : null\n    });\n\n    // Check if session exists and has authenticated user\n    if (req.session && req.session.authenticated && req.session.userId) {\n      console.log('🎯 Found authenticated session for userId:', req.session.userId);\n      console.log('🔓 Session fingerprint check:', {\n        sid: req.sessionID,\n        csrfToken: req.session.csrfToken?.substring(0, 4) + '...',\n        userAgent: req.session.userAgent?.substring(0, 20) + '...',\n        loginTime: req.session.loginTime\n      });\n\n      const user = await User.findById(req.session.userId);\n      if (user) {\n        console.log('✅ Session user found in DB:', {\n          nickname: user.nickname,\n          id: user._id,\n          status: user.status,\n          sessionValid: true\n        });\n        req.sessionUser = user; // Store in req.sessionUser to avoid conflict with JWT req.user\n\n        // Update session fingerprint if needed\n        if (req.session.csrfToken && req.session.userAgent) {\n          req.session.lastSessionCheck = new Date().toISOString();\n          console.log('🔐 Session fingerprint verified and updated');\n        }\n      } else {\n        console.log('⚠️ Session user not found in DB, cleaning session:', req.session.userId);\n        // Clean invalid session\n        delete req.session.authenticated;\n        delete req.session.userId;\n        delete req.session.nickname;\n        delete req.session.role;\n      }\n    } else {\n      console.log('🔍 No authenticated session found or session not initialized', {\n        sessionId: req.sessionID,\n        session: !!req.session,\n        authenticated: req.session?.authenticated,\n        userId: req.session?.userId\n      });\n      req.sessionUser = null; // Explicitly set to null when no session\n    }\n    next();\n  } catch (error) {\n    logger.warn('Session authentication error:', {\n      error: error.message,\n      sessionId: req.sessionID,\n      ip: req.ip\n    });\n    req.sessionUser = null; // Set to null on error\n    next();\n  }\n};\n\n// JWT authentication middleware\nconst authenticateToken = async (req, res, next) => {\n  try {\n    console.log('🔐 JWT authentication middleware called:', { url: req.url, method: req.method });\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n\n    console.log('🔑 Token extraction result:', { hasAuthHeader: !!authHeader, hasToken: !!token });\n\n    if (!token) {\n      console.log('❌ No token provided');\n      return res.status(401).json({\n        error: 'Access token required',\n        code: 'NO_TOKEN'\n      });\n    }\n\n    const decoded = jwt.verify(token, config.security.jwtSecret);\n    console.log('✅ JWT decoded:', { userId: decoded.userId, nickname: decoded.nickname });\n    const user = await User.findById(decoded.userId);\n\n    if (!user) {\n      console.log('❌ User not found in DB for JWT userId:', decoded.userId);\n      return res.status(401).json({\n        error: 'User not found',\n        code: 'USER_NOT_FOUND'\n      });\n    }\n\n    req.user = user;\n    console.log('✅ JWT authentication successful for user:', user.nickname, { id: user._id, status: user.status });\n    next();\n  } catch (error) {\n    logger.warn('JWT authentication failed:', {\n      error: error.message,\n      ip: req.ip\n    });\n\n    if (error.name === 'JsonWebTokenError') {\n      return res.status(401).json({\n        error: 'Invalid token format',\n        code: 'INVALID_TOKEN_FORMAT'\n      });\n    }\n\n    if (error.name === 'TokenExpiredError') {\n      return res.status(401).json({\n        error: 'Token has expired',\n        code: 'TOKEN_EXPIRED'\n      });\n    }\n\n    return res.status(401).json({\n      error: 'Token verification failed',\n      code: 'TOKEN_VERIFICATION_FAILED'\n    });\n  }\n};\n\n// Role-based access control middleware\nconst requireModerator = async (req, res, next) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        error: 'Authentication required',\n        code: 'AUTH_REQUIRED'\n      });\n    }\n\n    if (!req.user.hasModeratorPrivileges()) {\n      return res.status(403).json({\n        error: 'Moderator privileges required',\n        code: 'MODERATOR_REQUIRED'\n      });\n    }\n\n    next();\n  } catch (error) {\n    logger.error('Moderator check error:', error);\n    res.status(500).json({\n      error: 'Server error during authorization check',\n      code: 'AUTH_CHECK_ERROR'\n    });\n  }\n};\n\nconst requireAdmin = async (req, res, next) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        error: 'Authentication required',\n        code: 'AUTH_REQUIRED'\n      });\n    }\n\n    if (!req.user.hasAdminPrivileges()) {\n      return res.status(403).json({\n        error: 'Administrator privileges required',\n        code: 'ADMIN_REQUIRED'\n      });\n    }\n\n    next();\n  } catch (error) {\n    logger.error('Admin check error:', error);\n    res.status(500).json({\n      error: 'Server error during authorization check',\n      code: 'AUTH_CHECK_ERROR'\n    });\n  }\n};\n\nmodule.exports = {\n  authenticateSession,\n  authenticateToken,\n  requireModerator,\n  requireAdmin,\n  logger\n};"],"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","ignoreList":[]}