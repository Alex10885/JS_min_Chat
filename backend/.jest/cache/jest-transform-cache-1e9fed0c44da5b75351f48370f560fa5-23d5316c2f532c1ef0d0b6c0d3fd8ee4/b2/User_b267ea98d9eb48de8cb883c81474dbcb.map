{"version":3,"names":["mongoose","require","bcrypt","crypto","userSchema","Schema","nickname","type","String","required","unique","trim","minlength","maxlength","index","email","lowercase","password","role","enum","default","createdAt","Date","now","lastActive","status","banned","Boolean","banReason","banExpires","warnings","reason","issuedBy","Types","ObjectId","ref","issuedAt","expires","muteExpires","resetPasswordToken","resetPasswordExpires","moderationToken","moderationTokenExpires","pre","next","isModified","console","log","salt","genSalt","hash","error","message","methods","comparePassword","candidatePassword","compare","generateResetToken","resetToken","randomBytes","toString","createHash","update","digest","resetPassword","token","newPassword","hashedToken","Error","save","ban","duration","unban","isBanned","warn","warning","push","cleanWarnings","filter","getActiveWarningsCount","length","mute","unmute","isMuted","generateModerationToken","then","verifyModerationToken","hasModeratorPrivileges","hasAdminPrivileges","toJSON","userObject","toObject","module","exports","models","User","model"],"sources":["User.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst crypto = require('crypto');\n\nconst userSchema = new mongoose.Schema({\n  nickname: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n    minlength: 3,\n    maxlength: 50,\n    index: true // Remove duplicate index call below\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    lowercase: true,\n    trim: true,\n    index: true // Remove duplicate index call below\n  },\n  password: {\n    type: String,\n    required: true,\n    minlength: 6\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'moderator', 'member'],\n    default: 'member'\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now\n  },\n  lastActive: {\n    type: Date,\n    default: Date.now\n  },\n  status: {\n    type: String,\n    enum: ['online', 'offline'],\n    default: 'offline'\n  },\n  // Moderation fields\n  banned: {\n    type: Boolean,\n    default: false\n  },\n  banReason: {\n    type: String,\n    default: null\n  },\n  banExpires: {\n    type: Date,\n    default: null\n  },\n  warnings: [{\n    reason: String,\n    issuedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },\n    issuedAt: { type: Date, default: Date.now },\n    expires: Date\n  }],\n  muteExpires: {\n    type: Date,\n    default: null\n  },\n  // Temporary tokens\n  resetPasswordToken: {\n    type: String,\n    default: null\n  },\n  resetPasswordExpires: {\n    type: Date,\n    default: null\n  },\n  moderationToken: {\n    type: String,\n    default: null\n  },\n  moderationTokenExpires: {\n    type: Date,\n    default: null\n  }\n});\n\n// Hash password before saving\nuserSchema.pre('save', async function(next) {\n   if (!this.isModified('password')) return next();\n\n   console.log('Hashing password for user:', this.nickname);\n   try {\n     const salt = await bcrypt.genSalt(12);\n     console.log('Salt generated:', salt);\n     this.password = await bcrypt.hash(this.password, salt);\n     console.log('Password hashed successfully');\n     next();\n   } catch (error) {\n     console.error('Error hashing password:', error.message);\n     next(error);\n   }\n });\n\n// Compare password method\nuserSchema.methods.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\n// Generate reset password token\nuserSchema.methods.generateResetToken = function() {\n  // Generate random token\n  const resetToken = crypto.randomBytes(32).toString('hex');\n\n  // Hash token before storing\n  this.resetPasswordToken = crypto\n    .createHash('sha256')\n    .update(resetToken)\n    .digest('hex');\n\n  // Set expiration (1 hour from now)\n  this.resetPasswordExpires = Date.now() + 60 * 60 * 1000; // 1 hour\n\n  return resetToken;\n};\n\n// Reset password using token\nuserSchema.methods.resetPassword = function(token, newPassword) {\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(token)\n    .digest('hex');\n\n  if (hashedToken !== this.resetPasswordToken) {\n    throw new Error('Invalid or expired password reset token');\n  }\n\n  if (Date.now() > this.resetPasswordExpires) {\n    throw new Error('Password reset token has expired');\n  }\n\n  this.password = newPassword;\n  this.resetPasswordToken = null;\n  this.resetPasswordExpires = null;\n\n  return this.save();\n};\n\n// Ban user\nuserSchema.methods.ban = function(reason, duration = null, issuedBy = null) {\n  this.banned = true;\n  this.banReason = reason;\n  if (duration) {\n    this.banExpires = new Date(Date.now() + duration);\n  } else {\n    this.banExpires = null; // permanent ban\n  }\n  return this.save();\n};\n\n// Unban user\nuserSchema.methods.unban = function() {\n  this.banned = false;\n  this.banReason = null;\n  this.banExpires = null;\n  return this.save();\n};\n\n// Check if user is banned and if ban is active\nuserSchema.methods.isBanned = function() {\n  if (!this.banned) return false;\n  if (!this.banExpires) return true; // permanent ban\n  return this.banExpires > new Date(); // temporary ban still active\n};\n\n// Add warning to user\nuserSchema.methods.warn = function(reason, issuedBy, duration = null) {\n  const warning = {\n    reason: reason,\n    issuedBy: issuedBy,\n    issuedAt: new Date(),\n    expires: duration ? new Date(Date.now() + duration) : null\n  };\n  this.warnings.push(warning);\n  return this.save();\n};\n\n// Remove expired warnings\nuserSchema.methods.cleanWarnings = function() {\n  this.warnings = this.warnings.filter(warning => {\n    return !warning.expires || warning.expires > new Date();\n  });\n  return this.save();\n};\n\n// Get active warnings count\nuserSchema.methods.getActiveWarningsCount = function() {\n  this.cleanWarnings();\n  return this.warnings.length;\n};\n\n// Mute user (for chat)\nuserSchema.methods.mute = function(duration = 3600000) { // default 1 hour\n  this.muteExpires = new Date(Date.now() + duration);\n  return this.save();\n};\n\n// Unmute user\nuserSchema.methods.unmute = function() {\n  this.muteExpires = null;\n  return this.save();\n};\n\n// Check if user is muted\nuserSchema.methods.isMuted = function() {\n  return this.muteExpires && this.muteExpires > new Date();\n};\n\n// Generate moderation token for admin actions\nuserSchema.methods.generateModerationToken = function() {\n  const moderationToken = crypto.randomBytes(32).toString('hex');\n  this.moderationToken = crypto\n    .createHash('sha256')\n    .update(moderationToken)\n    .digest('hex');\n  this.moderationTokenExpires = Date.now() + 3600000; // 1 hour\n  return this.save().then(() => moderationToken);\n};\n\n// Verify moderation token\nuserSchema.methods.verifyModerationToken = function(token) {\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(token)\n    .digest('hex');\n\n  if (hashedToken !== this.moderationToken) {\n    throw new Error('Invalid moderation token');\n  }\n\n  if (Date.now() > this.moderationTokenExpires) {\n    throw new Error('Moderation token expired');\n  }\n\n  this.moderationToken = null;\n  this.moderationTokenExpires = null;\n  return this.save();\n};\n\n// Check if user has moderator/admin permissions\nuserSchema.methods.hasModeratorPrivileges = function() {\n  return this.role === 'admin' || this.role === 'moderator';\n};\n\nuserSchema.methods.hasAdminPrivileges = function() {\n  return this.role === 'admin';\n};\n\n// Remove password and sensitive data from JSON output\nuserSchema.methods.toJSON = function() {\n  const userObject = this.toObject();\n  delete userObject.password;\n  delete userObject.resetPasswordToken;\n  delete userObject.resetPasswordExpires;\n  delete userObject.moderationToken;\n  delete userObject.moderationTokenExpires;\n  // Don't show ban details to regular users\n  if (!this.hasModeratorPrivileges()) {\n    delete userObject.banReason;\n    delete userObject.banExpires;\n    delete userObject.warnings;\n  }\n  return userObject;\n};\n\n// Prevent OverwriteModelError by checking existing models\nmodule.exports = mongoose.models.User || mongoose.model('User', userSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,MAAME,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAEhC,MAAMG,UAAU,GAAG,IAAIJ,QAAQ,CAACK,MAAM,CAAC;EACrCC,QAAQ,EAAE;IACRC,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE,IAAI;IACVC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,IAAI,CAAC;EACd,CAAC;EACDC,KAAK,EAAE;IACLR,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZM,SAAS,EAAE,IAAI;IACfL,IAAI,EAAE,IAAI;IACVG,KAAK,EAAE,IAAI,CAAC;EACd,CAAC;EACDG,QAAQ,EAAE;IACRV,IAAI,EAAEC,MAAM;IACZC,QAAQ,EAAE,IAAI;IACdG,SAAS,EAAE;EACb,CAAC;EACDM,IAAI,EAAE;IACJX,IAAI,EAAEC,MAAM;IACZW,IAAI,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,QAAQ,CAAC;IACtCC,OAAO,EAAE;EACX,CAAC;EACDC,SAAS,EAAE;IACTd,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAEE,IAAI,CAACC;EAChB,CAAC;EACDC,UAAU,EAAE;IACVjB,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAEE,IAAI,CAACC;EAChB,CAAC;EACDE,MAAM,EAAE;IACNlB,IAAI,EAAEC,MAAM;IACZW,IAAI,EAAE,CAAC,QAAQ,EAAE,SAAS,CAAC;IAC3BC,OAAO,EAAE;EACX,CAAC;EACD;EACAM,MAAM,EAAE;IACNnB,IAAI,EAAEoB,OAAO;IACbP,OAAO,EAAE;EACX,CAAC;EACDQ,SAAS,EAAE;IACTrB,IAAI,EAAEC,MAAM;IACZY,OAAO,EAAE;EACX,CAAC;EACDS,UAAU,EAAE;IACVtB,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAE;EACX,CAAC;EACDU,QAAQ,EAAE,CAAC;IACTC,MAAM,EAAEvB,MAAM;IACdwB,QAAQ,EAAE;MAAEzB,IAAI,EAAEP,QAAQ,CAACK,MAAM,CAAC4B,KAAK,CAACC,QAAQ;MAAEC,GAAG,EAAE;IAAO,CAAC;IAC/DC,QAAQ,EAAE;MAAE7B,IAAI,EAAEe,IAAI;MAAEF,OAAO,EAAEE,IAAI,CAACC;IAAI,CAAC;IAC3Cc,OAAO,EAAEf;EACX,CAAC,CAAC;EACFgB,WAAW,EAAE;IACX/B,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAE;EACX,CAAC;EACD;EACAmB,kBAAkB,EAAE;IAClBhC,IAAI,EAAEC,MAAM;IACZY,OAAO,EAAE;EACX,CAAC;EACDoB,oBAAoB,EAAE;IACpBjC,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAE;EACX,CAAC;EACDqB,eAAe,EAAE;IACflC,IAAI,EAAEC,MAAM;IACZY,OAAO,EAAE;EACX,CAAC;EACDsB,sBAAsB,EAAE;IACtBnC,IAAI,EAAEe,IAAI;IACVF,OAAO,EAAE;EACX;AACF,CAAC,CAAC;;AAEF;AACAhB,UAAU,CAACuC,GAAG,CAAC,MAAM,EAAE,gBAAeC,IAAI,EAAE;EACzC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE,OAAOD,IAAI,CAAC,CAAC;EAE/CE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACzC,QAAQ,CAAC;EACxD,IAAI;IACF,MAAM0C,IAAI,GAAG,MAAM9C,MAAM,CAAC+C,OAAO,CAAC,EAAE,CAAC;IACrCH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,IAAI,CAAC;IACpC,IAAI,CAAC/B,QAAQ,GAAG,MAAMf,MAAM,CAACgD,IAAI,CAAC,IAAI,CAACjC,QAAQ,EAAE+B,IAAI,CAAC;IACtDF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3CH,IAAI,CAAC,CAAC;EACR,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACvDR,IAAI,CAACO,KAAK,CAAC;EACb;AACF,CAAC,CAAC;;AAEH;AACA/C,UAAU,CAACiD,OAAO,CAACC,eAAe,GAAG,gBAAeC,iBAAiB,EAAE;EACrE,OAAOrD,MAAM,CAACsD,OAAO,CAACD,iBAAiB,EAAE,IAAI,CAACtC,QAAQ,CAAC;AACzD,CAAC;;AAED;AACAb,UAAU,CAACiD,OAAO,CAACI,kBAAkB,GAAG,YAAW;EACjD;EACA,MAAMC,UAAU,GAAGvD,MAAM,CAACwD,WAAW,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,IAAI,CAACrB,kBAAkB,GAAGpC,MAAM,CAC7B0D,UAAU,CAAC,QAAQ,CAAC,CACpBC,MAAM,CAACJ,UAAU,CAAC,CAClBK,MAAM,CAAC,KAAK,CAAC;;EAEhB;EACA,IAAI,CAACvB,oBAAoB,GAAGlB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;EAEzD,OAAOmC,UAAU;AACnB,CAAC;;AAED;AACAtD,UAAU,CAACiD,OAAO,CAACW,aAAa,GAAG,UAASC,KAAK,EAAEC,WAAW,EAAE;EAC9D,MAAMC,WAAW,GAAGhE,MAAM,CACvB0D,UAAU,CAAC,QAAQ,CAAC,CACpBC,MAAM,CAACG,KAAK,CAAC,CACbF,MAAM,CAAC,KAAK,CAAC;EAEhB,IAAII,WAAW,KAAK,IAAI,CAAC5B,kBAAkB,EAAE;IAC3C,MAAM,IAAI6B,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,IAAI9C,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACiB,oBAAoB,EAAE;IAC1C,MAAM,IAAI4B,KAAK,CAAC,kCAAkC,CAAC;EACrD;EAEA,IAAI,CAACnD,QAAQ,GAAGiD,WAAW;EAC3B,IAAI,CAAC3B,kBAAkB,GAAG,IAAI;EAC9B,IAAI,CAACC,oBAAoB,GAAG,IAAI;EAEhC,OAAO,IAAI,CAAC6B,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAACiB,GAAG,GAAG,UAASvC,MAAM,EAAEwC,QAAQ,GAAG,IAAI,EAAEvC,QAAQ,GAAG,IAAI,EAAE;EAC1E,IAAI,CAACN,MAAM,GAAG,IAAI;EAClB,IAAI,CAACE,SAAS,GAAGG,MAAM;EACvB,IAAIwC,QAAQ,EAAE;IACZ,IAAI,CAAC1C,UAAU,GAAG,IAAIP,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgD,QAAQ,CAAC;EACnD,CAAC,MAAM;IACL,IAAI,CAAC1C,UAAU,GAAG,IAAI,CAAC,CAAC;EAC1B;EACA,OAAO,IAAI,CAACwC,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAACmB,KAAK,GAAG,YAAW;EACpC,IAAI,CAAC9C,MAAM,GAAG,KAAK;EACnB,IAAI,CAACE,SAAS,GAAG,IAAI;EACrB,IAAI,CAACC,UAAU,GAAG,IAAI;EACtB,OAAO,IAAI,CAACwC,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAACoB,QAAQ,GAAG,YAAW;EACvC,IAAI,CAAC,IAAI,CAAC/C,MAAM,EAAE,OAAO,KAAK;EAC9B,IAAI,CAAC,IAAI,CAACG,UAAU,EAAE,OAAO,IAAI,CAAC,CAAC;EACnC,OAAO,IAAI,CAACA,UAAU,GAAG,IAAIP,IAAI,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC;;AAED;AACAlB,UAAU,CAACiD,OAAO,CAACqB,IAAI,GAAG,UAAS3C,MAAM,EAAEC,QAAQ,EAAEuC,QAAQ,GAAG,IAAI,EAAE;EACpE,MAAMI,OAAO,GAAG;IACd5C,MAAM,EAAEA,MAAM;IACdC,QAAQ,EAAEA,QAAQ;IAClBI,QAAQ,EAAE,IAAId,IAAI,CAAC,CAAC;IACpBe,OAAO,EAAEkC,QAAQ,GAAG,IAAIjD,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgD,QAAQ,CAAC,GAAG;EACxD,CAAC;EACD,IAAI,CAACzC,QAAQ,CAAC8C,IAAI,CAACD,OAAO,CAAC;EAC3B,OAAO,IAAI,CAACN,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAACwB,aAAa,GAAG,YAAW;EAC5C,IAAI,CAAC/C,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACgD,MAAM,CAACH,OAAO,IAAI;IAC9C,OAAO,CAACA,OAAO,CAACtC,OAAO,IAAIsC,OAAO,CAACtC,OAAO,GAAG,IAAIf,IAAI,CAAC,CAAC;EACzD,CAAC,CAAC;EACF,OAAO,IAAI,CAAC+C,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAAC0B,sBAAsB,GAAG,YAAW;EACrD,IAAI,CAACF,aAAa,CAAC,CAAC;EACpB,OAAO,IAAI,CAAC/C,QAAQ,CAACkD,MAAM;AAC7B,CAAC;;AAED;AACA5E,UAAU,CAACiD,OAAO,CAAC4B,IAAI,GAAG,UAASV,QAAQ,GAAG,OAAO,EAAE;EAAE;EACvD,IAAI,CAACjC,WAAW,GAAG,IAAIhB,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGgD,QAAQ,CAAC;EAClD,OAAO,IAAI,CAACF,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAAC6B,MAAM,GAAG,YAAW;EACrC,IAAI,CAAC5C,WAAW,GAAG,IAAI;EACvB,OAAO,IAAI,CAAC+B,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAAC8B,OAAO,GAAG,YAAW;EACtC,OAAO,IAAI,CAAC7C,WAAW,IAAI,IAAI,CAACA,WAAW,GAAG,IAAIhB,IAAI,CAAC,CAAC;AAC1D,CAAC;;AAED;AACAlB,UAAU,CAACiD,OAAO,CAAC+B,uBAAuB,GAAG,YAAW;EACtD,MAAM3C,eAAe,GAAGtC,MAAM,CAACwD,WAAW,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAC;EAC9D,IAAI,CAACnB,eAAe,GAAGtC,MAAM,CAC1B0D,UAAU,CAAC,QAAQ,CAAC,CACpBC,MAAM,CAACrB,eAAe,CAAC,CACvBsB,MAAM,CAAC,KAAK,CAAC;EAChB,IAAI,CAACrB,sBAAsB,GAAGpB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;EACpD,OAAO,IAAI,CAAC8C,IAAI,CAAC,CAAC,CAACgB,IAAI,CAAC,MAAM5C,eAAe,CAAC;AAChD,CAAC;;AAED;AACArC,UAAU,CAACiD,OAAO,CAACiC,qBAAqB,GAAG,UAASrB,KAAK,EAAE;EACzD,MAAME,WAAW,GAAGhE,MAAM,CACvB0D,UAAU,CAAC,QAAQ,CAAC,CACpBC,MAAM,CAACG,KAAK,CAAC,CACbF,MAAM,CAAC,KAAK,CAAC;EAEhB,IAAII,WAAW,KAAK,IAAI,CAAC1B,eAAe,EAAE;IACxC,MAAM,IAAI2B,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EAEA,IAAI9C,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAACmB,sBAAsB,EAAE;IAC5C,MAAM,IAAI0B,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EAEA,IAAI,CAAC3B,eAAe,GAAG,IAAI;EAC3B,IAAI,CAACC,sBAAsB,GAAG,IAAI;EAClC,OAAO,IAAI,CAAC2B,IAAI,CAAC,CAAC;AACpB,CAAC;;AAED;AACAjE,UAAU,CAACiD,OAAO,CAACkC,sBAAsB,GAAG,YAAW;EACrD,OAAO,IAAI,CAACrE,IAAI,KAAK,OAAO,IAAI,IAAI,CAACA,IAAI,KAAK,WAAW;AAC3D,CAAC;AAEDd,UAAU,CAACiD,OAAO,CAACmC,kBAAkB,GAAG,YAAW;EACjD,OAAO,IAAI,CAACtE,IAAI,KAAK,OAAO;AAC9B,CAAC;;AAED;AACAd,UAAU,CAACiD,OAAO,CAACoC,MAAM,GAAG,YAAW;EACrC,MAAMC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;EAClC,OAAOD,UAAU,CAACzE,QAAQ;EAC1B,OAAOyE,UAAU,CAACnD,kBAAkB;EACpC,OAAOmD,UAAU,CAAClD,oBAAoB;EACtC,OAAOkD,UAAU,CAACjD,eAAe;EACjC,OAAOiD,UAAU,CAAChD,sBAAsB;EACxC;EACA,IAAI,CAAC,IAAI,CAAC6C,sBAAsB,CAAC,CAAC,EAAE;IAClC,OAAOG,UAAU,CAAC9D,SAAS;IAC3B,OAAO8D,UAAU,CAAC7D,UAAU;IAC5B,OAAO6D,UAAU,CAAC5D,QAAQ;EAC5B;EACA,OAAO4D,UAAU;AACnB,CAAC;;AAED;AACAE,MAAM,CAACC,OAAO,GAAG7F,QAAQ,CAAC8F,MAAM,CAACC,IAAI,IAAI/F,QAAQ,CAACgG,KAAK,CAAC,MAAM,EAAE5F,UAAU,CAAC","ignoreList":[]}