# =====================================
# CHAT-JS FRONTEND NGINX PRODUCTION CONFIG
# =====================================

user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    use epoll;
    worker_connections 65535;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format for production
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$host" sn="$server_name" '
                    'rt=$request_time '
                    'ua="$upstream_addr" us="$upstream_status" '
                    'ut="$upstream_response_time" ul="$upstream_response_length" '
                    'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_body_timeout 12;
    client_header_timeout 12;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting for frontend
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Security headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Apply rate limiting
        location / {
            limit_req zone=frontend burst=5 nodelay;
            try_files $uri $uri/ /index.html;

            # Cache static assets aggressively
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                limit_req zone=static burst=10 nodelay;
                expires 1y;
                add_header Cache-Control "public, immutable, max-age=31536000";
                add_header X-Cache-Control "public, immutable, max-age=31536000";

                # CORS for static assets
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
            }

            # Service Worker
            location /sw.js {
                add_header Cache-Control "no-cache";
                add_header Service-Worker-Allowed /;
            }

            # SPA fallback
            location ~* ^(?!(/api|/health)).* {
                try_files $uri $uri/ /index.html;
            }
        }
    }
}